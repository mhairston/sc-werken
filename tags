!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
*aboutPoint	SCClassLibrary/Common/Geometry/Rect.sc	/^	*aboutPoint { arg point, dx, dy;$/;"	m
*abrevPath	SCClassLibrary/Common/GUI/Document.sc	/^	*abrevPath { | path |$/;"	m
*abrevPath	quarks/cruciallib/Sample/Sample.sc	/^	*abrevPath { arg path;$/;"	m
*actionNumberFor	SCClassLibrary/Common/Control/Node.sc	/^	*actionNumberFor { |addAction = (\\addToHead)| ^addActions[addAction] }$/;"	m
*add	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*add { arg obj;$/;"	m
*add	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*add { arg aScheme;$/;"	m
*add	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*add { arg resp;$/;"	m
*add	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*add { arg responder;$/;"	m
*add	SCClassLibrary/Common/Control/SystemActions.sc	/^	*add { arg object, server;$/;"	m
*add	SCClassLibrary/Common/Control/SystemActions.sc	/^	*add { arg object;$/;"	m
*add	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*add { arg aScheme;$/;"	m
*add	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*add { arg name, args;$/;"	m
*add	SCClassLibrary/Common/GUI/GUI.sc	/^	*add { arg aScheme;$/;"	m
*add	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*add { |names, action|$/;"	m
*addAnnularWedge	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*addAnnularWedge { arg center, innerRadius, outerRadius, startAngle, arcAngle;$/;"	m
*addArc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*addArc { arg center, radius, startAngle, arcAngle;$/;"	m
*addArc	SCClassLibrary/QtCollider/QPen.sc	/^  *addArc { arg center, radius, startAngle, arcAngle;$/;"	m
*addCatsToTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*addCatsToTree { |class, fileslist| ^global.addCatsToTree(class, fileslist) }$/;"	m
*addDirTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*addDirTree { |helppath, tree| ^global.addDirTree(helppath, tree) }$/;"	m
*addEventType	SCClassLibrary/Common/Collections/Event.sc	/^	*addEventType { arg type, func;$/;"	m
*addExcludePath	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*addExcludePath {|aPath|$/;"	m
*addExcludePaths	quarks/cruciallib/Instr/Instr.sc	/^	*addExcludePaths {$/;"	m
*addFuncTo	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*addFuncTo { |what, func|$/;"	m
*addIncludePath	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*addIncludePath {|aPath|$/;"	m
*addOval	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*addOval { arg rect;$/;"	m
*addOval	SCClassLibrary/QtCollider/QPen.sc	/^  *addOval { arg rect;$/;"	m
*addRect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*addRect { arg rect;$/;"	m
*addRect	SCClassLibrary/QtCollider/QPen.sc	/^  *addRect { arg aRect;$/;"	m
*addRoundedRect	SCClassLibrary/QtCollider/QPen.sc	/^  *addRoundedRect { arg aRect, radiusX, radiusY;$/;"	m
*addToAll	SCClassLibrary/Common/Control/SystemActions.sc	/^	*addToAll { arg object;$/;"	m
*addToLog	SCClassLibrary/Common/Streams/History.sc	/^	*addToLog { |line|$/;"	m
*addToMenu	SCClassLibrary/deprecated/deprecated-3.6-help/osx/scide_scapp/Help_osx.sc	/^	*addToMenu {$/;"	m
*addUndocumentedMethods	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *addUndocumentedMethods {|list, body, id2, id, title|$/;"	m
*addUserFilter	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*addUserFilter { |subpath| ^global.addUserFilter(subpath) }$/;"	m
*addWedge	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*addWedge { arg center, radius, startAngle, arcAngle;$/;"	m
*addWedge	SCClassLibrary/QtCollider/QPen.sc	/^  *addWedge { arg center, radius, startAngle, sweepLength;$/;"	m
*addWedge_Deg	SCClassLibrary/QtCollider/QPen.sc	/^  *addWedge_Deg { arg center, radius, startAngle, sweepLength;$/;"	m
*addWindow	SCClassLibrary/QtCollider/QWindow.sc	/^  *addWindow { arg window;$/;"	m
*adsr	SCClassLibrary/Common/Audio/Env.sc	/^	*adsr { arg attackTime=0.01, decayTime=0.3,$/;"	m
*after	SCClassLibrary/Common/Control/Node.sc	/^	*after { arg aNode, defName, args;$/;"	m
*after	SCClassLibrary/Common/Control/Node.sc	/^	*after { arg aNode;    ^this.new(aNode, \\addAfter) }$/;"	m
*all	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*all {$/;"	m
*all	SCClassLibrary/Common/Control/Server.sc	/^	*all { ^set }$/;"	m
*all	SCClassLibrary/Common/Control/WII.sc	/^	*all {$/;"	m
*all	SCClassLibrary/DefaultLibrary/Main.sc	/^	*all {$/;"	m
*all	SCClassLibrary/Platform/linux/LID.sc	/^	*all {$/;"	m
*all	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*all { ^global.all }$/;"	m
*allClasses	SCClassLibrary/Common/Core/Kernel.sc	/^	*allClasses { _AllClasses }$/;"	m
*allDisabled	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*allDisabled {$/;"	m
*allEnabled	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*allEnabled {$/;"	m
*allFuncProxies	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*allFuncProxies {$/;"	m
*allMethodsDo	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*allMethodsDo { arg func;$/;"	m
*allRunningServers	SCClassLibrary/Common/Control/Server.sc	/^	*allRunningServers {$/;"	m
*all_	SCClassLibrary/Common/Control/Server.sc	/^	*all_ { arg dict; set = dict }$/;"	m
*alloc	SCClassLibrary/Common/Control/Buffer.sc	/^	*alloc { arg server, numFrames, numChannels = 1, completionMessage, bufnum;$/;"	m
*alloc	SCClassLibrary/Common/Control/Bus.sc	/^	*alloc { arg rate,server,numChannels=1;$/;"	m
*alloc	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	*alloc { arg server, numChannels=1;$/;"	m
*alloc	quarks/cruciallib/ServerTools/BusPool.sc	/^	*alloc { |rate=\\audio,server,numChannels=1,client,name|$/;"	m
*allocConsecutive	SCClassLibrary/Common/Control/Buffer.sc	/^	*allocConsecutive { |numBufs = 1, server, numFrames, numChannels = 1, completionMessage,$/;"	m
*allowAutoComp	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*allowAutoComp { ^true }		\/\/ maybe you want to turn off the IDE features$/;"	m
*alpha_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*alpha_ {arg opacity;$/;"	m
*alpha_	SCClassLibrary/QtCollider/QPen.sc	/^  *alpha_ { arg value;$/;"	m
*annotate	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*annotate { arg thing,note;$/;"	m
*antiAliasing_	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*antiAliasing_ { arg flag = false;$/;"	m
*antiAliasing_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*antiAliasing_ { arg flag = false;$/;"	m
*antiAliasing_	SCClassLibrary/QtCollider/QFont.sc	/^  *antiAliasing_ { arg flag;$/;"	m
*applyExtension	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*applyExtension { |path|$/;"	m
*ar	SCClassLibrary/Common/Audio/AudioIn.sc	/^	*ar { arg bus = 0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/AudioIn.sc	/^	*ar { arg channel = 0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*ar { arg in, freq = 1200.0, rq = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*ar {arg in, freq = 1200.0, bw = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*ar {arg in, freq = 1200.0, rq = 1.0, db = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*ar {arg in, freq = 1200.0, rs = 1.0, db = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg bufnum = 0, numChannels = 1, delaytime = 0.2;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg inputArray , bufnum=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg inputArray, bufnum=0, offset=0.0, recLevel=1.0, preLevel=0.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg inputArray, bufnum=0, phase=0.0, loop=1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg inputArray, scopeNum=0, maxFrames = 4096, scopeFrames;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg numChannels, bufnum=0, loopStart=0.0, loopEnd=99999.0, trigger=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg numChannels, bufnum=0, phase=0.0, loop=1.0, interpolation=2;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg numChannels, bufnum=0, rate=1.0, trigger=1.0, startPos=0.0, loop = 0.0, doneAction=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/BufIO.sc	/^	*ar { arg numChannels, trigger=0, bufnum=0, rate=1, centerPos=0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, a=1, b= -1, c= -0.75, xi=0, mul=1, add=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, a=1, b=1.9, xi=0, mul=1, add=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, a=1, b=3, c=0.5, d=0.5, xi=0.5, yi=0.5, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, a=1.1, c=0.13, m=1.0, xi=0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, a=1.4, b=0.3, x0=0, x1=0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, im=1, fb=0.1, a=1.1, c=0.5, xi=0.1, yi=0.1, mul=1, add=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, k=1.0, xi=0.5, yi=0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, s=10, r=28, b=2.667, h=0.05, xi=0.1, yi=0, zi=0, mul=1.0, add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Chaos.sc	/^	*ar { arg freq=22050, xi=1.2, yi=2.1, mul=1, add=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/CheckBadValues.sc	/^	*ar {arg in = 0.0, id = 0, post = 2;$/;"	m
*ar	SCClassLibrary/Common/Audio/Compander.sc	/^	*ar { arg in = 0.0, attackTime = 0.01, releaseTime = 0.01, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Compander.sc	/^	*ar { arg in = 0.0, control = 0.0, thresh = 0.5, slopeBelow = 1.0, slopeAbove = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Compander.sc	/^	*ar { arg in = 0.0, level = 1.0, dur = 0.01;$/;"	m
*ar	SCClassLibrary/Common/Audio/Compander.sc	/^	*ar { arg in = 0.0, thresh = 0.5, slopeBelow = 1.0, slopeAbove = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/DelayWr.sc	/^	*ar { arg  bufnum=0,  inputs, delayTime, feedback=0.7, rotate=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/DelayWr.sc	/^	*ar { arg bank, firstIndex, function, inputs, delayTime, interpolationType=2;$/;"	m
*ar	SCClassLibrary/Common/Audio/DelayWr.sc	/^	*ar { arg bank, index, inputs, delayTime, feedback=0.7, rotate=1, interpolationType=2;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg buf = 0, in = 0.0, delaytime = 0.2, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg buf = 0, in = 0.0, delaytime = 0.2, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg grainDur = 0.2, pchRatio = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg in = 0.0, maxdelaytime = 0.2, delaytime = 0.2, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg in = 0.0, maxdelaytime = 0.2, delaytime = 0.2, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar {arg buffer, in;$/;"	m
*ar	SCClassLibrary/Common/Audio/Delays.sc	/^	*ar {arg buffer, phase, delTime, interp = 1, mul = 1, add = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Demand.sc	/^	*ar { arg dur = 1.0, reset = 0.0, level = 1.0, doneAction = 0, gapFirst = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Demand.sc	/^	*ar { arg dur = 1.0, reset = 0.0, level = 1.0, doneAction = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Demand.sc	/^	*ar { arg level, dur, shape = 1, curve = 0, gate = 1.0, reset = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Demand.sc	/^	*ar { arg trig, reset, demandUGens;$/;"	m
*ar	SCClassLibrary/Common/Audio/DiskIO.sc	/^	*ar { arg bufnum, channelsArray;$/;"	m
*ar	SCClassLibrary/Common/Audio/DiskIO.sc	/^	*ar { arg numChannels, bufnum, loop = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/DiskIO.sc	/^	*ar { arg numChannels, bufnum, rate = 1, loop = 0, sendID = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*ar { arg envelope, gate = 1.0, levelScale = 1.0, levelBias = 0.0, timeScale = 1.0, doneAction = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT.sc	/^	*ar { | buffer, wintype = 0, winsize=0|$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg buffer, proph=0.0, propf=0.0, threshold=1.0, waittime=0.04;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg buffer, propsc=0.25, prophfe=0.25, prophfc=0.25, propsf=0.25, threshold=1.0, waittime=0.04;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, kernel, framesize=512,mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, kernel, trigger = 0, framesize=2048, crossfade=1, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, kernel, trigger = 0, framesize=2048,mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, kernel, trigger=0, framesize=2048, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, kernelL, kernelR, trigger=0, framesize=2048, crossfade=1, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FFT2.sc	/^	*ar { arg in, numsamp=40;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg freq=440.0, iphase = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg freq=440.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg freq=440.0, numharm = 200.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg freq=440.0, width = 0.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg specificationsArrayRef, freqscale = 1.0, freqoffset = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*ar { arg specificationsArrayRef, input, freqscale = 1.0, freqoffset = 0.0, decayscale = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^		*ar { arg input, threshold = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, a0 = 0.0, a1 = 0.0, a2 = 0.0, b1 = 0.0, b2 = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, a0 = 0.0, a1 = 0.0, b1 = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, amp = 0.0001, time = 0.1, doneAction = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, attackTime = 0.01, decayTime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, coef = 0.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, coef = 0.995, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, coef = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, decayTime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, attacktime = 1.0, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, bwr = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, radius = 0.8, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, rq = 1.0, db = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, freq = 440.0, rq = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, lagTime = 0.1, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, lagTimeU = 0.1, lagTimeD = 0.1,  mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, time = 0.1, curvature = 0, warp = 5, start, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg in = 0.0, up = 1.0, dn = 1.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Filter.sc	/^	*ar { arg length=3, in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FreeVerb.sc	/^	*ar { arg in, in2, mix = 0.33, room = 0.5, damp = 0.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/FreeVerb.sc	/^	*ar { arg in, mix = 0.33, room = 0.5, damp = 0.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/GVerb.sc	/^	*ar { arg in, roomsize = 10, revtime = 3, damping = 0.5, inputbw =  0.5, spread = 15,$/;"	m
*ar	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*ar { arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, freq=440, ampscale= 0.5, durscale=0.5, initCPs= 12, knum, mul=1.0,add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*ar { arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, minfreq=440, maxfreq=660, ampscale= 0.5, durscale=0.5, initCPs= 12, knum, a=1.17, c=0.31, mul=1.0,add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*ar { arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, minfreq=440, maxfreq=660, ampscale= 0.5, durscale=0.5, initCPs= 12, knum, mul=1.0,add=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/GrainUGens.sc	/^	*ar { arg numChannels = 1, trigger = 0, dur = 1, sndbuf, rate = 1, pos = 0, interp = 2,$/;"	m
*ar	SCClassLibrary/Common/Audio/Hilbert.sc	/^	*ar { arg in, buffer;$/;"	m
*ar	SCClassLibrary/Common/Audio/Hilbert.sc	/^	*ar { arg in, mul = 1, add = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Hilbert.sc	/^	*ar {$/;"	m
*ar	SCClassLibrary/Common/Audio/IEnvGen.sc	/^	*ar { arg envelope, index, mul = 1, add = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg bus = 0, numChannels = 1;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg bus, channelsArray;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg bus, xfade, channelsArray;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg channelsArray;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg numChannels = 1, default = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/InOut.sc	/^	*ar { arg values;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg freq = 1000, root = 0, minAmp = 0.32, rootAmp = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg freq = 60.midicps, root = 60.midicps, exp = 0.3333;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg in = 0.0, offset = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg in = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg in=0.0, srclo = 0.0, srchi = 1.0, dstlo = 1.0, dsthi = 2.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg in=0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg numChannels = 1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg start=0.0, end = 1.0, dur = 1.0, mul = 1.0, add = 0.0, doneAction = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Line.sc	/^	*ar { arg start=1.0, end = 2.0, dur = 1.0, mul = 1.0, add = 0.0, doneAction = 0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Mix.sc	/^	*ar { arg input, numChannels = 2, mixdown = true;$/;"	m
*ar	SCClassLibrary/Common/Audio/Mix.sc	/^	*ar { |array|$/;"	m
*ar	SCClassLibrary/Common/Audio/MoogFF.sc	/^	*ar { | in, freq=100, gain=2, reset=0, mul=1, add=0 |$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg chaosParam=1.5, dt = 0.04, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg chaosParam=1.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg chaosParam=3.0, freq = 1000.0, init= 0.5, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg density = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg freq=500.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg in = 0.0, bits=3, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg iseed, imul, iadd, imod, mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg lo = 0.0, hi = 1.0, trig = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg lo = 0.01, hi = 1.0, trig = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg prob, in;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar { arg trig = 0.0, seed=56789;$/;"	m
*ar	SCClassLibrary/Common/Audio/Noise.sc	/^	*ar {$/;"	m
*ar	SCClassLibrary/Common/Audio/Osc.sc	/^	*ar { arg trig, array, weights, normalize=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Osc.sc	/^	*ar { arg trig, array;$/;"	m
*ar	SCClassLibrary/Common/Audio/Osc.sc	/^	*ar { arg which, array, focus=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Osc.sc	/^	*ar { arg which, array, wrap=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Osc.sc	/^	*ar {$/;"	m
*ar	SCClassLibrary/Common/Audio/PSinGrain.sc	/^	*ar { arg freq = 440.0, dur = 0.2, amp = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg in, azimuth=0, elevation=0, gain=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg in, azimuth=0, gain=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg in, pos = 0.0, level = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg in, xpos = 0.0, ypos = 0.0, level = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg inA, inB = 0.0, pan = 0.0, level = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg inA, inB, azimuth, gain=1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg left, right, pos = 0.0, level = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg numChans, in, pos = 0.0, level = 1.0, width = 2.0, orientation = 0.5;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg numChans, w, x, y, orientation = 0.5;$/;"	m
*ar	SCClassLibrary/Common/Audio/Pan.sc	/^	*ar { arg x, y, pos = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/PartConv.sc	/^	*ar { arg in, fftsize, irbufnum,mul = 1.0, add = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*ar { arg in=0.0, g=1, damp=0, friction=0.01;$/;"	m
*ar	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*ar { arg in=0.0, g=10, damp=0, friction=0.01;$/;"	m
*ar	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*ar { arg in=0.0, spring=1, damp=0;$/;"	m
*ar	SCClassLibrary/Common/Audio/PitchShift.sc	/^	*ar { arg in = 0.0, windowSize = 0.2, pitchRatio = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Pluck.sc	/^	*ar { arg in = 0.0, trig = 1.0, maxdelaytime = 0.2, delaytime = 0.2, decaytime = 1.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Poll.sc	/^	*ar { arg trig, in, label, trigid = -1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Splay.sc	/^	*ar { arg inArray, spread = 1, level = 1, center = 0.0, levelComp = true;$/;"	m
*ar	SCClassLibrary/Common/Audio/Splay.sc	/^	*ar { arg numChans = 4, inArray, spread = 1, level = 1, width = 2, center = 0.0,$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg a = 0.0, b = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0, decay = 0.999;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0, dur = 0.1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0, id = 0, value = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0, lo = 0.0, hi = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0, trig = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg in=0.0, diff=0.01;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg sig, replyRate = 20.0, peakLag = 3, cmdName = '\/reply', replyID = -1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0, cmdName = '\/reply', values, replyID = -1;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0, div = 2.0, start = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0, rate = 1.0, start = 0.0, end = 1.0, resetPos = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0, rate = 1.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0, reset = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig = 0.0;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg trig=0, reset=0, min=0, max=7, step=1, resetval;$/;"	m
*ar	SCClassLibrary/Common/Audio/Trig.sc	/^	*ar { arg x = 0.0, y = 0.0, rect;$/;"	m
*ar	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*ar { arg  name, values, lags;$/;"	m
*ar	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	*ar { | bus, numChannels = 2, offset = 0 |$/;"	m
*ar	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	*ar { | which, n |$/;"	m
*ar	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*ar { | key, numChannels, offset = 0 |$/;"	m
*ar	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^	*ar { arg bufnum, grainDur = 0.2, pchRatio = 1.0,$/;"	m
*ar	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^	*ar { arg carfreq,modfreq,pmindex=0.0,modphase=0.0,mul=1.0,add=0.0;$/;"	m
*ar	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^	*ar { arg timesArray, levelsArray, in = 0.0, mul = 1.0, add = 0.0,bufnum;$/;"	m
*ar	quarks/cruciallib/Instr/Instr.sc	/^	*ar { arg name, args;$/;"	m
*ar	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*ar { arg ... args;$/;"	m
*ar	quarks/cruciallib/Players/Silence.sc	/^	*ar { |...args| ^Silent.ar(*args) }$/;"	m
*ar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*ar { arg audio,gate,env;$/;"	m
*ar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*ar { arg inputs, bipolar,width=2.0;$/;"	m
*ar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*ar { arg l, r, pan;$/;"	m
*ar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*ar { arg lf, rf, lb, rb, xpan, ypan; \/\/ unipolar$/;"	m
*ar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*ar { arg trig=0.0,mul=1.0,add=0.0;$/;"	m
*ar	quarks/cxaudio/RBJeq.sc	/^	*ar {		arg in,freq=440.0,amp,f,bW,mul=1.0,add=0.0;$/;"	m
*ar	quarks/cxaudio/RBJeq.sc	/^	*ar {		arg in,freq=440.0,gain=1.0,shelf=1.0,mul=1.0,add=0.0;$/;"	m
*ar	quarks/cxaudio/RBJeq.sc	/^	*ar {		arg in,freq=440.0,q=0.5,mul=1.0,add=0.0;$/;"	m
*ar	quarks/cxaudio/RBJeq.sc	/^	*ar { arg in, freq=440, rq=0.1, gain=1.0,mul=1.0,add=0.0;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar {  arg min=0.0,max=1.0,tideFreq=0.1,waveFreq = 440.0, tideEffect=0.5;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg  bufnum,  inputs, beats, feedback=0.7, wobble=0.0, rotate=1,tempo=1.0;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg audio=0.0,drive=1;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg input, maxBeats, beats,wobble, tempo;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg input,process, maxBeats, beats,feedback,wobble,tempo=1.0,bufnum;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg input,voices=4,maxDelay=0.01,speed=0.1,bidecay=0.1,height=1.0;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg input,voices=4,maxDelay=0.01,speed=0.1;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg input,voices=8,maxDelay=0.1,speed=0.5;$/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar { arg qnty=2, in = 0.0, winSize = 0.2, pchRatio = 1.0, $/;"	m
*ar	quarks/cxaudio/cxaudio.sc	/^	*ar {$/;"	m
*arFill	SCClassLibrary/Common/Audio/Mix.sc	/^	*arFill { |n, function|$/;"	m
*arFill	SCClassLibrary/Common/Audio/Splay.sc	/^	*arFill { arg n, function, spread = 1, level = 1, center = 0.0, levelComp = true;$/;"	m
*arFill	SCClassLibrary/Common/Audio/Splay.sc	/^	*arFill { arg numChans = 4, n, function, spread = 1, level = 1, width = 2, center = 0.0,$/;"	m
*arcTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*arcTo { arg point1, point2, radius;$/;"	m
*arcTo	SCClassLibrary/QtCollider/QPen.sc	/^  *arcTo { arg point1, point2, radius;$/;"	m
*asLines	SCClassLibrary/Common/Streams/History.sc	/^	*asLines { arg str;$/;"	m
*asStream	SCClassLibrary/Common/Streams/Rest.sc	/^	*asStream {$/;"	m
*asTable	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*asTable { arg dict, func;$/;"	m
*asWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*asWarp { arg spec; ^this.new(spec) }$/;"	m
*asr	SCClassLibrary/Common/Audio/Env.sc	/^	*asr { arg attackTime=0.01, sustainLevel=1.0, releaseTime=1.0, curve = -4.0;$/;"	m
*at	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*at { arg i; ^global.at(i) }$/;"	m
*at	SCClassLibrary/Common/Collections/Library.sc	/^	*at { arg ... args;$/;"	m
*at	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*at { arg id;$/;"	m
*at	SCClassLibrary/Common/Collections/Scale.sc	/^	*at { |key|$/;"	m
*at	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*at { arg key;$/;"	m
*at	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*at { arg key,spec; \/\/ returns a list of possibles$/;"	m
*at	quarks/cruciallib/Instr/Instr.sc	/^	*at { arg  name;$/;"	m
*at	quarks/cruciallib/Instr/instrSupport.sc	/^	*at { arg name;$/;"	m
*at	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*at { arg thing;$/;"	m
*at	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*at { arg  address;  ^this.global.at(address) }$/;"	m
*at	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*at { arg  address;  ^this.global.at(address) }$/;"	m
*atList	SCClassLibrary/Common/Collections/Library.sc	/^	*atList { arg args;$/;"	m
*audio	SCClassLibrary/Common/Control/Bus.sc	/^	*audio { arg server,numChannels=1;$/;"	m
*audio	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*audio {$/;"	m
*audio	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	*audio { | server, numChannels |$/;"	m
*audio	quarks/cruciallib/Players/Patching.sc	/^	*audio { arg nodeControl;$/;"	m
*audio	quarks/cruciallib/Players/Patching.sc	/^	*audio { arg source,group,bus;$/;"	m
*auto	SCClassLibrary/QtCollider/QPalette.sc	/^  *auto { arg buttonColor, windowColor;$/;"	m
*autoCompAll	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*autoCompAll {$/;"	m
*autoComplete	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*autoComplete {$/;"	m
*autoCompleteKeyAction	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*autoCompleteKeyAction {$/;"	m
*availableBounds	SCClassLibrary/QtCollider/QWindow.sc	/^  *availableBounds {$/;"	m
*availableFonts	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*availableFonts {$/;"	m
*availableFonts	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*availableFonts {$/;"	m
*availableFonts	SCClassLibrary/QtCollider/QFont.sc	/^  *availableFonts {$/;"	m
*availableStyles	SCClassLibrary/QtCollider/QtGUI.sc	/^  *availableStyles {$/;"	m
*background	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*background {$/;"	m
*background_	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*background_ {|...args|$/;"	m
*bar	SCClassLibrary/Common/Core/Clock.sc	/^	*bar { ^TempoClock.default.bar  }$/;"	m
*barChart	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*barChart { |vals, min=0, max, interval, shades=false, precision, extras|$/;"	m
*bars2beats	SCClassLibrary/Common/Core/Clock.sc	/^	*bars2beats { ^0 }$/;"	m
*bars2beats	SCClassLibrary/Common/Core/Clock.sc	/^	*bars2beats { | bars | ^TempoClock.default.bars2beats(bars)	}$/;"	m
*baseBar	SCClassLibrary/Common/Core/Clock.sc	/^	*baseBar { ^TempoClock.default.baseBar  }$/;"	m
*baseBarBeat	SCClassLibrary/Common/Core/Clock.sc	/^	*baseBarBeat { ^TempoClock.default.baseBarBeat  }$/;"	m
*basicNew	SCClassLibrary/Common/Control/Node.sc	/^	*basicNew { arg defName, server, nodeID;$/;"	m
*basicNew	SCClassLibrary/Common/Control/Node.sc	/^	*basicNew { arg server, nodeID;$/;"	m
*basicNew	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*basicNew { arg source;$/;"	m
*beat	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*beat { ^global.beat }$/;"	m
*beatDur	SCClassLibrary/Common/Core/Clock.sc	/^	*beatDur { ^TempoClock.default.beatDur  }$/;"	m
*beatInBar	SCClassLibrary/Common/Core/Clock.sc	/^	*beatInBar { ^TempoClock.default.beatInBar  }$/;"	m
*beat_	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*beat_ { arg beat; ^global.beat_(beat) }$/;"	m
*beats	SCClassLibrary/Common/Core/Clock.sc	/^	*beats { ^TempoClock.default.beats }$/;"	m
*beats	SCClassLibrary/Common/Core/Clock.sc	/^	*beats { ^thisThread.seconds }$/;"	m
*beats2bars	SCClassLibrary/Common/Core/Clock.sc	/^	*beats2bars { ^0 }$/;"	m
*beats2bars	SCClassLibrary/Common/Core/Clock.sc	/^	*beats2bars { | beats | ^TempoClock.default.beats2bars(beats)  }$/;"	m
*beats2secs	SCClassLibrary/Common/Core/Clock.sc	/^	*beats2secs { | beats | ^TempoClock.default.beats2secs(beats)  }$/;"	m
*beats2secs	SCClassLibrary/Common/Core/Clock.sc	/^	*beats2secs { | beats | ^beats }$/;"	m
*beats2secs	quarks/cruciallib/Scheduling/Tempo.sc	/^	*beats2secs { arg beats; ^default.beats2secs(beats) }$/;"	m
*beats2secsKr	quarks/cruciallib/Scheduling/Tempo.sc	/^	*beats2secsKr { |beats| ^TempoPlayer(default).kr.reciprocal * beats }$/;"	m
*beatsPerBar	SCClassLibrary/Common/Core/Clock.sc	/^	*beatsPerBar { ^TempoClock.default.beatsPerBar  }$/;"	m
*beatsPerBar_	SCClassLibrary/Common/Core/Clock.sc	/^	*beatsPerBar_ { | newBeatsPerBar | TempoClock.default.beatsPerBar_(newBeatsPerBar)  }$/;"	m
*before	SCClassLibrary/Common/Control/Node.sc	/^	*before {  arg aNode, defName, args;$/;"	m
*before	SCClassLibrary/Common/Control/Node.sc	/^	*before {  arg aNode; 	^this.new(aNode, \\addBefore) }$/;"	m
*beginPath	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*beginPath {$/;"	m
*beginPath	SCClassLibrary/QtCollider/QPen.sc	/^  *beginPath {$/;"	m
*beginTransparencyLayer	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*beginTransparencyLayer {$/;"	m
*beginTransparencyLayer	SCClassLibrary/QtCollider/QPen.sc	/^  *beginTransparencyLayer {$/;"	m
*bend	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*bend { arg func, chan, srcID, argTemplate, dispatcher;$/;"	m
*bend	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*bend { arg key, func, chan, srcID, argTemplate, dispatcher;$/;"	m
*big	SCClassLibrary/DefaultLibrary/extNumber.sc	/^	*big { arg x, y;$/;"	m
*big	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*big {$/;"	m
*bind	quarks/cruciallib/Editors/NumberEditor.sc	/^	*bind { arg model,varname,spec,layout,bounds,labelWidth=100;$/;"	m
*black	SCClassLibrary/Common/Core/Color.sc	/^	*black { ^Color.new(0.0, 0.0, 0.0) }$/;"	m
*blendMode_	SCClassLibrary/QtCollider/QPen.sc	/^  *blendMode_ { arg mode;$/;"	m
*blue	SCClassLibrary/Common/Core/Color.sc	/^	*blue { arg val = 1.0, alpha = 1.0; ^Color.new(max(val-1,0), max(val-1,0), min(1,val), alpha) }$/;"	m
*boolean	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*boolean {^"i"}$/;"	m
*bpm	quarks/cruciallib/Scheduling/Tempo.sc	/^	*bpm { ^default.bpm }$/;"	m
*bpm_	quarks/cruciallib/Scheduling/Tempo.sc	/^	*bpm_ { arg bpm;$/;"	m
*broadcastFlag	SCClassLibrary/Common/Control/NetAddr.sc	/^	*broadcastFlag {$/;"	m
*broadcastFlag_	SCClassLibrary/Common/Control/NetAddr.sc	/^	*broadcastFlag_ { arg flag = true;$/;"	m
*browse	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*browse { ^ClassBrowser( this.key !? {this.implClass} ? this ) }$/;"	m
*build	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*build { arg instr,args,outClass = \\Out;$/;"	m
*buildSynthDef	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*buildSynthDef {$/;"	m
*bullet	SCClassLibrary/Common/Core/Char.sc	/^	*bullet { ^if(Platform.ideName=="scapp",165.asAscii,$*) }$/;"	m
*bundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*bundle { |server,atTime,buildFunction|$/;"	m
*busses	quarks/cruciallib/ServerTools/BusPool.sc	/^	*busses { ^counts.contents.keys.as(Array) }$/;"	m
*button	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*button { ^SCButton }$/;"	m
*button	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*button { ^SCButton }$/;"	m
*button	SCClassLibrary/QtCollider/QtGUI.sc	/^  *button { ^QButton; }$/;"	m
*cacheAt	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*cacheAt { arg defName,server;$/;"	m
*cachePut	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*cachePut { arg def,server;$/;"	m
*cacheRemoveAt	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*cacheRemoveAt { arg defName,server;$/;"	m
*cachedBufferAt	SCClassLibrary/Common/Control/Buffer.sc	/^	*cachedBufferAt { |server, bufnum|$/;"	m
*cachedBuffersDo	SCClassLibrary/Common/Control/Buffer.sc	/^	*cachedBuffersDo { |server, func|$/;"	m
*calc	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	*calc { arg n, a, x;$/;"	m
*calcBufSize	SCClassLibrary/Common/Audio/PartConv.sc	/^	*calcBufSize {arg fftsize, irbuffer;$/;"	m
*calcET	SCClassLibrary/Common/Collections/Scale.sc	/^	*calcET { | pitchesPerOctave |$/;"	m
*calcNumPartitions	SCClassLibrary/Common/Audio/PartConv.sc	/^	*calcNumPartitions {arg fftsize, irbuffer;$/;"	m
*canBeMulAdd	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*canBeMulAdd { arg in, mul, add;$/;"	m
*cancel	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*cancel {$/;"	m
*capStyle_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*capStyle_ { arg style = 0; \/\/ 0 = butt, 1 = round, 2 = square$/;"	m
*capStyle_	SCClassLibrary/QtCollider/QPen.sc	/^  *capStyle_ { arg style;$/;"	m
*case	SCClassLibrary/Platform/Platform.sc	/^	*case { | ... cases |$/;"	m
*categories	SCClassLibrary/deprecated/deprecated-3.6-categories/iphone/iPhoneUGens.sc	/^	*categories { ^ #["UGens>User interaction"] }$/;"	m
*categories	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*categories {	^ #["Streams-Patterns-Events>Patterns"] }$/;"	m
*categories	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^*categories {	^ nil	}$/;"	m
*cc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*cc { arg func, ccNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*cc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*cc { arg key, func, ccNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*channelOffset	SCClassLibrary/Common/Audio/AudioIn.sc	/^	*channelOffset {$/;"	m
*chebyFill	SCClassLibrary/Common/Math/Signal.sc	/^	*chebyFill { arg size, amplitudes, normalize=true;$/;"	m
*chebyFill_old	SCClassLibrary/Common/Math/Signal.sc	/^	*chebyFill_old { arg size, amplitudes;$/;"	m
*checkBox	SCClassLibrary/QtCollider/QtGUI.sc	/^  *checkBox { ^QCheckBox; }$/;"	m
*checkIDs	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	*checkIDs { | id, server |$/;"	m
*checkLogStarted	SCClassLibrary/Common/Streams/History.sc	/^	*checkLogStarted {$/;"	m
*checkPath	SCClassLibrary/Common/Streams/History.sc	/^	*checkPath { |path|$/;"	m
*checkVersion	SCClassLibrary/SCDoc/SCDoc.sc	/^    *checkVersion {|clearCache=false|$/;"	m
*checkedOut	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*checkedOut { ^this.global.checkedOut }$/;"	m
*checkout	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*checkout { | name, version, sync | this.global.checkout(name,version, sync); }$/;"	m
*checkoutAll	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*checkoutAll { this.global.repos.checkoutAll(this.global.local.path) }$/;"	m
*checkoutDirectory	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*checkoutDirectory {$/;"	m
*choose	SCClassLibrary/Common/Collections/Scale.sc	/^	*choose { |selectFunc|$/;"	m
*choose	SCClassLibrary/Common/Collections/Scale.sc	/^	*choose { |size = 12|$/;"	m
*choose	SCClassLibrary/Common/Collections/Scale.sc	/^	*choose { |size = 7, pitchesPerOctave = 12|$/;"	m
*choose	SCClassLibrary/Common/Collections/Scale.sc	/^	*choose {$/;"	m
*choose	quarks/cruciallib/Instr/Instr.sc	/^	*choose { arg start;$/;"	m
*chooseAt	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*chooseAt { arg argName,spec;$/;"	m
*chooseBySpec	quarks/cruciallib/Instr/Instr.sc	/^	*chooseBySpec { arg outSpec;$/;"	m
*chooseForSpec	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*chooseForSpec { arg argName,spec;$/;"	m
*circle	SCClassLibrary/Common/Audio/Env.sc	/^	*circle { arg levels, times, curve = \\lin;$/;"	m
*classHasArKrIr	SCClassLibrary/SCDoc/SCDoc.sc	/^    *classHasArKrIr {|c|$/;"	m
*classLibraryDir	SCClassLibrary/Platform/Platform.sc	/^	*classLibraryDir { ^thisProcess.platform.classLibraryDir }$/;"	m
*classRedirect	SCClassLibrary/Common/Core/Object.sc	/^	*classRedirect { ^this }$/;"	m
*classRedirect	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*classRedirect { ^redirectQueries.if({this.implClass ? this}, this)}$/;"	m
*classesInPackage	SCClassLibrary/Common/Quarks/packages.sc	/^	*classesInPackage { |packageName|$/;"	m
*cleanup	SCClassLibrary/Common/Collections/EventTypesWithCleanup.sc	/^	*cleanup { | ev, flag = true |$/;"	m
*cleanupAll	SCClassLibrary/Common/Control/SerialPort.sc	/^	*cleanupAll {$/;"	m
*clear	SCClassLibrary/Common/Collections/Library.sc	/^	*clear {$/;"	m
*clear	SCClassLibrary/Common/Core/Clock.sc	/^	*clear { | releaseNodes | TempoClock.default.clear(releaseNodes)	 }$/;"	m
*clear	SCClassLibrary/Common/Core/Clock.sc	/^	*clear {$/;"	m
*clear	SCClassLibrary/Common/Core/Color.sc	/^	*clear { ^Color.new(0.0, 0.0, 0.0, 0.0) }$/;"	m
*clear	SCClassLibrary/Common/GUI/Model.sc	/^	*clear {$/;"	m
*clear	SCClassLibrary/Common/Streams/History.sc	/^	*clear { current.clear }$/;"	m
*clear	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*clear { \/\/ in case of errors, invalidate any previous dialogs$/;"	m
*clear	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*clear {$/;"	m
*clear	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*clear { | fadeTime |$/;"	m
*clear	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*clear { ^global.clear }$/;"	m
*clear	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*clear { this.global.clear }$/;"	m
*clear	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*clear { this.global.clear }$/;"	m
*clearAll	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	*clearAll {$/;"	m
*clearAll	quarks/cruciallib/Instr/Instr.sc	/^	*clearAll {$/;"	m
*clearCache	SCClassLibrary/QtCollider/QWebView.sc	/^  *clearCache {$/;"	m
*clearCache	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*clearCache { arg server;$/;"	m
*clearCustomItems	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*clearCustomItems {$/;"	m
*clearMetadata	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*clearMetadata { |path|$/;"	m
*clearMetadata	SCClassLibrary/Platform/Platform.sc	/^	*clearMetadata { |path| ^thisProcess.platform.clearMetadata(path) }$/;"	m
*clearRect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*clearRect {arg aRect=nil;$/;"	m
*clearServerCaches	SCClassLibrary/Common/Control/Buffer.sc	/^	*clearServerCaches { |server|$/;"	m
*cline	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*cline { arg which; ^which.collect { |x|"\\\\cline{" ++ x ++ "-" ++ x ++ "}" }.join(" ") }$/;"	m
*clip	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*clip {$/;"	m
*clip	SCClassLibrary/QtCollider/QPen.sc	/^  *clip {$/;"	m
*closeAll	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/Control/OSC.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/Control/SerialPort.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/Control/WII.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/Files/SoundFile.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/GUI/Document.sc	/^	*closeAll { | leavePostWindowOpen = true |$/;"	m
*closeAll	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/Platform/linux/LID.sc	/^	*closeAll {$/;"	m
*closeAll	SCClassLibrary/QtCollider/QWindow.sc	/^  *closeAll {$/;"	m
*closeAllPlotWindows	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*closeAllPlotWindows {$/;"	m
*closeAllUnedited	SCClassLibrary/Common/GUI/Document.sc	/^	*closeAllUnedited { | leavePostWindowOpen = true |$/;"	m
*cmdPeriod	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*cmdPeriod { all.do { arg item; item.clear } }$/;"	m
*cmdPeriod	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*cmdPeriod { this.trace(false) }$/;"	m
*cmdPeriod	SCClassLibrary/Common/Core/Clock.sc	/^	*cmdPeriod {$/;"	m
*cmdPeriod	SCClassLibrary/Common/Streams/History.sc	/^	*cmdPeriod { this.enter("\/\/ thisProcess.cmdPeriod"); }$/;"	m
*cmdPeriod	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*cmdPeriod { docRoutine.play(AppClock) }$/;"	m
*cocoa	SCClassLibrary/Common/GUI/GUI.sc	/^	*cocoa {$/;"	m
*collect	SCClassLibrary/Common/Files/SoundFile.sc	/^	*collect { | path = "sounds\/*" |$/;"	m
*collectIntoBuffers	SCClassLibrary/Common/Files/SoundFile.sc	/^	*collectIntoBuffers { | path = "sounds\/*", server |$/;"	m
*color	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*color { arg ... args;$/;"	m
*colorToPixel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*colorToPixel { arg col;$/;"	m
*color_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*color_ { arg color;$/;"	m
*color_	SCClassLibrary/QtCollider/QPen.sc	/^  *color_ { arg aColor;$/;"	m
*columns	SCClassLibrary/QtCollider/QLayout.sc	/^  *columns { arg ...cols;$/;"	m
*commit	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*commit { |name,message| this.global.commit(name,message) }$/;"	m
*compactRatio	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  *compactRatio { this.deprecated(thisMethod); ^0.87 }$/;"	m
*compactRatio_	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  *compactRatio_ { this.deprecated(thisMethod) }$/;"	m
*completeClass	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*completeClass { |id, text|$/;"	m
*completeClassMethod	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*completeClassMethod { |id, text|$/;"	m
*completeMethod	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*completeMethod { |id, text|$/;"	m
*compositeView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*compositeView { ^SCCompositeView }$/;"	m
*compositeView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*compositeView { ^SCCompositeView }$/;"	m
*compositeView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *compositeView { ^QView }$/;"	m
*connect	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*connect { arg inport=0, device=0;$/;"	m
*connect	SCClassLibrary/Platform/linux/extMIDIOut.sc	/^	*connect { arg outport=0, device=0;$/;"	m
*connect	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	*connect {}$/;"	m
*connect	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	*connect {}$/;"	m
*connect	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*connect {|ideName|$/;"	m
*connectAll	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*connectAll {$/;"	m
*connectByUID	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*connectByUID {arg inport, uid;$/;"	m
*connectByUID	SCClassLibrary/Platform/linux/extMIDIOut.sc	/^	*connectByUID {arg outport, uid;$/;"	m
*connectByUID	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	*connectByUID {}$/;"	m
*connectByUID	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	*connectByUID {}$/;"	m
*connected	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*connected {$/;"	m
*control	SCClassLibrary/Common/Control/Bus.sc	/^	*control { arg server,numChannels=1;$/;"	m
*control	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*control {$/;"	m
*control	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	*control { | server, numChannels |$/;"	m
*control	quarks/cruciallib/Players/Patching.sc	/^	*control { arg nodeControl;$/;"	m
*control	quarks/cruciallib/Players/Patching.sc	/^	*control { arg source,group,bus;$/;"	m
*convertEnv	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*convertEnv { arg env;$/;"	m
*convertEnv	SCClassLibrary/Common/Audio/IEnvGen.sc	/^	*convertEnv { arg env;$/;"	m
*copy	SCClassLibrary/Common/Files/File.sc	/^	*copy { arg pathNameFrom, pathNameTo;$/;"	m
*copyFrom	SCClassLibrary/Common/Control/NetAddr.sc	/^	*copyFrom { arg addr, bundle;$/;"	m
*copyInstance	SCClassLibrary/Common/Collections/List.sc	/^	*copyInstance { arg aList; ^super.new.array_( aList.array.copy ) }$/;"	m
*create	SCClassLibrary/Common/Collections/Library.sc	/^	*create { arg ... args;$/;"	m
*creationCmd	SCClassLibrary/Common/Control/Node.sc	/^	*creationCmd { ^21 }	\/\/"\/g_new"$/;"	m
*creationCmd	SCClassLibrary/Common/Control/Node.sc	/^	*creationCmd { ^63 }	\/\/"\/p_new"$/;"	m
*creationCmd	SCClassLibrary/Common/Control/Node.sc	/^	*creationCmd { ^this.subclassMustImplementThisMethod }$/;"	m
*crossfadeClass	SCClassLibrary/Common/Audio/Osc.sc	/^	*crossfadeClass {$/;"	m
*cueSoundFile	SCClassLibrary/Common/Control/Buffer.sc	/^	*cueSoundFile { arg server,path,startFrame = 0,numChannels= 2,$/;"	m
*current	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*current {$/;"	m
*current	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*current {$/;"	m
*current	SCClassLibrary/Common/GUI/Document.sc	/^	*current {$/;"	m
*current	SCClassLibrary/Common/GUI/GUI.sc	/^	*current {$/;"	m
*currentControl	SCClassLibrary/Common/Control/GraphBuilder.sc	/^		*currentControl {$/;"	m
*cursorPosition	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*cursorPosition { ^this.prGetMouseCoords(Point.new) }$/;"	m
*cursorPosition	SCClassLibrary/QtCollider/QtGUI.sc	/^  *cursorPosition { _Qt_CursorPosition }$/;"	m
*curveTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*curveTo { arg point, cpoint1, cpoint2;$/;"	m
*curveTo	SCClassLibrary/QtCollider/QPen.sc	/^  *curveTo { arg endPoint, cPoint1, cPoint2;$/;"	m
*cutoff	SCClassLibrary/Common/Audio/Env.sc	/^	*cutoff { arg releaseTime = 0.1, level = 1.0, curve = \\lin;$/;"	m
*cyan	SCClassLibrary/Common/Core/Color.sc	/^	*cyan { arg val = 1.0, alpha = 1.0; ^Color.new(max(val-1,0), min(1,val), min(1,val), alpha) }$/;"	m
*dadsr	SCClassLibrary/Common/Audio/Env.sc	/^	*dadsr { arg delayTime=0.1, attackTime=0.01, decayTime=0.3,$/;"	m
*dark	SCClassLibrary/QtCollider/QPalette.sc	/^  *dark {$/;"	m
*dateString	SCClassLibrary/Common/Streams/History.sc	/^	*dateString {$/;"	m
*debug	SCClassLibrary/QtCollider/QView.sc	/^  *debug { arg level = 1, msg = "";$/;"	m
*debugLevel	SCClassLibrary/QtCollider/QtGUI.sc	/^  *debugLevel {$/;"	m
*debugLevel_	SCClassLibrary/QtCollider/QtGUI.sc	/^  *debugLevel_ { arg level;$/;"	m
*deepNew	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*deepNew { |parent, index, names = #[""], action|$/;"	m
*def	quarks/cruciallib/Instr/instrSupport.sc	/^	*def { arg name, ugenGraphFunc, rates, prependArgs, variants;$/;"	m
*defNameFromBytes	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*defNameFromBytes { arg int8Array;$/;"	m
*default	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*default {$/;"	m
*default	SCClassLibrary/Common/Collections/Event.sc	/^	*default {$/;"	m
*default	SCClassLibrary/Common/Collections/Scale.sc	/^	*default { | pitchesPerOctave |$/;"	m
*default	SCClassLibrary/Common/Streams/Quant.sc	/^	*default { ^default ?? { Quant.new } }$/;"	m
*default	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*default { ^1 } \/\/ safe for duration patterns$/;"	m
*default	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*default { ^Pn(this.defaultValue, 1) }$/;"	m
*default	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*default {$/;"	m
*default	SCClassLibrary/QtCollider/QFont.sc	/^  *default {$/;"	m
*defaultHeight	quarks/cruciallib/Gui/ActionButton.sc	/^	*defaultHeight { ^GUI.skin.buttonHeight }$/;"	m
*defaultMonoFace	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*defaultMonoFace {$/;"	m
*defaultMonoFace	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*defaultMonoFace {$/;"	m
*defaultSansFace	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*defaultSansFace {$/;"	m
*defaultSansFace	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*defaultSansFace {$/;"	m
*defaultSerifFace	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*defaultSerifFace {$/;"	m
*defaultSerifFace	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*defaultSerifFace {$/;"	m
*defaultServer	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	*defaultServer {$/;"	m
*defaultServer	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *defaultServer {$/;"	m
*defaultServer	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *defaultServer { ^if( Server.default.isLocal, Server.default, Server.local ) }$/;"	m
*defaultServer_	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*defaultServer_ {|server|$/;"	m
*defaultTempDir	SCClassLibrary/Platform/Platform.sc	/^	*defaultTempDir { ^thisProcess.platform.defaultTempDir }$/;"	m
*defaultUsesAutoInOutdent_	SCClassLibrary/Common/GUI/Document.sc	/^	*defaultUsesAutoInOutdent_ {|bool|$/;"	m
*defaultValue	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*defaultValue { ^1 }$/;"	m
*defaultValue	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*defaultValue { ^Event.silent }$/;"	m
*default_	SCClassLibrary/Common/Control/Server.sc	/^	*default_ { |server|$/;"	m
*default_	SCClassLibrary/Common/Streams/Quant.sc	/^	*default_ { |quant| default = quant.asQuant }$/;"	m
*default_	SCClassLibrary/QtCollider/QFont.sc	/^  *default_ { arg font;$/;"	m
*defer	SCClassLibrary/Common/Control/SystemActions.sc	/^	*defer { arg object;$/;"	m
*define	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*define { arg ... assns;$/;"	m
*delayUGen	quarks/Feedback/Fb.sc	/^	*delayUGen { ^DelayN }$/;"	m
*delete	SCClassLibrary/Common/Files/File.sc	/^	*delete { arg pathName;$/;"	m
*deltaTillNext	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*deltaTillNext { arg quantize;	^global.deltaTillNext(quantize) }$/;"	m
*deprecatedStartupFiles	SCClassLibrary/Platform/Platform.sc	/^	*deprecatedStartupFiles {|paths|$/;"	m
*devices	SCClassLibrary/Common/Control/SerialPort.sc	/^	*devices {$/;"	m
*devices	SCClassLibrary/Common/Control/Server.sc	/^	*devices {$/;"	m
*dialog	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*dialog { ^CocoaDialog }$/;"	m
*dialog	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*dialog { ^CocoaDialog }$/;"	m
*dialog	SCClassLibrary/QtCollider/QtGUI.sc	/^  *dialog { ^QDialog }$/;"	m
*dictFor	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*dictFor { | server |$/;"	m
*didIndexDocuments	SCClassLibrary/SCDoc/SCDoc.sc	/^    *didIndexDocuments {$/;"	m
*dir	SCClassLibrary/SCDoc/Help.sc	/^	*dir {$/;"	m
*dir_	SCClassLibrary/Common/GUI/Document.sc	/^	*dir_ { | path |$/;"	m
*dir_	quarks/cruciallib/Instr/Instr.sc	/^	*dir_ { arg p;$/;"	m
*dir_	quarks/cruciallib/Players/SFP/SFP.sc	/^	*dir_ { arg path;$/;"	m
*dir_	quarks/cruciallib/Sample/Sample.sc	/^	*dir_ { arg p;$/;"	m
*directory	SCClassLibrary/Common/Collections/Scale.sc	/^	*directory {$/;"	m
*disconnect	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*disconnect { arg inport=0, device=0;$/;"	m
*disconnect	SCClassLibrary/Platform/linux/extMIDIOut.sc	/^	*disconnect { arg outport=0, device=0;$/;"	m
*disconnect	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	*disconnect {}$/;"	m
*disconnect	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	*disconnect {}$/;"	m
*disconnectAll	SCClassLibrary/Common/Control/NetAddr.sc	/^	*disconnectAll {$/;"	m
*disconnectByUID	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*disconnectByUID {arg inport, uid;$/;"	m
*disconnectByUID	SCClassLibrary/Platform/linux/extMIDIOut.sc	/^	*disconnectByUID {arg outport, uid;$/;"	m
*disconnectByUID	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	*disconnectByUID {}$/;"	m
*disconnectByUID	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	*disconnectByUID {}$/;"	m
*disposeClient	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*disposeClient {$/;"	m
*do	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*do { |action| ^global.do(action) }$/;"	m
*doAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doAction { arg src, status, a, b, c;$/;"	m
*doBendAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doBendAction { arg src, chan, val;$/;"	m
*doControlAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doControlAction { arg src, chan, num, val;$/;"	m
*doInvalidSysexAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doInvalidSysexAction { arg src, packet;$/;"	m
*doNoteOffAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doNoteOffAction { arg src, chan, num, veloc;$/;"	m
*doNoteOnAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doNoteOnAction { arg src, chan, num, veloc;$/;"	m
*doOnce	SCClassLibrary/Common/Control/SystemActions.sc	/^	*doOnce { arg object;$/;"	m
*doPolyTouchAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doPolyTouchAction { arg src, chan, num, val;$/;"	m
*doProgramAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doProgramAction { arg src, chan, val;$/;"	m
*doSMPTEaction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doSMPTEaction { arg src, frameRate, timecode;$/;"	m
*doSpeechDoneAction	SCClassLibrary/Common/osx/Speech.sc	/^	*doSpeechDoneAction { arg chan;$/;"	m
*doSysexAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doSysexAction { arg src,  packet;$/;"	m
*doSysrtAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doSysrtAction { arg src, index, val;$/;"	m
*doTouchAction	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*doTouchAction { arg src, chan, val;$/;"	m
*doUnixCmdAction	SCClassLibrary/Common/Collections/String.sc	/^	*doUnixCmdAction {$/;"	m
*doWordAction	SCClassLibrary/Common/osx/Speech.sc	/^	*doWordAction { arg chan;$/;"	m
*document	SCClassLibrary/Common/Streams/History.sc	/^	*document { current.document }$/;"	m
*documents	SCClassLibrary/SCDoc/SCDoc.sc	/^    *documents {$/;"	m
*doesNotUnderstand	SCClassLibrary/Common/Collections/Scale.sc	/^	*doesNotUnderstand { |selector, args|$/;"	m
*doesNotUnderstand	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Common/GUI/GUI.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Platform/linux/GLID.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Platform/osx/MXHID.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*doesNotUnderstand	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*doesNotUnderstand { arg selector ... args;$/;"	m
*double	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*double {^"d"}$/;"	m
*dragBoth	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*dragBoth { ^SCDragBoth }$/;"	m
*dragBoth	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*dragBoth { ^SCDragBoth }$/;"	m
*dragBoth	SCClassLibrary/QtCollider/QtGUI.sc	/^  *dragBoth { ^QDragBoth; }$/;"	m
*dragSink	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*dragSink { ^SCDragSink }$/;"	m
*dragSink	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*dragSink { ^SCDragSink }$/;"	m
*dragSink	SCClassLibrary/QtCollider/QtGUI.sc	/^  *dragSink { ^QDragSink; }$/;"	m
*dragSource	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*dragSource { ^SCDragSource }$/;"	m
*dragSource	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*dragSource { ^SCDragSource }$/;"	m
*dragSource	SCClassLibrary/QtCollider/QtGUI.sc	/^  *dragSource { ^QDragSource; }$/;"	m
*draw	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*draw { arg option = 0;\/\/ 0 = fill, 1 = eofill, 2 = stroke, 3 = fillstroke, 4 = eofillstroke$/;"	m
*draw	SCClassLibrary/QtCollider/QPen.sc	/^  *draw { arg style;$/;"	m
*drawAquaButton	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*drawAquaButton { arg rect, type=0, down = false, on = false;$/;"	m
*drop	SCClassLibrary/Common/Streams/History.sc	/^	*drop {|num| current.drop(num) }$/;"	m
*dumpPool	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*dumpPool {$/;"	m
*dumpTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*dumpTree { |node, prefix = ""| ^global.dumpTree(node, prefix) }$/;"	m
*editorFor	quarks/cruciallib/Editors/NumberEditor.sc	/^	*editorFor {$/;"	m
*elapsedBeats	SCClassLibrary/Common/Core/Clock.sc	/^	*elapsedBeats { ^TempoClock.default.elapsedBeats	 }$/;"	m
*elapsedTime	SCClassLibrary/Common/Core/Kernel.sc	/^	*elapsedTime { _ElapsedTime }$/;"	m
*embedInStream	SCClassLibrary/Common/Streams/Rest.sc	/^	*embedInStream { |inval|$/;"	m
*embedLoop	SCClassLibrary/Common/Streams/Pfx.sc	/^	*embedLoop { arg inevent, stream, groupID, ingroup, cleanup;$/;"	m
*end	SCClassLibrary/Common/Streams/History.sc	/^	*end {$/;"	m
*endLog	SCClassLibrary/Common/Streams/History.sc	/^	*endLog {$/;"	m
*endTransparencyLayer	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*endTransparencyLayer { \/\/ will work only for Mac Os X >= 10.3 - does nothing for others$/;"	m
*endTransparencyLayer	SCClassLibrary/QtCollider/QPen.sc	/^  *endTransparencyLayer {$/;"	m
*enpath	quarks/cruciallib/Players/pathUtilities.sc	/^	*enpath { arg obj;$/;"	m
*enter	SCClassLibrary/Common/Streams/History.sc	/^	*enter { |lineStr, id=\\me|$/;"	m
*envelopeView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*envelopeView { ^SCEnvelopeView }$/;"	m
*envelopeView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*envelopeView { ^SCEnvelopeView }$/;"	m
*envelopeView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *envelopeView { ^QEnvelopeView }$/;"	m
*errno	SCClassLibrary/Common/Unix/Unix.sc	/^	*errno {$/;"	m
*error	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*error {$/;"	m
*escapeSpecialChars	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *escapeSpecialChars {|str|$/;"	m
*et	SCClassLibrary/Common/Collections/Scale.sc	/^	*et { |pitchesPerOctave = 12 |$/;"	m
*etName	SCClassLibrary/Common/Collections/Scale.sc	/^	*etName { |pitchesPerOctave|$/;"	m
*etempo_	SCClassLibrary/Common/Core/Clock.sc	/^	*etempo_ { | newTempo | TempoClock.default.etempo_(newTempo)	 }$/;"	m
*event	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*event { arg proxyClass = PatternProxy;$/;"	m
*eventType	SCClassLibrary/Common/Streams/Pfx.sc	/^	*eventType {$/;"	m
*exclude	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*exclude { |classArray|$/;"	m
*exclude	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*exclude { |selectorArray|$/;"	m
*excludePaths	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*excludePaths {$/;"	m
*exists	SCClassLibrary/Common/Files/File.sc	/^	*exists { arg pathName;$/;"	m
*exists	SCClassLibrary/Platform/iphone/SystemOverwrites/extFile.sc	/^	*exists { arg pathName;$/;"	m
*existsCaseSensitive	SCClassLibrary/Common/Files/File.sc	/^	*existsCaseSensitive { arg pathName;$/;"	m
*expandBinomialFactors	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	*expandBinomialFactors { arg factors; var constant = 1, c = Array.newClear(factors.size);$/;"	m
*exportDocMapJS	SCClassLibrary/SCDoc/SCDoc.sc	/^    *exportDocMapJS {|path|$/;"	m
*exprand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*exprand { arg size, minVal, maxVal;$/;"	m
*extensions	quarks/cruciallib/Instr/Instr.sc	/^	*extensions { ^["scd","rtf","txt"] }$/;"	m
*ezListView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezListView { ^EZListView }$/;"	m
*ezListView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezListView { ^EZListView }$/;"	m
*ezListView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezListView { ^EZListView }$/;"	m
*ezNumber	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezNumber { ^EZNumber}$/;"	m
*ezNumber	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezNumber { ^EZNumber}$/;"	m
*ezNumber	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezNumber { ^EZNumber}$/;"	m
*ezPopUpMenu	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezPopUpMenu { ^EZPopUpMenu}$/;"	m
*ezPopUpMenu	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezPopUpMenu { ^EZPopUpMenu}$/;"	m
*ezPopUpMenu	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezPopUpMenu { ^EZPopUpMenu}$/;"	m
*ezRanger	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezRanger { ^EZRanger }$/;"	m
*ezRanger	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezRanger { ^EZRanger }$/;"	m
*ezRanger	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezRanger { ^EZRanger }$/;"	m
*ezScroller	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezScroller { ^EZScroller }$/;"	m
*ezScroller	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezScroller { ^EZScroller }$/;"	m
*ezScroller	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezScroller { ^EZScroller }$/;"	m
*ezSlider	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*ezSlider { ^EZSlider }$/;"	m
*ezSlider	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*ezSlider { ^EZSlider }$/;"	m
*ezSlider	SCClassLibrary/QtCollider/QtGUI.sc	/^  *ezSlider { ^EZSlider }$/;"	m
*fftCosTable	SCClassLibrary/Common/Math/Signal.sc	/^	*fftCosTable { arg fftsize;$/;"	m
*fib	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*fib { arg size, a=0.0, b=1.0;$/;"	m
*fileSize	SCClassLibrary/Common/Files/File.sc	/^	*fileSize { arg pathName;$/;"	m
*fill	SCClassLibrary/Common/Audio/Mix.sc	/^	*fill { arg n, function;$/;"	m
*fill	SCClassLibrary/Common/Collections/Collection.sc	/^	*fill { | size, function |$/;"	m
*fill	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fill {$/;"	m
*fill	SCClassLibrary/QtCollider/QPen.sc	/^  *fill {$/;"	m
*fill	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	*fill { arg length, stream;$/;"	m
*fill	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	*fill { arg n, stream, order=1;$/;"	m
*fill	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	*fill { arg size, stream;$/;"	m
*fill	quarks/MathLib/classes/various/Matrix.sc	/^	*fill { arg rows, cols, func;$/;"	m
*fill2D	SCClassLibrary/Common/Collections/Collection.sc	/^	*fill2D { | rows, cols, function |$/;"	m
*fill3D	SCClassLibrary/Common/Collections/Collection.sc	/^	*fill3D { | planes, rows, cols, function |$/;"	m
*fillAxialGradient	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillAxialGradient { arg startPoint, endPoint, color0, color1;$/;"	m
*fillAxialGradient	SCClassLibrary/QtCollider/QPen.sc	/^  *fillAxialGradient { arg startPoint, endPoint, startColor, endColor;$/;"	m
*fillColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillColor_ { arg color;$/;"	m
*fillColor_	SCClassLibrary/QtCollider/QPen.sc	/^  *fillColor_ { arg aColor;$/;"	m
*fillND	SCClassLibrary/Common/Collections/Collection.sc	/^	*fillND { | dimensions, function, args = #[] | \/\/ args are private$/;"	m
*fillOval	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillOval { arg rect;$/;"	m
*fillOval	SCClassLibrary/QtCollider/QPen.sc	/^  *fillOval { arg rect;$/;"	m
*fillRadialGradient	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillRadialGradient { arg innerCircleCenter, outerCircleCenter, startRadius,$/;"	m
*fillRadialGradient	SCClassLibrary/QtCollider/QPen.sc	/^  *fillRadialGradient { arg innerCircleCenter, outerCircleCenter, startRadius, endRadius, startColor, endColor;$/;"	m
*fillRect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillRect { arg rect;$/;"	m
*fillRect	SCClassLibrary/QtCollider/QPen.sc	/^  *fillRect { arg rect;$/;"	m
*fillStroke	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*fillStroke {$/;"	m
*fillStroke	SCClassLibrary/QtCollider/QPen.sc	/^  *fillStroke {$/;"	m
*filterCategories	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*filterCategories {$/;"	m
*finalSelection	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*finalSelection { |str|$/;"	m
*find	SCClassLibrary/Common/Quarks/Quark.sc	/^	*find { |name|$/;"	m
*find	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*find { arg ... clauses;$/;"	m
*findAllReferences	SCClassLibrary/Common/Core/Kernel.sc	/^	*findAllReferences { arg aSymbol;$/;"	m
*findBus	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*findBus { arg index,rate;$/;"	m
*findBus	quarks/cruciallib/ServerTools/BusPool.sc	/^	*findBus { |server,index|$/;"	m
*findBy	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*findBy { |vendorID, productID, locID, versionID|$/;"	m
*findFileFor	quarks/cruciallib/Instr/Instr.sc	/^	*findFileFor { arg symbolized;$/;"	m
*findFileInDir	quarks/cruciallib/Instr/Instr.sc	/^	*findFileInDir { arg symbolized, rootPath;$/;"	m
*findFirstAvailable	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*findFirstAvailable { |fontNames, action|$/;"	m
*findHelpFile	SCClassLibrary/SCDoc/SCDoc.sc	/^    *findHelpFile {|str|$/;"	m
*findHelpFile	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*findHelpFile { |str| ^global.findHelpFile(str) }$/;"	m
*findKeyForSpec	quarks/cruciallib/Instr/instrSupport.sc	/^	*findKeyForSpec { arg spec;$/;"	m
*findMethod	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*findMethod { |id, text|$/;"	m
*findNode	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*findNode { arg nodeID;$/;"	m
*findPort	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*findPort { arg deviceName,portName;$/;"	m
*findReferencesToSymbol	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*findReferencesToSymbol {|requestId, symbol|$/;"	m
*findRoot	quarks/MathLib/classes/various/RootFinder.sc	/^	*findRoot { arg func,jacobian,x0,param,opts=[1e-04,1e-06,1e-12,500];$/;"	m
*findSpace	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	*findSpace { |proxy, getCode = false|$/;"	m
*finish	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*finish {$/;"	m
*finishString	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*finishString { |meth|$/;"	m
*finishString	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*finishString {$/;"	m
*firstAt	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*firstAt { arg argName,spec;$/;"	m
*flipY	SCClassLibrary/QtCollider/QWindow.sc	/^  *flipY { arg aRect;$/;"	m
*float	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*float {^"f"}$/;"	m
*focusView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *focusView {$/;"	m
*font	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*font { ^SCFont }$/;"	m
*font	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*font { ^SCFont }$/;"	m
*font	SCClassLibrary/QtCollider/QtGUI.sc	/^  *font { ^QFont }$/;"	m
*font_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*font_ { arg argFont;$/;"	m
*font_	SCClassLibrary/QtCollider/QPen.sc	/^  *font_ { arg aFont;$/;"	m
*for	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	*for { | bus |$/;"	m
*for	quarks/cruciallib/Editors/NumberEditor.sc	/^	*for { arg object ... args;$/;"	m
*forSpec	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*forSpec { arg argName,spec;$/;"	m
*forUrl	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*forUrl { |url|$/;"	m
*forgetTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*forgetTree { ^global.forgetTree }$/;"	m
*formatTime	SCClassLibrary/Common/Streams/History.sc	/^	*formatTime { arg val;$/;"	m
*free	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*free { super.free(true) }$/;"	m
*free	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*free { |finished = false|$/;"	m
*freeAll	SCClassLibrary/Common/Control/Buffer.sc	/^	*freeAll { arg server;$/;"	m
*freeAll	SCClassLibrary/Common/Control/Node.sc	/^	*freeAll {$/;"	m
*freeAll	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*freeAll {$/;"	m
*freeAll	SCClassLibrary/Common/Control/Server.sc	/^	*freeAll { arg evenRemote = false;$/;"	m
*freeAll	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*freeAll { arg server;$/;"	m
*freeDef	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*freeDef { arg defName,server;$/;"	m
*freePool	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*freePool {$/;"	m
*freqScope	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*freqScope { ^SCFreqScopeWindow }$/;"	m
*freqScopeView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*freqScopeView { ^SCFreqScope }$/;"	m
*freqScopeView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*freqScopeView { ^PlusFreqScope }$/;"	m
*freqScopeView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *freqScopeView { ^PlusFreqScope }$/;"	m
*from32Bits	SCClassLibrary/Common/Math/Float.sc	/^	*from32Bits { arg word;$/;"	m
*from64Bits	SCClassLibrary/Common/Math/Float.sc	/^	*from64Bits { arg hiWord, loWord;$/;"	m
*fromArray	SCClassLibrary/Common/Collections/Array2D.sc	/^	*fromArray { arg rows,cols, array;$/;"	m
*fromArray	SCClassLibrary/Common/Core/Color.sc	/^	*fromArray { arg array;$/;"	m
*fromArray	SCClassLibrary/Common/Geometry/Rect.sc	/^	*fromArray {|array|$/;"	m
*fromColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*fromColor {|color|$/;"	m
*fromFile	SCClassLibrary/Common/Quarks/Quark.sc	/^	*fromFile { | path, parent |$/;"	m
*fromHexString	SCClassLibrary/Common/Core/Color.sc	/^	*fromHexString {|string|$/;"	m
*fromID	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*fromID { arg id;$/;"	m
*fromID	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*fromID { arg id;$/;"	m
*fromID	SCClassLibrary/Common/GUI/GUI.sc	/^	*fromID { arg id;$/;"	m
*fromIP	SCClassLibrary/Common/Control/NetAddr.sc	/^	*fromIP { arg addr, port=0;$/;"	m
*fromImage	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*fromImage { arg scimage;$/;"	m
*fromLine	SCClassLibrary/DefaultLibrary/Main.sc	/^	*fromLine { arg string;$/;"	m
*fromLocalPath	SCClassLibrary/SCDoc/SCDoc.sc	/^    *fromLocalPath { |string|$/;"	m
*fromName	SCClassLibrary/Common/Control/Server.sc	/^	*fromName { arg name;$/;"	m
*fromName	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*fromName { arg imageNamed;$/;"	m
*fromOS9	SCClassLibrary/Common/Files/PathName.sc	/^	*fromOS9 { arg path="";$/;"	m
*fromPath	SCClassLibrary/Common/Quarks/Quark.sc	/^	*fromPath { |path, parent| \/\/ if no blob exists, make a generic one$/;"	m
*fromPoints	SCClassLibrary/Common/Geometry/Rect.sc	/^	*fromPoints { arg pt1, pt2;$/;"	m
*fromRGBA	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*fromRGBA {|r, g=0, b=0, a=255|$/;"	m
*fromRect	SCClassLibrary/Common/Geometry/Rect.sc	/^	*fromRect { arg rect;$/;"	m
*fromString	SCClassLibrary/Common/Quarks/Quark.sc	/^	*fromString { | string , parent|$/;"	m
*fromWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*fromWindow {arg window, rect;$/;"	m
*front	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*front {$/;"	m
*full	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*full {$/;"	m
*functionSelector	SCClassLibrary/Common/Control/SystemActions.sc	/^	*functionSelector {$/;"	m
*generateTempName	SCClassLibrary/Common/Audio/SystemSynthDefs.sc	/^	*generateTempName {$/;"	m
*geom	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*geom { arg size, start, grow;$/;"	m
*get	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*get { arg id;$/;"	m
*get	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*get { arg id;$/;"	m
*get	SCClassLibrary/Common/GUI/GUI.sc	/^	*get { arg id;$/;"	m
*getAnnotation	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*getAnnotation { arg thing;$/;"	m
*getAnnotations	quarks/cruciallib/ServerTools/BusPool.sc	/^	*getAnnotations { |bus|$/;"	m
*getClass	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	*getClass { |method|$/;"	m
*getDate	SCClassLibrary/Common/Math/Date.sc	/^	*getDate { ^this.localtime }$/;"	m
*getFilterAttributes	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*getFilterAttributes {|filterName|$/;"	m
*getFilterNames	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*getFilterNames {|category|$/;"	m
*getID	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*getID { arg obj;$/;"	m
*getLib	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*getLib { arg libname;$/;"	m
*getMethodDoc	SCClassLibrary/SCDoc/SCDoc.sc	/^    *getMethodDoc {|classname,methodname|$/;"	m
*getMethods	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*getMethods { arg class;$/;"	m
*getMouseCoords	SCClassLibrary/Platform/Platform.sc	/^	*getMouseCoords { ^GUI.cursorPosition }$/;"	m
*getNew	quarks/cruciallib/Players/SFP/SFP.sc	/^	*getNew { arg receivingFunction;$/;"	m
*getOldWrapUrl	SCClassLibrary/SCDoc/SCDoc.sc	/^    *getOldWrapUrl {|url|$/;"	m
*getOutput	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	*getOutput { | bus, argRate, numChannels, offset = 0 |$/;"	m
*getPaths	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*getPaths { arg okFunc, cancelFunc, allowsMultiple=true;$/;"	m
*getPaths	SCClassLibrary/QtCollider/QDialog.sc	/^  *getPaths { arg okFunc, cancelFunc, allowsMultiple=true;$/;"	m
*getPathsInDirectory	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*getPathsInDirectory { arg directoryPath,extension,maxItems=1000;$/;"	m
*getString	quarks/cruciallib/Gui/Dialogs.sc	/^	*getString { arg prompt,defaultString,callback;$/;"	m
*getTimeFromString	SCClassLibrary/Common/Streams/History.sc	/^	*getTimeFromString { arg str;$/;"	m
*getcwd	SCClassLibrary/Common/Files/File.sc	/^	*getcwd {$/;"	m
*global	SCClassLibrary/Common/Collections/Library.sc	/^	*global { ^global }$/;"	m
*global	SCClassLibrary/Common/Collections/Library.sc	/^	*global {$/;"	m
*global	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*global { ^(global ?? { global = this.new; }) }$/;"	m
*global	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*global {$/;"	m
*global	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*global {$/;"	m
*globalKeyDownAction_	SCClassLibrary/QtCollider/QView.sc	/^  *globalKeyDownAction_ { arg action;$/;"	m
*globalKeyUpAction_	SCClassLibrary/QtCollider/QView.sc	/^  *globalKeyUpAction_ { arg action;$/;"	m
*globalPath	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	*globalPath {$/;"	m
*global_	SCClassLibrary/Common/Collections/Library.sc	/^	*global_ { arg obj; global = obj; }$/;"	m
*global_	SCClassLibrary/Common/Collections/Library.sc	/^	*global_ { arg obj;$/;"	m
*gmtime	SCClassLibrary/Common/Math/Date.sc	/^	*gmtime { ^this.new.gmtime }$/;"	m
*goHome	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*goHome { this.goTo(defaultHomeUrl); }$/;"	m
*goTo	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*goTo {|url|$/;"	m
*grain	SCClassLibrary/Common/Control/Node.sc	/^	*grain { arg defName, args, target, addAction=\\addToHead;$/;"	m
*gray	SCClassLibrary/Common/Core/Color.sc	/^	*gray { arg gray = 0.5, alpha = 1.0;$/;"	m
*green	SCClassLibrary/Common/Core/Color.sc	/^	*green { arg val = 1.0, alpha = 1.0; ^Color.new(max(val-1,0), min(1,val), max(val-1,0), alpha) }$/;"	m
*grey	SCClassLibrary/Common/Core/Color.sc	/^	*grey { arg grey = 0.5, alpha = 1.0;$/;"	m
*gridLayout	SCClassLibrary/QtCollider/QtGUI.sc	/^  *gridLayout { ^QGridLayout }$/;"	m
*groupNormalize	SCClassLibrary/Common/Files/SoundFile.sc	/^	*groupNormalize { |paths, outDir, newHeaderFormat, newSampleFormat,$/;"	m
*guess	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	*guess { |key, value|$/;"	m
*gui	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*gui { ^this.global.gui }$/;"	m
*gui	SCClassLibrary/JITLib/GUI/extJITgui.sc	/^	*gui { | numItems, bounds, preset|$/;"	m
*gui	SCClassLibrary/JITLib/GUI/extJITgui.sc	/^	*gui { |numItems, bounds, preset|$/;"	m
*gui	SCClassLibrary/SCDoc/Help.sc	/^	*gui {$/;"	m
*gui	quarks/cruciallib/ServerTools/BusPool.sc	/^	*gui {$/;"	m
*guiClass	quarks/cruciallib/Sequencers/BusDriver.sc	/^	*guiClass { ^StreamKrGui }$/;"	m
*guiFindBus	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*guiFindBus { arg index,rate,layout;$/;"	m
*guiFindNode	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*guiFindNode { arg nodeID,layout;$/;"	m
*guify	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	*guify { arg parent,title,width,height,background;$/;"	m
*hLayout	SCClassLibrary/QtCollider/QtGUI.sc	/^  *hLayout { ^QHLayout }$/;"	m
*hLayoutView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*hLayoutView { ^SCHLayoutView }$/;"	m
*hLayoutView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*hLayoutView { ^SCHLayoutView }$/;"	m
*hLayoutView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *hLayoutView { ^QHLayoutView }$/;"	m
*hammingWindow	SCClassLibrary/Common/Math/Signal.sc	/^	*hammingWindow { arg size, pad=0;$/;"	m
*handleCopyMethods	SCClassLibrary/SCDoc/SCDoc.sc	/^    *handleCopyMethods {|node,doc|$/;"	m
*handshake	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*handshake {$/;"	m
*hanningWindow	SCClassLibrary/Common/Math/Signal.sc	/^	*hanningWindow { arg size, pad=0;$/;"	m
*hardFreeAll	SCClassLibrary/Common/Control/Server.sc	/^	*hardFreeAll { arg evenRemote = false;$/;"	m
*hardRun	SCClassLibrary/Common/Control/SystemActions.sc	/^	*hardRun {$/;"	m
*hasCurrentControl	SCClassLibrary/Common/Control/GraphBuilder.sc	/^		*hasCurrentControl {$/;"	m
*hasEditedDocuments	SCClassLibrary/Common/GUI/Document.sc	/^	*hasEditedDocuments {$/;"	m
*hasGlobalDictionary	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*hasGlobalDictionary { ^false }$/;"	m
*hasGlobalDictionary	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*hasGlobalDictionary { ^true }$/;"	m
*hasMovedOn_	SCClassLibrary/Common/Streams/History.sc	/^	*hasMovedOn_ { |flag=true| current.hasMovedOn_(flag) }$/;"	m
*hashEncode	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*hashEncode { arg object;$/;"	m
*head	SCClassLibrary/Common/Control/Node.sc	/^	*head { arg aGroup, defName, args;$/;"	m
*head	SCClassLibrary/Common/Control/Node.sc	/^	*head { arg aGroup; 	^this.new(aGroup, \\addToHead) }$/;"	m
*heap	SCClassLibrary/QtCollider/QObject.sc	/^  *heap { ^heap.copy }$/;"	m
*helpDir	SCClassLibrary/Platform/Platform.sc	/^	*helpDir { ^thisProcess.platform.helpDir }$/;"	m
*helpSourceDir_	SCClassLibrary/SCDoc/SCDoc.sc	/^    *helpSourceDir_ {|path|$/;"	m
*helpSourceDirs	SCClassLibrary/SCDoc/SCDoc.sc	/^    *helpSourceDirs {$/;"	m
*helpTargetDir_	SCClassLibrary/SCDoc/SCDoc.sc	/^    *helpTargetDir_ {|path|$/;"	m
*hline	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*hline { ^"  \\\\hline  " }$/;"	m
*hsv	SCClassLibrary/Common/Core/Color.sc	/^	*hsv { arg hue, sat, val, alpha=1;$/;"	m
*htmlForLink	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *htmlForLink {|link|$/;"	m
*id	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*id { ^\\iphone }$/;"	m
*id	SCClassLibrary/Platform/linux/GLID.sc	/^	*id { ^\\linux_hid }$/;"	m
*id	SCClassLibrary/Platform/osx/MXHID.sc	/^	*id { ^\\osx_hid }$/;"	m
*id	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*id { ^\\cocoa }$/;"	m
*id	SCClassLibrary/QtCollider/QtGUI.sc	/^  *id { ^\\qt }$/;"	m
*ideName	SCClassLibrary/Platform/Platform.sc	/^	*ideName { ^thisProcess.platform.ideName }$/;"	m
*image	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*image { arg img;$/;"	m
*image	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*image { ^SCImage }$/;"	m
*image	SCClassLibrary/QtCollider/QtGUI.sc	/^  *image { ^this.notImplemented( "Image" ) }$/;"	m
*imageAtPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*imageAtPoint { arg img, point;$/;"	m
*implClass	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*implClass {$/;"	m
*implClass	SCClassLibrary/Common/Streams/Ppar.sc	/^	*implClass { ^Ppar }$/;"	m
*implClass	SCClassLibrary/Common/Streams/Ppar.sc	/^	*implClass { ^Ptpar }$/;"	m
*implementationClass	SCClassLibrary/Platform/osx/extDocument.sc	/^	*implementationClass { ^CocoaDocument }$/;"	m
*implementsClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*implementsClass { ^'Slider2D' }$/;"	m
*implementsClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*implementsClass { ^'TabletSlider2D' }$/;"	m
*implementsClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*implementsClass { ^this.name.asString[2..].asSymbol }$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QDialog.sc	/^  *implementsClass {^'Dialog'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QFont.sc	/^  *implementsClass {^'Font'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *implementsClass {^'GridLayout'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *implementsClass {^'HLayout'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *implementsClass {^'StackLayout'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *implementsClass {^'VLayout'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QPen.sc	/^  *implementsClass {^'Pen'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *implementsClass {^'Stethoscope'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *implementsClass {^'Stethoscope'}$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QView.sc	/^  *implementsClass { ^this.name.asString[1..].asSymbol }$/;"	m
*implementsClass	SCClassLibrary/QtCollider/QWindow.sc	/^  *implementsClass {^'Window'}$/;"	m
*inDevices	SCClassLibrary/Common/Control/Server.sc	/^	*inDevices {$/;"	m
*includePaths	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*includePaths {$/;"	m
*indexAllDocuments	SCClassLibrary/SCDoc/SCDoc.sc	/^    *indexAllDocuments { |clearCache=false|$/;"	m
*indexOldHelp	SCClassLibrary/SCDoc/SCDoc.sc	/^    *indexOldHelp {$/;"	m
*inferCycleLength	quarks/cxpatterns/CXPatterns.sc	/^	*inferCycleLength { arg int;$/;"	m
*init	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*init { arg inports, outports; \/\/ by default initialize all available ports$/;"	m
*init	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*init {$/;"	m
*init	SCClassLibrary/Common/Control/SystemActions.sc	/^	*init {$/;"	m
*init	SCClassLibrary/Common/osx/Speech.sc	/^	*init { arg num= 1;$/;"	m
*init	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*init { arg argStart, argSize, argDoc;$/;"	m
*initClass	SCClassLibrary/Common/Audio/Env.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Audio/SystemSynthDefs.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/Event.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/EventTypesWithCleanup.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/Library.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*initClass { id = 1000; }$/;"	m
*initClass	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/Scale.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Collections/String.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/Buffer.sc	/^	*initClass { serverCaches = IdentityDictionary.new }$/;"	m
*initClass	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/GeneralHIDSpec.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/NetAddr.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/Node.sc	/^	*initClass {  roots = IdentityDictionary.new; }$/;"	m
*initClass	SCClassLibrary/Common/Control/Node.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/OSC.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*initClass { Class.initClassTree(AbstractDispatcher); allFuncProxies = IdentitySet.new; }$/;"	m
*initClass	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*initClass { all = IdentitySet.new }$/;"	m
*initClass	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/Score.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/SerialPort.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/Server.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/SkipJack.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/WII.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Core/Clock.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Core/Object.sc	/^	*initClass { dependantsDictionary = IdentityDictionary.new(4); }$/;"	m
*initClass	SCClassLibrary/Common/Files/File.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Files/PathName.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/GUI.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/Inspector.sc	/^	*initClass { allInspectors = []; }$/;"	m
*initClass	SCClassLibrary/Common/GUI/Model.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Streams/History.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/Streams/IOStream.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*initClass { all = () }$/;"	m
*initClass	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	*initClass { all = IdentityDictionary.new }$/;"	m
*initClass	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/Platform.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/linux/LID.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/osx/MXHID.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/QtCollider/QFont.sc	/^  *initClass {$/;"	m
*initClass	SCClassLibrary/QtCollider/QView.sc	/^  *initClass {$/;"	m
*initClass	SCClassLibrary/QtCollider/QtGUI.sc	/^  *initClass {$/;"	m
*initClass	SCClassLibrary/QtCollider/enums.sc	/^  *initClass {$/;"	m
*initClass	SCClassLibrary/SCDoc/SCDoc.sc	/^    *initClass {$/;"	m
*initClass	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*initClass {$/;"	m
*initClass	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Crucial.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Gui/ActionButton.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Instr/Instr.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*initClass { global = this.new; }$/;"	m
*initClass	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/Scheduling/Tempo.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*initClass {$/;"	m
*initClass	quarks/cruciallib/ServerTools/BusPool.sc	/^	*initClass {$/;"	m
*initClass	quarks/cxpatterns/CXPatterns.sc	/^	*initClass {$/;"	m
*initClassTree	SCClassLibrary/Common/Core/Kernel.sc	/^	*initClassTree { arg aClass;$/;"	m
*initDefaultMenu	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*initDefaultMenu {$/;"	m
*initDict	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*initDict {$/;"	m
*initGUI	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	*initGUI {$/;"	m
*initKeycodeMap	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^	*initKeycodeMap {$/;"	m
*initSVNDetails	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	*initSVNDetails {$/;"	m
*initServerCache	SCClassLibrary/Common/Control/Buffer.sc	/^	*initServerCache { |server|$/;"	m
*initSpecs	quarks/cruciallib/Crucial.sc	/^	*initSpecs {$/;"	m
*initSynthDefs	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*initSynthDefs {$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^bendinit }$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^ccinit }$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^noffinit }$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^norinit }$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^pcinit }$/;"	m
*initialized	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*initialized { ^touchinit }$/;"	m
*inspectorFor	SCClassLibrary/Common/GUI/Inspector.sc	/^	*inspectorFor { arg object;$/;"	m
*instVarsForGui	quarks/cruciallib/Gui/gui.sc	/^	*instVarsForGui { ^[] }$/;"	m
*instVarsForGui	quarks/cruciallib/Gui/gui.sc	/^	*instVarsForGui {$/;"	m
*install	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*install { |name, includeDependencies=true, checkoutIfNeeded=true|$/;"	m
*installed	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*installed { ^this.global.installed }$/;"	m
*instance	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*instance {$/;"	m
*integer	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*integer {^"i"}$/;"	m
*interpolation	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	 *interpolation { arg size, start=0.0, end=1.0;$/;"	m
*inverseFrom3dPoints	quarks/MathLib/classes/various/Trafo.sc	/^	*inverseFrom3dPoints {|a, b, c|$/;"	m
*iota	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	*iota { arg ... sizes;$/;"	m
*ir	SCClassLibrary/Common/Audio/InOut.sc	/^	*ir { arg values;$/;"	m
*ir	SCClassLibrary/Common/Audio/InOut.sc	/^	*ir {$/;"	m
*ir	SCClassLibrary/Common/Audio/InfoUGens.sc	/^	*ir { arg bufnum;$/;"	m
*ir	SCClassLibrary/Common/Audio/InfoUGens.sc	/^	*ir {$/;"	m
*ir	SCClassLibrary/Common/Audio/Line.sc	/^	*ir { arg freq = 1000, root = 0, minAmp = 0.32, rootAmp = 1.0;$/;"	m
*ir	SCClassLibrary/Common/Audio/Line.sc	/^	*ir { arg freq = 60.midicps, root = 60.midicps, exp = 0.3333;$/;"	m
*ir	SCClassLibrary/Common/Audio/Noise.sc	/^	*ir { arg id=0;$/;"	m
*ir	SCClassLibrary/Common/Audio/Noise.sc	/^	*ir { arg trig = 0.0, seed=56789;$/;"	m
*ir	SCClassLibrary/Common/Audio/Trig.sc	/^	*ir { arg in = 0.0, lo = 0.0, hi = 1.0;$/;"	m
*ir	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*ir { arg  name, values, lags;$/;"	m
*isAudioControlUGen	SCClassLibrary/Common/Audio/InOut.sc	/^	*isAudioControlUGen { ^true }$/;"	m
*isControlUGen	SCClassLibrary/Common/Audio/InOut.sc	/^	*isControlUGen { ^true }$/;"	m
*isDefined	quarks/cruciallib/Instr/Instr.sc	/^	*isDefined { arg name;$/;"	m
*isInputUGen	SCClassLibrary/Common/Audio/InOut.sc	/^ 	*isInputUGen { ^true }$/;"	m
*isInstalled	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*isInstalled { |name| ^this.global.isInstalled(name) }$/;"	m
*isOutputUGen	SCClassLibrary/Common/Audio/InOut.sc	/^ 	*isOutputUGen { ^true }$/;"	m
*isPathSeparator	SCClassLibrary/Platform/Platform.sc	/^	*isPathSeparator { |char| ^thisProcess.platform.isPathSeparator(char) }$/;"	m
*isSquare	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  *isSquare { this.deprecated(thisMethod); ^false }$/;"	m
*isSquare_	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  *isSquare_ { this.deprecated(thisMethod) }$/;"	m
*isValidServer	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	*isValidServer { arg aServer;$/;"	m
*isValidServer	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *isValidServer { arg aServer;$/;"	m
*isValidServer	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *isValidServer { arg aServer; ^aServer.isLocal }$/;"	m
*itemCount	quarks/cruciallib/ServerTools/BusPool.sc	/^	*itemCount { |bus| ^counts.itemCount(bus) }$/;"	m
*itemList	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*itemList { arg mList;$/;"	m
*joinStyle_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*joinStyle_ { arg style = 0; \/\/ 0 = miter, 1 = round, 2 = bevel$/;"	m
*joinStyle_	SCClassLibrary/QtCollider/QPen.sc	/^  *joinStyle_ { arg style;$/;"	m
*keep	SCClassLibrary/Common/Streams/History.sc	/^	*keep {|num| current.keep(num) }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^\\dialog }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^\\font }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^\\freqScope }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^\\stethoscope }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^\\window }$/;"	m
*key	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*key { ^nil }$/;"	m
*keyState	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*keyState { ^KeyState }$/;"	m
*keyState	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*keyState { ^KeyState }$/;"	m
*keyToIndex	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^	*keyToIndex { arg key, locID=0;$/;"	m
*keyboardDeviceSpec	SCClassLibrary/Platform/linux/LID.sc	/^	*keyboardDeviceSpec {$/;"	m
*killAll	SCClassLibrary/Common/Control/Server.sc	/^	*killAll {$/;"	m
*knob	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*knob { ^SCKnob }$/;"	m
*knob	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*knob { ^SCKnob }$/;"	m
*knob	SCClassLibrary/QtCollider/QtGUI.sc	/^  *knob { ^QKnob; }$/;"	m
*knownAddresses	SCClassLibrary/Common/Control/OSCService.sc	/^	*knownAddresses { arg applicationType="SuperCollider", protocol=\\udp;$/;"	m
*knownServices	SCClassLibrary/Common/Control/OSCService.sc	/^	*knownServices {$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg inputArray , bufnum=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg inputArray, bufnum=0, offset=0.0, recLevel=1.0, preLevel=0.0,$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg inputArray, bufnum=0, phase=0.0, loop=1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg inputArray, scopeNum=0, maxFrames = 4096, scopeFrames;$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg numChannels, bufnum=0, phase=0.0, loop=1.0, interpolation=2;$/;"	m
*kr	SCClassLibrary/Common/Audio/BufIO.sc	/^	*kr { arg numChannels, bufnum=0, rate=1.0, trigger=1.0, startPos=0.0, loop = 0.0, doneAction=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/CheckBadValues.sc	/^	*kr {arg in = 0.0, id = 0, post = 2;$/;"	m
*kr	SCClassLibrary/Common/Audio/Compander.sc	/^	*kr { arg in = 0.0, attackTime = 0.01, releaseTime = 0.01, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr { arg buf = 0, in = 0.0, delaytime = 0.2, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr { arg in = 0.0, maxdelaytime = 0.2, delaytime = 0.2, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr { arg in = 0.0, maxdelaytime = 0.2, delaytime = 0.2, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr {arg buffer, in;$/;"	m
*kr	SCClassLibrary/Common/Audio/Delays.sc	/^	*kr {arg buffer, phase, delTime, interp = 1, mul = 1, add = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Demand.sc	/^	*kr { arg dur = 1.0, reset = 0.0, level = 1.0, doneAction = 0, gapFirst = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Demand.sc	/^	*kr { arg dur = 1.0, reset = 0.0, level = 1.0, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Demand.sc	/^	*kr { arg level, dur, shape = 1, curve = 0, gate = 1.0, reset = 1.0,$/;"	m
*kr	SCClassLibrary/Common/Audio/Demand.sc	/^	*kr { arg trig, reset, demandUGens;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg envelope, gate = 1.0, levelScale = 1.0, levelBias = 0.0, timeScale = 1.0, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg gate = 1.0, attackTime = 0.01, susLevel = 1.0, releaseTime = 1.0, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg gate, id;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg in;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg src;$/;"	m
*kr	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*kr { arg trig, id;$/;"	m
*kr	SCClassLibrary/Common/Audio/FFT.sc	/^	*kr { | buffer, wintype = 0, winsize=0|$/;"	m
*kr	SCClassLibrary/Common/Audio/FFT2.sc	/^	*kr { arg in, kernel, trigger=0, framesize=2048, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FFT2.sc	/^	*kr { arg in, numsamp=40;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg freq=440.0, iphase = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg freq=440.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg freq=440.0, numharm = 200.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg freq=440.0, width = 0.5, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg specificationsArrayRef, freqscale = 1.0, freqoffset = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*kr { arg specificationsArrayRef, input, freqscale = 1.0, freqoffset = 0.0, decayscale = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^		*kr { arg input, threshold = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, a0 = 0.0, a1 = 0.0, a2 = 0.0, b1 = 0.0, b2 = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, a0 = 0.0, a1 = 0.0, b1 = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, amp = 0.0001, time = 0.1, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, attackTime = 0.01, decayTime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, coef = 0.5, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, coef = 0.9, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, coef = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, decayTime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, attacktime = 1.0, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, bwr = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, decaytime = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, radius = 0.8, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, rq = 1.0, db = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, freq = 440.0, rq = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, lagTime = 0.1, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, lagTimeU = 0.1, lagTimeD = 0.1, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, time = 0.1, curvature = 0, warp = 5, start, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg in = 0.0, up = 1.0, dn = 1.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Filter.sc	/^	*kr { arg length=3, in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*kr {arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, freq=440, ampscale= 0.5, durscale=0.5, initCPs= 12, knum, mul=1.0,add=0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*kr {arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, minfreq=20, maxfreq=1000, ampscale= 0.5, durscale=0.5, initCPs= 12, knum, a=1.17, c=0.31, mul=1.0,add=0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Gendyn.sc	/^			*kr {arg ampdist=1, durdist=1, adparam=1.0, ddparam=1.0, minfreq=20, maxfreq=1000, ampscale= 0.5, durscale=0.5, initCPs= 12, knum,mul=1.0,add=0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/IEnvGen.sc	/^	*kr { arg envelope, index, mul = 1, add = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { ^this.shouldNotImplement(thisMethod) }$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg bus = 0, numChannels = 1, lag = 0.1;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg bus = 0, numChannels = 1;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg bus, channelsArray;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg bus, xfade, channelsArray;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg channelsArray;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg numChannels = 1, default = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^	*kr { arg values;$/;"	m
*kr	SCClassLibrary/Common/Audio/InOut.sc	/^ 	*kr { arg values, lags;$/;"	m
*kr	SCClassLibrary/Common/Audio/InfoUGens.sc	/^	*kr { arg bufnum;$/;"	m
*kr	SCClassLibrary/Common/Audio/InfoUGens.sc	/^	*kr {$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg freq = 1000, root = 0, minAmp = 0.32, rootAmp = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg freq = 60.midicps, root = 60.midicps, exp = 0.3333;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg in = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg in=0.0, srclo = 0.0, srchi = 1.0, dstlo = 1.0, dsthi = 2.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg in=0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg start=0.0, end = 1.0, dur = 1.0, mul = 1.0, add = 0.0, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Line.sc	/^	*kr { arg start=1.0, end = 2.0, dur = 1.0, mul = 1.0, add = 0.0, doneAction = 0;$/;"	m
*kr	SCClassLibrary/Common/Audio/MacUGens.sc	/^	*kr {$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { arg busindex, numfeatures, windowsize=2.0, phaseaccuracy=0.02, lock=0, weightingscheme;$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { arg chain, lock=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { arg chain, numcoeff=13;$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { arg chain, smask=0.25, tmask=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { arg chain,keydecay=2.0,chromaleak= 0.5; \/\/transient=0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { | buffer |$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { | buffer, fraction = 0.5, interpolate = 0 |$/;"	m
*kr	SCClassLibrary/Common/Audio/MachineListening.sc	/^	*kr { |chain, threshold=0.5, odftype=\\rcomplex, relaxtime=1,$/;"	m
*kr	SCClassLibrary/Common/Audio/Mix.sc	/^	*kr { |array|$/;"	m
*kr	SCClassLibrary/Common/Audio/MoogFF.sc	/^	*kr { | in, freq=100, gain=2, reset=0, mul=1, add=0 |$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg chaosParam=1.5, dt = 0.04, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg chaosParam=1.5, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg chaosParam=3.0, freq = 1000.0, init=0.5, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg density = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg freq=500.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg id=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg in = 0.0, bits=3, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg in = 0.0, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg iseed, imul, iadd, imod, mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg lo = 0, hi = 127, trig = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg lo = 0.0, hi = 1.0, trig = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg lo = 0.01, hi = 1.0, trig = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg mul = 1.0, add = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg prob, in;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr { arg trig = 0.0, seed=56789;$/;"	m
*kr	SCClassLibrary/Common/Audio/Noise.sc	/^	*kr {$/;"	m
*kr	SCClassLibrary/Common/Audio/Osc.sc	/^	*kr { arg trig, array, weights, normalize=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Osc.sc	/^	*kr { arg trig, array;$/;"	m
*kr	SCClassLibrary/Common/Audio/Osc.sc	/^	*kr { arg which, array, focus=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Osc.sc	/^	*kr { arg which, array, wrap=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Osc.sc	/^	*kr {$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg in, azimuth=0, elevation=0, gain=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg in, azimuth=0, gain=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg in, pos = 0.0, level = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg in, xpos = 0.0, ypos = 0.0, level = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg inA, inB = 0.0, pan = 0.0, level = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg inA, inB, azimuth, gain=1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg left, right, pos = 0.0, level = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg numChans, in, pos = 0.0, level = 1.0, width = 2.0, orientation = 0.5;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg numChans, w, x, y, orientation = 0.5;$/;"	m
*kr	SCClassLibrary/Common/Audio/Pan.sc	/^	*kr { arg x, y, pos = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*kr { arg in=0.0, g=1, damp=0, friction=0.01;$/;"	m
*kr	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*kr { arg in=0.0, g=10, damp=0, friction=0.01;$/;"	m
*kr	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^	*kr { arg in=0.0, spring=1, damp=0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Poll.sc	/^	*kr { arg trig, in, label, trigid = -1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Splay.sc	/^	*kr { arg inArray, spread = 1, level = 1, center = 0.0, levelComp = true;$/;"	m
*kr	SCClassLibrary/Common/Audio/Splay.sc	/^	*kr { arg numChans = 4, inArray, spread = 1, level = 1, width = 2, center = 0.0,$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg a = 0.0, b = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, decay = 0.999;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, dur = 0.1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, id = 0, value = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, initFreq = 440.0, minFreq = 60.0, maxFreq = 4000.0,$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, lo = 0.0, hi = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0, trig = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg in=0.0, diff=0.01;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg sig, replyRate = 20.0, peakLag = 3, cmdName = '\/reply', replyID = -1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0, cmdName = '\/reply', values, replyID = -1;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0, div = 2.0, start = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0, rate = 1.0, start = 0.0, end = 1.0, resetPos = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0, rate = 1.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0, reset = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig = 0.0;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg trig=0, reset=0, min=0, max=7, step=1, resetval;$/;"	m
*kr	SCClassLibrary/Common/Audio/Trig.sc	/^	*kr { arg x = 0.0, y = 0.0, rect;$/;"	m
*kr	SCClassLibrary/Common/Audio/iphone/iPhoneUGens.sc	/^	*kr {$/;"	m
*kr	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*kr { arg  name, values, lags, fixedLag = false;$/;"	m
*kr	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	*kr { | bus, numChannels=1, offset = 0 |$/;"	m
*kr	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	*kr { | which, n |$/;"	m
*kr	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*kr { | key, numChannels, offset = 0 |$/;"	m
*kr	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^	*kr { arg carfreq,modfreq,pmindex=0.0,modphase=0.0,mul=1.0,add=0.0;$/;"	m
*kr	quarks/cruciallib/Instr/Instr.sc	/^	*kr { arg name, args;$/;"	m
*kr	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*kr { arg ... args;$/;"	m
*kr	quarks/cruciallib/Scheduling/Tempo.sc	/^	*kr { ^TempoPlayer(default).kr }$/;"	m
*kr	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*kr { arg inputs, bipolar,width=2.0;$/;"	m
*kr	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*kr { arg l, r, pan;$/;"	m
*kr	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*kr { arg lf, rf, lb, rb, xpan, ypan;$/;"	m
*kr	quarks/cxaudio/cxaudio.sc	/^	*kr {  arg min=0.0,max=1.0,tideFreq=0.01,waveFreq = 0.05, tideEffect=0.5;$/;"	m
*kr	quarks/cxaudio/cxaudio.sc	/^	*kr { arg input, maxBeats, beats,wobble,tempo;$/;"	m
*kr	quarks/cxaudio/cxaudio.sc	/^	*kr { arg input=0.0,drive=1;$/;"	m
*krFill	SCClassLibrary/Common/Audio/Mix.sc	/^	*krFill { |n, function|$/;"	m
*langPort	SCClassLibrary/Common/Control/NetAddr.sc	/^	*langPort {$/;"	m
*layout	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	*layout { arg f,bounds;$/;"	m
*leaves	quarks/cruciallib/Instr/Instr.sc	/^	*leaves { arg rateMethod; \/\/ ar kr new$/;"	m
*leaves	quarks/cruciallib/Instr/Instr.sc	/^	*leaves { arg startAt; \/\/ address array$/;"	m
*levelIndicator	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*levelIndicator { ^SCLevelIndicator }$/;"	m
*levelIndicator	SCClassLibrary/QtCollider/QtGUI.sc	/^  *levelIndicator { ^QLevelIndicator }$/;"	m
*light	SCClassLibrary/QtCollider/QPalette.sc	/^  *light {$/;"	m
*line	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*line { arg p1, p2;$/;"	m
*line	SCClassLibrary/QtCollider/QPen.sc	/^  *line { arg p1, p2;$/;"	m
*lineDash_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*lineDash_ { arg pattern; \/\/ should be a FloatArray$/;"	m
*lineDash_	SCClassLibrary/QtCollider/QPen.sc	/^  *lineDash_ { arg pattern;$/;"	m
*lineEnd	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*lineEnd { ^"  \\\\\\\\  \\n" }$/;"	m
*lineShorts	SCClassLibrary/Common/Streams/History.sc	/^	*lineShorts { ^current.lineShorts }$/;"	m
*lineTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*lineTo { arg point;$/;"	m
*lineTo	SCClassLibrary/QtCollider/QPen.sc	/^  *lineTo { arg point;$/;"	m
*linen	SCClassLibrary/Common/Audio/Env.sc	/^	*linen { arg attackTime=0.01, sustainTime=1.0, releaseTime=1.0, level=1.0, curve = \\lin;$/;"	m
*lines	SCClassLibrary/Common/Streams/History.sc	/^	*lines { ^current.lines }$/;"	m
*linrand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*linrand { arg size, minVal, maxVal;$/;"	m
*list	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*list {$/;"	m
*listAvailable	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*listAvailable {$/;"	m
*listCheckedOut	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*listCheckedOut {$/;"	m
*listDevices	SCClassLibrary/Common/Control/SerialPort.sc	/^	*listDevices {$/;"	m
*listForSpec	quarks/cruciallib/Instr/ControlPrototypes.sc	/^	*listForSpec { arg argName,spec;$/;"	m
*listInstalled	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*listInstalled { ^this.global.listInstalled }$/;"	m
*listItem	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*listItem { arg meth;$/;"	m
*listItem	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*listItem { |cl|$/;"	m
*listView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*listView { ^SCListView }$/;"	m
*listView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*listView { ^SCListView }$/;"	m
*listView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *listView { ^QListView }$/;"	m
*listener	SCClassLibrary/Common/GUI/Document.sc	/^	*listener {$/;"	m
*load	quarks/cruciallib/Instr/Instr.sc	/^	*load { arg name;$/;"	m
*load	quarks/cruciallib/Players/pathUtilities.sc	/^	*load { arg obj, warnIfNotFound=true;$/;"	m
*loadAll	quarks/cruciallib/Instr/Instr.sc	/^	*loadAll {$/;"	m
*loadCS	SCClassLibrary/Common/Streams/History.sc	/^	*loadCS { |path, forward=false| current.loadCS(path, forward) }$/;"	m
*loadCacheFromDir	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*loadCacheFromDir { arg server,dir;$/;"	m
*loadCollection	SCClassLibrary/Common/Control/Buffer.sc	/^	*loadCollection { arg server, collection, numChannels = 1, action;$/;"	m
*loadDefFileToBundle	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*loadDefFileToBundle { arg def,bundle,server;$/;"	m
*loadDialog	SCClassLibrary/Common/Control/Buffer.sc	/^	*loadDialog { arg server,startFrame = 0,numFrames, action, bufnum;$/;"	m
*loadStory	SCClassLibrary/Common/Streams/History.sc	/^	*loadStory { |path| current.loadStory(path) }$/;"	m
*local	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*local { ^this.global.local }$/;"	m
*localAddr	SCClassLibrary/Common/Control/NetAddr.sc	/^	*localAddr {$/;"	m
*localOff	SCClassLibrary/Common/Streams/History.sc	/^	*localOff { recordLocally = false }$/;"	m
*localOn	SCClassLibrary/Common/Streams/History.sc	/^	*localOn { recordLocally = true }$/;"	m
*localtime	SCClassLibrary/Common/Math/Date.sc	/^	*localtime { ^this.new.localtime }$/;"	m
*magenta	SCClassLibrary/Common/Core/Color.sc	/^	*magenta { arg val = 1.0, alpha = 1.0; ^Color.new(min(1,val), max(val-1,0), min(1,val), alpha) }$/;"	m
*make	SCClassLibrary/Common/Collections/Environment.sc	/^	*make { arg function;$/;"	m
*make	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*make { arg function;$/;"	m
*makeArgString	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *makeArgString {|m, par=true|$/;"	m
*makeAutoHelp	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*makeAutoHelp { |andocumentedClass, path| ^global.makeAutoHelp(andocumentedClass, path) }$/;"	m
*makeBusFromSpec	quarks/cruciallib/ServerTools/BusPool.sc	/^	*makeBusFromSpec { |busSpec,server,client,name|$/;"	m
*makeClassTemplate	SCClassLibrary/SCDoc/SCDoc.sc	/^    *makeClassTemplate {|doc|$/;"	m
*makeClock	quarks/cruciallib/Scheduling/Tempo.sc	/^	*makeClock { arg owner;$/;"	m
*makeDefName	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*makeDefName { arg instr, args, outClass=\\Out;$/;"	m
*makeDefaultSynthDef	SCClassLibrary/Common/Collections/Event.sc	/^	*makeDefaultSynthDef {$/;"	m
*makeFadeEnv	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*makeFadeEnv { arg fadeTime = (0.02);$/;"	m
*makeGUI	SCClassLibrary/Common/GUI/GUI.sc	/^	*makeGUI { arg key, args, properties;$/;"	m
*makeHelp	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*makeHelp { |undocumentedObject, path| ^global.makeHelp(undocumentedObject, path) }$/;"	m
*makeLogFolder	SCClassLibrary/Common/Streams/History.sc	/^	*makeLogFolder {$/;"	m
*makeParentEvents	SCClassLibrary/Common/Collections/Event.sc	/^	*makeParentEvents {$/;"	m
*makeSaveFolder	SCClassLibrary/Common/Control/GeneralHIDSpec.sc	/^	*makeSaveFolder {$/;"	m
*makeWin	SCClassLibrary/Common/Streams/History.sc	/^	*makeWin { |where, textHeight=12| ^current.makeWin(where, textHeight) }$/;"	m
*maskToString	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*maskToString { arg m;$/;"	m
*match	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*match { |key| ^global.match(key) }$/;"	m
*math	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*math { arg str, flag=true;$/;"	m
*matrix	SCClassLibrary/QtCollider/QPen.sc	/^  *matrix { _QPen_Transform }$/;"	m
*matrix_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*matrix_ { arg array;$/;"	m
*matrix_	SCClassLibrary/QtCollider/QPen.sc	/^  *matrix_ { arg matrixArray;$/;"	m
*mdExtension	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*mdExtension { ^"" }		\/\/ nothing is written anyway$/;"	m
*mdExtension	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*mdExtension { ^"txarcmeta" }$/;"	m
*menuItem	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*menuItem { ^CocoaMenuItem }$/;"	m
*menuItem	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*menuItem { ^CocoaMenuItem }$/;"	m
*meshgrid	quarks/MathLib/classes/various/extSequenceableCollection.sc	/^	*meshgrid {|arrays|$/;"	m
*meta	SCClassLibrary/QtCollider/QObject.sc	/^  *meta { ^QMetaObject(this.qtClass) }$/;"	m
*meterServer	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  *meterServer { arg server;$/;"	m
*methodArgs	SCClassLibrary/SCDoc/Help.sc	/^    *methodArgs {|string|$/;"	m
*methodSelectorForRate	SCClassLibrary/Common/Audio/UGen.sc	/^	*methodSelectorForRate { arg rate;$/;"	m
*mkdir	SCClassLibrary/Common/Files/File.sc	/^	*mkdir { arg pathName;$/;"	m
*monospace	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*monospace {|size|$/;"	m
*monospace	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*monospace {|size|$/;"	m
*monospace	SCClassLibrary/QtCollider/QFont.sc	/^  *monospace {|size, bold = false, italic = false, usePointSize = false|$/;"	m
*mouseButton	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*mouseButton { ^MouseButton }$/;"	m
*mouseButton	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*mouseButton { ^MouseButton }$/;"	m
*mouseDeviceSpec	SCClassLibrary/Platform/linux/LID.sc	/^	*mouseDeviceSpec {$/;"	m
*mouseX	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*mouseX { ^MouseX }$/;"	m
*mouseX	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*mouseX { ^MouseX }$/;"	m
*mouseY	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*mouseY { ^MouseY }$/;"	m
*mouseY	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*mouseY { ^MouseY }$/;"	m
*moveTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*moveTo { arg point;$/;"	m
*moveTo	SCClassLibrary/QtCollider/QPen.sc	/^  *moveTo { arg point;$/;"	m
*movieView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*movieView { ^SCMovieView }$/;"	m
*movieView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*movieView { ^SCMovieView }$/;"	m
*movieView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *movieView { ^this.notImplemented( "MovieView"); }$/;"	m
*mtime	SCClassLibrary/Common/Files/File.sc	/^	*mtime { arg pathName;$/;"	m
*mul	quarks/MathLib/classes/various/Matrix.sc	/^	*mul { arg m1=0, m2=0;$/;"	m
*multiNew	SCClassLibrary/Common/Audio/UGen.sc	/^ 	*multiNew { arg ... args;$/;"	m
*multiNewList	SCClassLibrary/Common/Audio/UGen.sc	/^	*multiNewList { arg args;$/;"	m
*multiSliderView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*multiSliderView { ^SCMultiSliderView }$/;"	m
*multiSliderView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*multiSliderView { ^SCMultiSliderView }$/;"	m
*multiSliderView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *multiSliderView { ^QMultiSliderView }$/;"	m
*names	SCClassLibrary/Common/Audio/InOut.sc	/^	*names { arg names;$/;"	m
*names	SCClassLibrary/Common/Collections/Scale.sc	/^	*names {$/;"	m
*network	SCClassLibrary/Common/Streams/History.sc	/^	*network { }$/;"	m
*new	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new { arg in, mul = 1.0, add = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new { arg in0, in1, in2, in3;$/;"	m
*new	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new { arg in0, in1, in2;$/;"	m
*new	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new { arg selector, a, b;$/;"	m
*new	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new { arg selector, a;$/;"	m
*new	SCClassLibrary/Common/Audio/BufIO.sc	/^	*new { arg buf, values, offset = 0;$/;"	m
*new	SCClassLibrary/Common/Audio/BufIO.sc	/^	*new { arg buf;$/;"	m
*new	SCClassLibrary/Common/Audio/BufIO.sc	/^	*new { arg numFrames = 1, numChannels = 1;$/;"	m
*new	SCClassLibrary/Common/Audio/BufIO.sc	/^	*new {$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg bufnum = 0, phase = 0.0, loop = 1.0;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg in, label, run = 1, trigid = -1;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg in, reset = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg in;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg input = 0.0, bufnum = 0, phase = 0.0, loop = 1.0;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg list, index;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg list, repeats = 1;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg list, weights, repeats = 1;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg lo = 0.0, hi = 1.0, length = inf;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg lo = 0.0, hi = 1.0, step = 0.01, length = inf;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg n, in;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg source;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg start = 1, grow = 2, length = inf;$/;"	m
*new	SCClassLibrary/Common/Audio/Demand.sc	/^	*new { arg start = 1, step = 1, length = inf;$/;"	m
*new	SCClassLibrary/Common/Audio/Env.sc	/^	*new { arg levels = #[0,1,0], times = #[1,1], curve = \\lin, releaseNode, loopNode, offset = 0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, bins = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, decay = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, feedback = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, freeze = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, levels = 4.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, numTeeth = 0.0, phase = 0.0, width = 0.5;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, scale;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, shift, integrate=0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, stretch = 1.0, shift = 0.0, interp = 0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, stretch = 1.0, shift = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, threshold = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, trig = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, wipe = 0.0, trig = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, wipe = 0.0, width = 0.2, trig = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer, wipe = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg buffer;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg bufferA, bufferB, numTeeth = 0.0, phase = 0.0, width = 0.5;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg bufferA, bufferB, wipe = 0.0, trig = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg bufferA, bufferB, wipe = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg bufferA, bufferB, zeroed = 0.0001;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { arg bufferA, bufferB;$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { | buffer, hop = 0.5, polar = 0.0|$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { | buffer, in = 0.0 , hop = 0.5, wintype = 0 , active = 1, winsize=0|$/;"	m
*new	SCClassLibrary/Common/Audio/FFT.sc	/^	*new { | buffer, wintype = 0, winsize=0|$/;"	m
*new	SCClassLibrary/Common/Audio/FFT2.sc	/^	*new { arg buffer, areal = 0.0, aimag = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	*new { | chain, bufsize, binindex, whichmeasure=0 |$/;"	m
*new	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	*new { | chain, bufsize, frombin=0, tobin |$/;"	m
*new	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	*new { | chain, bufsize, magsphases, frombin=0, tobin, zeroothers=0 |$/;"	m
*new	SCClassLibrary/Common/Audio/InOut.sc	/^	*new { arg name, index, rate, defaultValue, argNum, lag;$/;"	m
*new	SCClassLibrary/Common/Audio/InterplEnv.sc	/^	*new { arg ... xyc;$/;"	m
*new	SCClassLibrary/Common/Audio/InterplEnv.sc	/^	*new { arg levels=#[0,1,0], times=#[1,1], curve='lin', offset = 0.0;$/;"	m
*new	SCClassLibrary/Common/Audio/InterplEnv.sc	/^	*new { arg pairs, curve;$/;"	m
*new	SCClassLibrary/Common/Audio/InterplEnv.sc	/^	*new { arg pairs;$/;"	m
*new	SCClassLibrary/Common/Audio/Mix.sc	/^	*new { arg array;$/;"	m
*new	SCClassLibrary/Common/Audio/Noise.sc	/^	*new { arg lo = 0, hi = 127;$/;"	m
*new	SCClassLibrary/Common/Audio/Noise.sc	/^	*new { arg lo = 0.0, hi = 1.0, minmax = 0;$/;"	m
*new	SCClassLibrary/Common/Audio/Noise.sc	/^	*new { arg lo = 0.0, hi = 1.0, n = 0;$/;"	m
*new	SCClassLibrary/Common/Audio/Noise.sc	/^	*new { arg lo = 0.0, hi = 1.0;$/;"	m
*new	SCClassLibrary/Common/Audio/Noise.sc	/^	*new { arg lo = 0.01, hi = 1.0;$/;"	m
*new	SCClassLibrary/Common/Audio/Osc.sc	/^	*new { arg which, array, focus=1;$/;"	m
*new	SCClassLibrary/Common/Audio/Poll.sc	/^	*new { arg trig, in, label, trigid = -1;$/;"	m
*new	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*new { arg name, ugenGraphFunc, rates, prependArgs, variants, metadata;$/;"	m
*new	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	*new { arg name, ugenGraphFunc, rates, prependArgs, variants, metadata;$/;"	m
*new	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*new { arg name, servers;$/;"	m
*new	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*new { arg rate, numberOfChannels, startingChannel="?", type;$/;"	m
*new	SCClassLibrary/Common/Audio/UGen.sc	/^	*new { arg rate, itsSourceUGen, index;$/;"	m
*new	SCClassLibrary/Common/Collections/Array2D.sc	/^	*new { arg rows=1, cols=1;$/;"	m
*new	SCClassLibrary/Common/Collections/Association.sc	/^	*new { arg key, value;$/;"	m
*new	SCClassLibrary/Common/Collections/Bag.sc	/^	*new { arg n=4;$/;"	m
*new	SCClassLibrary/Common/Collections/Dictionary.sc	/^	*new { arg n=8, proto, parent, know=false;$/;"	m
*new	SCClassLibrary/Common/Collections/Dictionary.sc	/^	*new { arg n=8; ^super.new(n*2) }$/;"	m
*new	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*new { arg envir;$/;"	m
*new	SCClassLibrary/Common/Collections/Event.sc	/^	*new { arg n=8, proto, parent, know=true;$/;"	m
*new	SCClassLibrary/Common/Collections/Harmonics.sc	/^	*new { arg size = 32;$/;"	m
*new	SCClassLibrary/Common/Collections/Interval.sc	/^	*new { arg start, end, step=1;$/;"	m
*new	SCClassLibrary/Common/Collections/Interval.sc	/^	*new { arg start, size;$/;"	m
*new	SCClassLibrary/Common/Collections/Library.sc	/^	*new {$/;"	m
*new	SCClassLibrary/Common/Collections/LinkedList.sc	/^	*new { arg item;$/;"	m
*new	SCClassLibrary/Common/Collections/List.sc	/^	*new { arg size = 8; ^super.new.setCollection(Array.new(size)); }$/;"	m
*new	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*new {$/;"	m
*new	SCClassLibrary/Common/Collections/Pair.sc	/^	*new { arg linkDown, linkAcross;$/;"	m
*new	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	*new { | size, collectionClass(Array) |$/;"	m
*new	SCClassLibrary/Common/Collections/Scale.sc	/^	*new { | degrees, pitchesPerOctave, descDegrees, tuning, name = "Unknown Scale" |$/;"	m
*new	SCClassLibrary/Common/Collections/Scale.sc	/^	*new { | degrees, pitchesPerOctave, tuning, name = "Unknown Scale" |$/;"	m
*new	SCClassLibrary/Common/Collections/Scale.sc	/^	*new { | scale, startDegree = 0 | ^super.newCopyArgs(scale, startDegree) }$/;"	m
*new	SCClassLibrary/Common/Collections/Scale.sc	/^	*new { | tuning, octaveRatio = 2.0, name = "Unknown Tuning" |$/;"	m
*new	SCClassLibrary/Common/Collections/Set.sc	/^	*new { arg n=2; ^super.new.initSet(max(n,2)*2) }$/;"	m
*new	SCClassLibrary/Common/Collections/SortedList.sc	/^	*new { arg size = 8, function;$/;"	m
*new	SCClassLibrary/Common/Collections/SparseArray.sc	/^	*new { arg size = 8;$/;"	m
*new	SCClassLibrary/Common/Control/Buffer.sc	/^	*new { arg server, numFrames, numChannels, bufnum;$/;"	m
*new	SCClassLibrary/Common/Control/Bus.sc	/^	*new { arg rate=\\audio,index=0,numChannels=2,server;$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { arg address, size;$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { arg lo, hi;$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { arg size, pos=0;$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { arg user=0, initTemp = 1000;$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { |size, pos = 0|$/;"	m
*new	SCClassLibrary/Common/Control/Engine.sc	/^	*new { |start, size| ^super.newCopyArgs(start, size) }$/;"	m
*new	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*new { arg key; ^scheme.perform( key )}$/;"	m
*new	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*new { |newDevice|$/;"	m
*new	SCClassLibrary/Common/Control/GeneralHIDSpec.sc	/^	*new { |dev|$/;"	m
*new	SCClassLibrary/Common/Control/GraphBuilder.sc	/^		*new { arg i_level=1, gate, fadeTime, doneAction=2, curve='sin';$/;"	m
*new	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*new { arg name, values, rate, lags, fixedLag = false;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*new { arg port, uid;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*new { arg status, port, chan, b, c, thread;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*new { arg function, src, chan, num, value, install=true,swallowEvent=false;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*new { arg function, src, chan, num, veloc, install=true,swallowEvent=false;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*new { arg function, src, chan, value, install=true,swallowEvent=false;$/;"	m
*new	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*new { arg function, src, chan, value, install=true;$/;"	m
*new	SCClassLibrary/Common/Control/Module.sc	/^	*new { arg server, name, id;$/;"	m
*new	SCClassLibrary/Common/Control/NetAddr.sc	/^	*new { arg hostname, port=0;$/;"	m
*new	SCClassLibrary/Common/Control/Node.sc	/^	*new { arg defName, args, target, addAction=\\addToHead;$/;"	m
*new	SCClassLibrary/Common/Control/Node.sc	/^	*new { arg server;$/;"	m
*new	SCClassLibrary/Common/Control/Node.sc	/^	*new { arg target, addAction=\\addToHead;$/;"	m
*new	SCClassLibrary/Common/Control/NodeControl.sc	/^	*new { arg node,index;$/;"	m
*new	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*new { arg server;$/;"	m
*new	SCClassLibrary/Common/Control/OSC.sc	/^	*new { arg name, function, children, value;$/;"	m
*new	SCClassLibrary/Common/Control/OSC.sc	/^	*new { arg portID, hostname, oscNode;$/;"	m
*new	SCClassLibrary/Common/Control/OSC.sc	/^	*new { arg portID, oscNode;$/;"	m
*new	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	*new {  arg addr, cmdName, action, pathSize;$/;"	m
*new	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	*new { arg addr, cmdPath, action;$/;"	m
*new	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*new { arg addr, cmdName, action;$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new { ^super.new.init; }$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new { arg func, msgNum, chan, msgType, srcID, argTemplate, dispatcher;$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new { arg func, path, srcID, recvPort, argTemplate, dispatcher;$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new { arg key, func, msgNum, chan, msgType, srcID, argTemplate, dispatcher;$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new { arg key, func, path, srcID, recvPort, argTemplate, dispatcher;$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|addr, func| ^super.new.init(addr, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|addr, recvPort, func| ^super.new.init(addr, recvPort, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|chan, func| ^super.new.init(chan, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|chan, srcID, func| ^super.new.init(chan, srcID, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|chanArray, func|$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|chanArray, srcID, func|$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|messageType| ^super.new.messageType_(messageType) }$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|recvPort, func| ^super.new.init(recvPort, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*new {|srcID, func| ^super.new.init(srcID, func);}$/;"	m
*new	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	*new { arg index=0, numChannels=1, server;$/;"	m
*new	SCClassLibrary/Common/Control/Score.sc	/^	*new { arg list;$/;"	m
*new	SCClassLibrary/Common/Control/SerialPort.sc	/^	*new {$/;"	m
*new	SCClassLibrary/Common/Control/Server.sc	/^	*new { arg name, addr, options, clientID=0;$/;"	m
*new	SCClassLibrary/Common/Control/Server.sc	/^	*new {|port|$/;"	m
*new	SCClassLibrary/Common/Control/SkipJack.sc	/^	*new { arg name = "anon", updateFunc, dt=0.2, stopTest = false;$/;"	m
*new	SCClassLibrary/Common/Control/SkipJack.sc	/^	*new { arg updateFunc, dt = 0.2, stopTest = false, name = "anon", clock, autostart=true;$/;"	m
*new	SCClassLibrary/Common/Control/Volume.sc	/^	*new { arg server, startBus = 0, numChans, min = -90, max = 6, persist = false;$/;"	m
*new	SCClassLibrary/Common/Control/WII.sc	/^	*new { |id|$/;"	m
*new	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	*new { ^super.new("record").initScoreStreamPlayer }$/;"	m
*new	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*new { arg key; ^scheme.perform( key )}$/;"	m
*new	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	*new { arg functions;$/;"	m
*new	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	*new { arg selector, a, arglist;$/;"	m
*new	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	*new { arg selector, a, b, adverb;$/;"	m
*new	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	*new { arg selector, a;$/;"	m
*new	SCClassLibrary/Common/Core/Boolean.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Char.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Clock.sc	/^	*new { arg clock, drift = false, recursive=true;$/;"	m
*new	SCClassLibrary/Common/Core/Clock.sc	/^	*new { arg tempo, beats, seconds, queueSize=256;$/;"	m
*new	SCClassLibrary/Common/Core/Color.sc	/^	*new { arg red=0.0, green=0.0, blue=0.0, alpha=1.0;$/;"	m
*new	SCClassLibrary/Common/Core/Condition.sc	/^	*new { arg inVal = \\unbound;$/;"	m
*new	SCClassLibrary/Common/Core/Condition.sc	/^	*new { arg test=false;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver, method, alternateMethod, class;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver, method, class;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver, method, result;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver, selector, args;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver, value;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg receiver;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg what, receiver;$/;"	m
*new	SCClassLibrary/Common/Core/Error.sc	/^	*new { arg what;$/;"	m
*new	SCClassLibrary/Common/Core/Function.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Function.sc	/^	*new { arg function;$/;"	m
*new	SCClassLibrary/Common/Core/Kernel.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Message.sc	/^	*new { arg receiver, selector, args;$/;"	m
*new	SCClassLibrary/Common/Core/Message.sc	/^	*new { arg selector;$/;"	m
*new	SCClassLibrary/Common/Core/Nil.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Object.sc	/^	*new { arg maxSize = 0;$/;"	m
*new	SCClassLibrary/Common/Core/Ref.sc	/^	*new { arg thing; ^super.new.value_(thing) }$/;"	m
*new	SCClassLibrary/Common/Core/Semaphore.sc	/^	*new { | count=1 |$/;"	m
*new	SCClassLibrary/Common/Core/Symbol.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Core/Thread.sc	/^	*new { arg func, stackSize = (512);$/;"	m
*new	SCClassLibrary/Common/Files/Directory.sc	/^	*new { arg pathName;$/;"	m
*new	SCClassLibrary/Common/Files/File.sc	/^	*new { arg commandLine, mode;$/;"	m
*new	SCClassLibrary/Common/Files/File.sc	/^	*new { arg pathName, mode;$/;"	m
*new	SCClassLibrary/Common/Files/PathName.sc	/^	*new { arg path = "";$/;"	m
*new	SCClassLibrary/Common/Files/SoundFile.sc	/^	*new { arg pathName;$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	*new { arg parent, bounds, label, controlSpec, action, initVal,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^	*new { arg parent, bounds, label, controlSpec, action, initVal,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	*new { arg parent, bounds, label, controlSpec, action, initVal,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	*new { |w, bounds, maxItems, numItems, action, initVal=0|$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	*new { arg parent, bounds, label, controlSpec, action, initVal,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZSpecEditor.sc	/^	*new { arg parent, bounds, label = "Mn\/Mx\/Wp\/Stp", controlSpec, labelWidth=100, labelHeight=20, layout=\\horz, gap, margin;$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZText.sc	/^	*new { arg parent, bounds, label, action, initVal,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	*new { arg parentView, bounds, label,items, globalAction, initVal=0,$/;"	m
*new	SCClassLibrary/Common/GUI/Base/Gradient.sc	/^	*new { arg color1, color2, direction=\\h, steps=64;$/;"	m
*new	SCClassLibrary/Common/GUI/Base/Gradient.sc	/^	*new { arg color1, color2, direction=\\v, steps=64, frac = 0.33;$/;"	m
*new	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*new { arg minval=0.0, maxval=1.0, warp='lin', step=0.0, default, units, grid;$/;"	m
*new	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*new { arg spec, curve = -2;$/;"	m
*new	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*new { arg spec;$/;"	m
*new	SCClassLibrary/Common/GUI/Document.sc	/^	*new { | title="Untitled", string="", makeListener=false, envir |$/;"	m
*new	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	*new { arg bounds, margin, gap;$/;"	m
*new	SCClassLibrary/Common/GUI/GUI.sc	/^	*new { arg key; ^scheme.perform( key )}$/;"	m
*new	SCClassLibrary/Common/GUI/Grid.sc	/^	*new { arg grid;$/;"	m
*new	SCClassLibrary/Common/GUI/Grid.sc	/^	*new { arg spec;$/;"	m
*new	SCClassLibrary/Common/GUI/Grid.sc	/^	*new { |bounds,horzGrid,vertGrid|$/;"	m
*new	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*new { arg aHomeUrl, newWin;$/;"	m
*new	SCClassLibrary/Common/GUI/Inspector.sc	/^	*new { arg inspector, index, vpos;$/;"	m
*new	SCClassLibrary/Common/GUI/Inspector.sc	/^	*new { arg object;$/;"	m
*new	SCClassLibrary/Common/GUI/Model.sc	/^	*new { arg model;$/;"	m
*new	SCClassLibrary/Common/GUI/Model.sc	/^	*new { arg o,m,l;$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*new { arg width=522, height=300, busNum=0, scopeColor, bgColor;$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Control/WiiMoteGUI.sc	/^	*new { |wiimote, w|$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	*new { arg class;$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	*new { |history, where, numTextLines=12|$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	*new { |name, bounds, parent|$/;"	m
*new	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	*new { |plotter|$/;"	m
*new	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	*new { arg bounds, margin, gap;$/;"	m
*new	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	*new { arg parent, bounds,margin,gap,windowTitle="";$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new {  arg server, numChannels = 2, index = 0, bufsize = 4096, zoom = 1, rate = \\audio, view, bufnum;$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new { arg ...args;$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new { arg name = "panel", bounds, resizable = true, border = true, server, scroll = false;$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new { arg name, size, bold = false, italic = false, isPointSize = false;$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*new { arg width=512, height=300, busNum=0, scopeColor, bgColor;$/;"	m
*new	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	*new { arg model;$/;"	m
*new	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	*new { arg title,bounds,margin,background,scroll=true,front=true;$/;"	m
*new	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*new { arg name = "panel", bounds, resizable = true, border = true, server, scroll = false;$/;"	m
*new	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*new { arg name, size;$/;"	m
*new	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	*new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*new { arg name = "panel", bounds, resizable = false, border = true, server, scroll = false;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*new { arg name = "panel", bounds, resizable = true, border = true, server, scroll = false;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*new { arg window, bounds, resizable = false, border = true, server, scroll = false;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*new { arg name, size;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	*new { arg parent, bounds, env, pointsPerSegment=10;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*new { arg multiple, height=nil;$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*new {|filterName, args|$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*new {|shader, values, bounds|$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { ^super.new.init }$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { |class, rect|$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { |classes, rects|$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { |p,r| r !? { p = round(p,r) };$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { |window, bounds| ^super.new.init(window, bounds) }$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	*new { |window,rect,parent|$/;"	m
*new	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	*new { arg server, numChannels = 2, index, bufsize = 4096, zoom, rate, view, bufnum;$/;"	m
*new	SCClassLibrary/Common/Geometry/Point.sc	/^	*new { arg n;$/;"	m
*new	SCClassLibrary/Common/Geometry/Point.sc	/^	*new { arg x=0, y=0;$/;"	m
*new	SCClassLibrary/Common/Geometry/Rect.sc	/^	*new { arg left=0, top=0, width=0, height=0;$/;"	m
*new	SCClassLibrary/Common/Geometry/Size.sc	/^	*new { arg width=0, height=0;$/;"	m
*new	SCClassLibrary/Common/Math/Complex.sc	/^	*new { arg real, imag;$/;"	m
*new	SCClassLibrary/Common/Math/Date.sc	/^	*new { arg year, month, day, hour, minute, second, dayOfWeek, rawSeconds, bootSeconds;$/;"	m
*new	SCClassLibrary/Common/Math/Polar.sc	/^	*new { arg rho, theta;$/;"	m
*new	SCClassLibrary/Common/Math/Signal.sc	/^	*new {$/;"	m
*new	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	*new { ^this.shouldNotImplement(thisMethod) }$/;"	m
*new	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	*new { | path, parent |$/;"	m
*new	SCClassLibrary/Common/Quarks/Quark.sc	/^	*new { | blob, parent |$/;"	m
*new	SCClassLibrary/Common/Quarks/Quark.sc	/^	*new { | name, version, repos |$/;"	m
*new	SCClassLibrary/Common/Quarks/Quark.sc	/^	*new { |parent, extent, quark, isInstalled|$/;"	m
*new	SCClassLibrary/Common/Quarks/Quark.sc	/^	*new { |parent, quark, isInstalled|$/;"	m
*new	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	*new { | url, local |$/;"	m
*new	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*new { | reposPath, localPath |$/;"	m
*new	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*new { |quarksCtrl| ^super.new.init(quarksCtrl) }$/;"	m
*new	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	*new { arg operator, a, arglist;$/;"	m
*new	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	*new { arg operator, a, b;$/;"	m
*new	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	*new { arg operator, a;$/;"	m
*new	SCClassLibrary/Common/Streams/ControlPatterns.sc	/^	*new { arg element, locID=0, repeats=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	*new { ^super.new.clear }$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg count, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg dur, pattern, tolerance = 0.001;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg func, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg lag, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg n, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg name, value, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern ... pairs;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, aroh, avaroh, stepsPerOctave=12;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, connected = true;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, key, printStream, prefix = "";$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, quant, maxdur, tolerance = 0.001;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, repeats=inf,  key	;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern, repeats=inf, key;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern,lo,hi;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg playerPattern, subPattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg proportion, pattern=1;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg sum, pattern, tolerance=0.001;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { arg value, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	*new { |func, pattern, cleanupFunc|$/;"	m
*new	SCClassLibrary/Common/Streams/FuncStreamAsRoutine.sc	/^	*new { arg nextFunc, resetFunc;$/;"	m
*new	SCClassLibrary/Common/Streams/History.sc	/^	*new { |lines|$/;"	m
*new	SCClassLibrary/Common/Streams/IOStream.sc	/^	*new { arg collection;$/;"	m
*new	SCClassLibrary/Common/Streams/IOStream.sc	/^	*new { arg out;$/;"	m
*new	SCClassLibrary/Common/Streams/IOStream.sc	/^	*new { arg pretty;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, repeats=1, offset=0;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, repeats=1;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, startState=0, repeats=1;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, stepPattern, directionPattern = 1, startPos = 0;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, weights, repeats=1;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg list, which=0;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	*new { arg listPat, indexPat, repeats=1;$/;"	m
*new	SCClassLibrary/Common/Streams/ListPatterns.sc	/^    *new { arg list, repeats = 1, len = 3, step = 1, start = 0, wrapAtEnd = true;$/;"	m
*new	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	*new { |patterns, event, quant|$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg ... pairs;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg ... patterns;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg distribution, lo=0.0, hi=1.0, length=inf, tableSize;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg func, repeats = 1;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg function, patterns;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg lo=0.0, hi=1.0, length=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg lo=0.0, hi=1.0, step=0.125, length=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg name ... pairs;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg nextFunc, resetFunc;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg operator, a, arglist;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg operator, a, b, adverb;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg operator, a;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg pattern, event;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg pattern, func;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg pattern, scale, stepsPerOctave=12;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg pattern1, pattern2, pattern3;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg pattern1, pattern2;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg repeats=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg routineFunc;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg start = 0, grow = 1, length=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { arg start = 0, step = 1, length=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { |condition, iftrue, iffalse, default|$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { |key|$/;"	m
*new	SCClassLibrary/Common/Streams/Patterns.sc	/^	*new { |routineFunc|$/;"	m
*new	SCClassLibrary/Common/Streams/Pfx.sc	/^	*new { arg pattern, dur=2.0, fadeTime=0.02, numChannels=2, rate=\\audio;$/;"	m
*new	SCClassLibrary/Common/Streams/Pfx.sc	/^	*new { arg pattern, fxname ... pairs;$/;"	m
*new	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^	*new { arg key, device, repeats=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^	*new { arg slot, type, device, repeats=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Plambda.sc	/^	*new { arg key, default, repeats = 1;$/;"	m
*new	SCClassLibrary/Common/Streams/Plambda.sc	/^	*new { arg key, pattern, return;$/;"	m
*new	SCClassLibrary/Common/Streams/Plambda.sc	/^	*new { arg pattern, scope;$/;"	m
*new	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	*new { |pattern|$/;"	m
*new	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	*new { arg envir, pattern, independent=true;$/;"	m
*new	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	*new { arg func, event, repeats=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	*new { arg func; ^super.new(func).makeGenFunc }$/;"	m
*new	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	*new { arg func;$/;"	m
*new	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	*new { arg pattern, func, repeats;$/;"	m
*new	SCClassLibrary/Common/Streams/Pproto.sc	/^	*new { | makeFunction, pattern, cleanupFunc|$/;"	m
*new	SCClassLibrary/Common/Streams/Prewrite.sc	/^	*new { arg pattern, dict, levels=1;$/;"	m
*new	SCClassLibrary/Common/Streams/Pseed.sc	/^	*new { arg randSeed, pattern;$/;"	m
*new	SCClassLibrary/Common/Streams/Pspawner.sc	/^	*new { | func, stackSize=64 |$/;"	m
*new	SCClassLibrary/Common/Streams/Pspawner.sc	/^	*new { |pattern, spawnProtoEvent|$/;"	m
*new	SCClassLibrary/Common/Streams/Quant.sc	/^	*new { |quant = 0, phase, timingOffset| ^super.newCopyArgs(quant, phase, timingOffset) }$/;"	m
*new	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^	*new { arg lo=0.0001, hi=1.0, length=inf;$/;"	m
*new	SCClassLibrary/Common/Streams/Rest.sc	/^	*new { |dur(1)|$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg argStream, clock;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg func, clock;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg pattern, connected = true;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg stream, cleanup;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg stream, event;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg stream;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { arg value;$/;"	m
*new	SCClassLibrary/Common/Streams/Stream.sc	/^	*new { |nextFunc, resetFunc|$/;"	m
*new	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	*new { | pathOrFile, skipEmptyLines=false, skipBlanks=false,  delimiter |$/;"	m
*new	SCClassLibrary/Common/Streams/TimePatterns.sc	/^	*new { arg levels, durs = 1, curves = \\lin,  repeats = 1 ;$/;"	m
*new	SCClassLibrary/Common/Streams/TimePatterns.sc	/^	*new { arg levels, durs = 1, repeats = 1;$/;"	m
*new	SCClassLibrary/DefaultLibrary/Main.sc	/^	*new { arg ownerClass, selector, activePath, overriddenPath;$/;"	m
*new	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	*new { |object, numItems = 8, parent, bounds, makeSkip = true, options = #[]|$/;"	m
*new	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	*new { |object, numItems = (0), parent, bounds, makeSkip = true, options = #[]|$/;"	m
*new	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	*new { |object, parent, bounds, makeSkip=true, options = #[]|$/;"	m
*new	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	*new { |object, numItems = (4), parent, bounds, makeSkip=true, options|$/;"	m
*new	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	*new { arg proxy, nSliders=16, parent,$/;"	m
*new	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	*new { arg proxymixer, bounds;$/;"	m
*new	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	*new { |obj, numItems = 16, parent, bounds, makeSkip = true, options|$/;"	m
*new	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	*new { arg proxyspace, nProxies = 16, title, where;$/;"	m
*new	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	*new { |server, nProxies = 16, title, bounds|$/;"	m
*new	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^	*new { |proxy, w, bounds, showLevel=false, showPlayN=true, showName=true, showPauseSend = true,$/;"	m
*new	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*new { |numItems = 16, parent, bounds, makeSkip = true, options = #[]|$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	*new { arg key, val;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	*new { arg receiver, args;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*new { arg ... pairs;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*new { arg dict, which, repeats=inf, default;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*new { arg key, item;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*new { arg source;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	*new { arg pattern, dict, quant, dur, tolerance = 0.001;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	*new { arg pattern, dict;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	*new { arg pattern, fadeTime=1.0, holdTime=0.0, tolerance=0.0001;$/;"	m
*new	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	*new { arg pattern, quant, clock;$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	*new { | server |$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	*new {$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	*new { arg key, value, busNumChannels;$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*new { | key, object |$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	*new { | server, rate, numChannels, inputs |$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	*new { | source, channelOffset = 0 |$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	*new { arg server, name, clock;$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/ProxySynthDef.sc	/^	*new { arg name, func, rates, prependArgs, makeFadeEnv=true, channelOffset=0,$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/TempoBusClock.sc	/^	*new { arg control, tempo, beats, seconds;$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	*new { arg operator, a, b;$/;"	m
*new	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	*new { arg operator, a;$/;"	m
*new	SCClassLibrary/Platform/linux/LID.sc	/^	*new { | device, evtType, evtCode |$/;"	m
*new	SCClassLibrary/Platform/linux/LID.sc	/^	*new { | path |$/;"	m
*new	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*new { arg start, size, doc;$/;"	m
*new	SCClassLibrary/Platform/osx/MXHID.sc	/^	*new { | device, evtType, evtCode, evtCookie |$/;"	m
*new	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*new { arg title="Untitled", string="", makeListener=false;$/;"	m
*new	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*new { ^nil }$/;"	m
*new	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*new { arg parent, index;$/;"	m
*new	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	*new { |parent, name = "", index|$/;"	m
*new	SCClassLibrary/QtCollider/BasicViews.sc	/^  *new { arg aParent, aBounds;$/;"	m
*new	SCClassLibrary/QtCollider/BasicViews.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QDialog.sc	/^  *new { arg okFunc, cancelFunc, fileMode, acceptMode, stripResult = false;$/;"	m
*new	SCClassLibrary/QtCollider/QFont.sc	/^  *new { arg name, size, bold = false, italic = false, usePointSize = false;$/;"	m
*new	SCClassLibrary/QtCollider/QKnob.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QLayout.sc	/^  *new { arg ...items;$/;"	m
*new	SCClassLibrary/QtCollider/QLayout.sc	/^  *new { arg ...views; ^super.new([views]) }$/;"	m
*new	SCClassLibrary/QtCollider/QLayout.sc	/^  *new {$/;"	m
*new	SCClassLibrary/QtCollider/QListView.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QNumberBox.sc	/^  *new { arg aParent, aBounds;$/;"	m
*new	SCClassLibrary/QtCollider/QObject.sc	/^  *new { arg argumentArray;$/;"	m
*new	SCClassLibrary/QtCollider/QObject.sc	/^  *new { arg className;$/;"	m
*new	SCClassLibrary/QtCollider/QPalette.sc	/^  *new {$/;"	m
*new	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  *new {$/;"	m
*new	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QSlider.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QSlider2D.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *new { arg server, numChannels = 2, index, bufsize = 4096, zoom, rate, view, bufnum;$/;"	m
*new	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *new { arg server;$/;"	m
*new	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *new {$/;"	m
*new	SCClassLibrary/QtCollider/QUserView.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QView.sc	/^  *new { arg parent, bounds;$/;"	m
*new	SCClassLibrary/QtCollider/QWindow.sc	/^  *new { arg name="",$/;"	m
*new	SCClassLibrary/QtCollider/QWindow.sc	/^  *new { arg win, name, bounds, resizable, border;$/;"	m
*new	SCClassLibrary/QtCollider/dnd_views.sc	/^  *new { arg parent, bounds; ^super.new(parent,bounds).initQDragView }$/;"	m
*new	SCClassLibrary/QtCollider/enums.sc	/^  *new { arg alignment; ^dict[alignment]; }$/;"	m
*new	SCClassLibrary/QtCollider/enums.sc	/^  *new { arg curve;$/;"	m
*new	SCClassLibrary/QtCollider/enums.sc	/^  *new { arg limit; ^dict[limit]; }$/;"	m
*new	SCClassLibrary/QtCollider/enums.sc	/^  *new { arg name; ^this.perform(name) }$/;"	m
*new	SCClassLibrary/QtCollider/enums.sc	/^  *new { arg symbol; ^this.perform(symbol); }$/;"	m
*new	SCClassLibrary/SCDoc/SCDoc.sc	/^    *new { |validUriString|$/;"	m
*new	SCClassLibrary/SCDoc/SCDoc.sc	/^    *new {|node,path|$/;"	m
*new	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*new { |root|$/;"	m
*new	SCClassLibrary/deprecated/deprecated-3.6.sc	/^	*new { arg port;$/;"	m
*new	quarks/Feedback/Fb.sc	/^	*new { $/;"	m
*new	quarks/Feedback/Fb.sc	/^	*new {$/;"	m
*new	quarks/MathLib/classes/LazyLindenmayer/Plsys.sc	/^	*new { arg pattern, rules, level=1, contextSize;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	*new { arg size=8;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	*new { arg markovset, pattern, repeats = inf;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	*new { arg markovset, repeats=1;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	*new { arg markovset, which, repeats=1;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	*new { arg args, order=1, updateSeeds=false;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	*new { arg args, updateSeeds=false; $/;"	m
*new	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	*new { arg size=8;$/;"	m
*new	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	*new { $/;"	m
*new	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	*new { arg n, a;$/;"	m
*new	quarks/MathLib/classes/Solver/Solver.sc	/^	*new { arg f,dt, t=0,y=0; ^super.newCopyArgs(f,dt,t,y) }$/;"	m
*new	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	*new { arg n;$/;"	m
*new	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	*new { arg x=0, y=0, z=0;$/;"	m
*new	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	*new { arg rho, theta, phi;$/;"	m
*new	quarks/MathLib/classes/gui/ScatterView.sc	/^	*new {|parent, bounds, data, specX, specY, specZ, rotX = 0, rotY = 0, rotZ = 0|$/;"	m
*new	quarks/MathLib/classes/gui/ScatterView.sc	/^	*new {|parent, bounds, data, specX, specY|$/;"	m
*new	quarks/MathLib/classes/gui/ScatterView2.sc	/^	*new {|parent, bounds, data, specX, specY|$/;"	m
*new	quarks/MathLib/classes/patterns/P3n1.sc	/^	*new { arg pattern, endWhen;$/;"	m
*new	quarks/MathLib/classes/patterns/P3n1.sc	/^	*new { arg pattern, mod = 2, muls = [1, 6], adds = [0, 4], endCondition = false;$/;"	m
*new	quarks/MathLib/classes/patterns/P3n1.sc	/^	*new { arg pattern, rules, endCondition = false;$/;"	m
*new	quarks/MathLib/classes/patterns/Pboolnet.sc	/^	*new { arg nodes, repeats=1, loops=1;$/;"	m
*new	quarks/MathLib/classes/patterns/Preduce.sc	/^	*new { arg selectorPattern ... arguments;$/;"	m
*new	quarks/MathLib/classes/patterns/Preduce.sc	/^	*new { arg selectorPattern ... patterns;$/;"	m
*new	quarks/MathLib/classes/various/Bessel.sc	/^	*new { |x|$/;"	m
*new	quarks/MathLib/classes/various/Quaternion.sc	/^	*new { |a, b, c, d| $/;"	m
*new	quarks/cruciallib/Control/CCBank.sc	/^	*new { arg sets,src;$/;"	m
*new	quarks/cruciallib/Control/MIDIClock.sc	/^	*new { arg deviceName,portName,tempoClock;$/;"	m
*new	quarks/cruciallib/Control/MIDIPlayer.sc	/^	*new { arg init=440.0; ^super.new.value_(init) }$/;"	m
*new	quarks/cruciallib/Control/MIDIPlayer.sc	/^	*new { arg num=1,spec=\\linear;$/;"	m
*new	quarks/cruciallib/Control/MIDIPlayer.sc	/^	*new { arg spec=\\amp;$/;"	m
*new	quarks/cruciallib/Editors/EnvEditor.sc	/^	*new { arg env,levelSpec;$/;"	m
*new	quarks/cruciallib/Editors/NumberEditor.sc	/^	*new { arg dict;$/;"	m
*new	quarks/cruciallib/Editors/NumberEditor.sc	/^	*new { arg initVal,labels,values;$/;"	m
*new	quarks/cruciallib/Editors/NumberEditor.sc	/^	*new { arg val=false;$/;"	m
*new	quarks/cruciallib/Editors/NumberEditor.sc	/^	*new { arg value=1.0,spec='amp';$/;"	m
*new	quarks/cruciallib/Gui/ActionButton.sc	/^	*new { arg  target,layout,minWidth=100;$/;"	m
*new	quarks/cruciallib/Gui/ActionButton.sc	/^	*new { arg layout,title,function,minWidth=20,minHeight,color,backcolor,font;$/;"	m
*new	quarks/cruciallib/Gui/ActionButton.sc	/^	*new { arg layout,title,onFunction,offFunction,init=false,minWidth=20,minHeight,onColor,offColor;$/;"	m
*new	quarks/cruciallib/Gui/CXLabel.sc	/^	*new { arg layout,string,width,height,minWidth=15,font;$/;"	m
*new	quarks/cruciallib/Gui/CXLabel.sc	/^	*new { arg name,layout,minWidth=130;$/;"	m
*new	quarks/cruciallib/Gui/CXMenu.sc	/^	*new { arg ... nameFuncs;$/;"	m
*new	quarks/cruciallib/Gui/Dialogs.sc	/^	*new { arg buildDialog,name="",bounds;$/;"	m
*new	quarks/cruciallib/Gui/Dialogs.sc	/^	*new { arg buildDialog,okFunc,name="?",cancelFunc;$/;"	m
*new	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	*new { arg layout,$/;"	m
*new	quarks/cruciallib/Gui/SynthConsole.sc	/^	*new { arg object, path,layout;$/;"	m
*new	quarks/cruciallib/Gui/SynthConsole.sc	/^	*new { arg ugenFunc,layout;$/;"	m
*new	quarks/cruciallib/Gui/Updater.sc	/^	*new { arg model,updateFunc;$/;"	m
*new	quarks/cruciallib/Instr/Instr.sc	/^	*new { arg a,args;$/;"	m
*new	quarks/cruciallib/Instr/Instr.sc	/^	*new { arg a,b,index=0;$/;"	m
*new	quarks/cruciallib/Instr/Instr.sc	/^	*new { arg name, func, specs, outSpec;$/;"	m
*new	quarks/cruciallib/Instr/Instr.sc	/^	*new { arg name;$/;"	m
*new	quarks/cruciallib/Instr/Instr.sc	/^	*new { arg ugenClass,rate=\\ar;$/;"	m
*new	quarks/cruciallib/Instr/InstrBrowser.sc	/^    *new { arg toolbarFunc,topBarFunc,showUGenInstr=false;$/;"	m
*new	quarks/cruciallib/Instr/InstrSpawner.sc	/^	*new { arg func,args,deltaPattern = 1.0;$/;"	m
*new	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*new { |triggerID,func|$/;"	m
*new	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*new {$/;"	m
*new	quarks/cruciallib/Instr/Interface.sc	/^	*new { arg interfaceDef,args;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg bufSize=2048;	$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg itemSpec,size=16;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg itemSpec;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg minval=0, maxval=10, default, units;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg numChannels;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg numChannels=2,numInputs=1;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg numFrames=44100,numChannels=1,sampleRate=44100.0;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg outSpec,hasGate,hasAudioInput;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg prototype;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { arg tracks=2,numChannels=2;$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { |defaultControl|$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new { |rate,numChannels,private|$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*new {$/;"	m
*new	quarks/cruciallib/Instr/MoreSpecs.sc	/^    *new { arg names,default,static=false;$/;"	m
*new	quarks/cruciallib/Instr/Patch.sc	/^	*new { arg name,inputs,outClass;$/;"	m
*new	quarks/cruciallib/Players/AudioInPlayer.sc	/^	*new { arg numChannels=2,firstChannel=0;$/;"	m
*new	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	*new { arg tempoFactor=2.0,mul=1.0,tempoBase;$/;"	m
*new	quarks/cruciallib/Players/HasSubject.sc	/^	*new { arg subject=0.0;$/;"	m
*new	quarks/cruciallib/Players/Patching.sc	/^	*new { arg source,bus,enabled=true;$/;"	m
*new	quarks/cruciallib/Players/Patching.sc	/^	*new { arg source,group,bus;$/;"	m
*new	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	*new { arg operator, a, b;$/;"	m
*new	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	*new { arg operator, a;$/;"	m
*new	quarks/cruciallib/Players/PlayerMixer.sc	/^	*new { arg ... players;$/;"	m
*new	quarks/cruciallib/Players/PlayerMixer.sc	/^	*new { arg players;$/;"	m
*new	quarks/cruciallib/Players/PlayerRecorder.sc	/^	*new { arg player,recHeaderFormat=\\AIFF,recSampleFormat=\\float;$/;"	m
*new	quarks/cruciallib/Players/PlayerSocket.sc	/^	*new { arg rate=\\audio,numChannels=2,round=0.0,env;$/;"	m
*new	quarks/cruciallib/Players/PlayerSocket.sc	/^	*new { arg round=0.0;$/;"	m
*new	quarks/cruciallib/Players/SFP/SFP.sc	/^	*new { arg file;$/;"	m
*new	quarks/cruciallib/Players/SFP/SFP.sc	/^	*new { arg path,tempo,firstBeatIsAtFrame=0;$/;"	m
*new	quarks/cruciallib/Players/Silence.sc	/^	*new { arg path;$/;"	m
*new	quarks/cruciallib/Players/Silence.sc	/^	*new { arg spec=\\stereo;$/;"	m
*new	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	*new { arg player,amp=1.0,spec=\\amp;$/;"	m
*new	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	*new { arg player,env,numChannels=2,limit=false;$/;"	m
*new	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	*new { |subject,numChannels=2|$/;"	m
*new	quarks/cruciallib/Players/TempoPlayer.sc	/^	*new { arg tempo;$/;"	m
*new	quarks/cruciallib/Sample/Sample.sc	/^	*new { arg array;$/;"	m
*new	quarks/cruciallib/Sample/Sample.sc	/^	*new { arg numFrames=44100,numChannels=1,sampleRate=44100.0;$/;"	m
*new	quarks/cruciallib/Sample/Sample.sc	/^	*new { arg soundFilePath,tempo,startFrame = 0,endFrame = -1;$/;"	m
*new	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*new { arg clock,tempo,tempoClock;$/;"	m
*new	quarks/cruciallib/Scheduling/Tempo.sc	/^	*new { arg tempo=1.0,tempoClock;$/;"	m
*new	quarks/cruciallib/Scheduling/TempoBus.sc	/^	*new { arg server,tempo;$/;"	m
*new	quarks/cruciallib/Sequencers/BusDriver.sc	/^	*new { arg levels, deltas;$/;"	m
*new	quarks/cruciallib/Sequencers/BusDriver.sc	/^	*new { arg subject=0.0,trigger=0.0,lag=0.0;$/;"	m
*new	quarks/cruciallib/Sequencers/BusDriver.sc	/^	*new { arg values=0.0,durations=0.25,lag=0.0;$/;"	m
*new	quarks/cruciallib/Sequencers/BusDriver.sc	/^	*new { |value=0.0,spec=\\unipolar|$/;"	m
*new	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*new { arg weakRef;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^	*new { arg input;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg a,b;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg collection;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg constraint;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg function;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg limit;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new { arg list;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*new {$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*new {	^super.new.reset }$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*new { ^super.new.clear }$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*new { arg modifier,function,description;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*new { arg requireMask,denyMask,function,description;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^    *new { arg ... responders;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	*new { arg busses;$/;"	m
*new	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*new { ^super.new.clear }$/;"	m
*new	quarks/cruciallib/deprecated-3.5.sc	/^	*new { arg ... args;$/;"	m
*new1	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new1 { arg dummyRate, in0, in1, in2, in3;$/;"	m
*new1	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new1 { arg dummyRate, in0, in1, in2;$/;"	m
*new1	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new1 { arg rate, in, mul, add;$/;"	m
*new1	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	*new1 { arg rate, selector, a, b;$/;"	m
*new1	SCClassLibrary/Common/Audio/BufIO.sc	/^	*new1 { arg rate ... args;$/;"	m
*new1	SCClassLibrary/Common/Audio/Demand.sc	/^	*new1 { arg rate, in, label, run, trigid;$/;"	m
*new1	SCClassLibrary/Common/Audio/EnvGen.sc	/^	*new1 { arg rate, gate, levelScale, levelBias, timeScale, doneAction, envArray;$/;"	m
*new1	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*new1 { arg rate, freqscale, freqoffset, arrayRef;$/;"	m
*new1	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*new1 { arg rate, input, freqscale, freqoffset, decayscale, arrayRef;$/;"	m
*new1	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*new1 { arg rate, specificationsArrayRef, freqscale = 1.0, freqoffset = 0.0;$/;"	m
*new1	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	*new1 { arg rate, specificationsArrayRef, input, freqscale = 1.0, freqoffset = 0.0, decayscale = 1.0;$/;"	m
*new1	SCClassLibrary/Common/Audio/Filter.sc	/^	*new1 { arg rate, in, time, curvature, warp, start;$/;"	m
*new1	SCClassLibrary/Common/Audio/IEnvGen.sc	/^	*new1 { arg rate, index, envArray;$/;"	m
*new1	SCClassLibrary/Common/Audio/Osc.sc	/^	*new1 { arg rate, which, array;$/;"	m
*new1	SCClassLibrary/Common/Audio/Poll.sc	/^	*new1 { arg rate, trig, in, label, trigid;$/;"	m
*new1	SCClassLibrary/Common/Audio/Splay.sc	/^	*new1 { arg rate, spread = 1, level = 1, center = 0.0, levelComp = true ... inArray;$/;"	m
*new1	SCClassLibrary/Common/Audio/Trig.sc	/^	*new1 { arg rate, sig, replyRate, peakLag, cmdName, replyID;$/;"	m
*new1	SCClassLibrary/Common/Audio/Trig.sc	/^	*new1 { arg rate, trig = 0.0, cmdName = '\/reply', values, replyID = -1;$/;"	m
*new1	SCClassLibrary/Common/Audio/UGen.sc	/^	*new1 { arg rate ... args;$/;"	m
*new255	SCClassLibrary/Common/Core/Color.sc	/^	*new255 { arg red=0, green=0, blue=0, alpha=255;$/;"	m
*newByName	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*newByName { arg deviceName,portName,dieIfNotFound=true;$/;"	m
*newByRate	quarks/cruciallib/Players/Patching.sc	/^	*newByRate { arg rate,nodeControl;$/;"	m
*newClear	SCClassLibrary/Common/Audio/Env.sc	/^	*newClear { arg numSegments = 8;$/;"	m
*newClear	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	*newClear { arg indexedSize = 0;$/;"	m
*newClear	SCClassLibrary/Common/Collections/List.sc	/^	*newClear { arg size = 0;$/;"	m
*newClear	SCClassLibrary/Common/Collections/SparseArray.sc	/^	*newClear { arg size, default;$/;"	m
*newClear	SCClassLibrary/Common/Math/Signal.sc	/^	*newClear {$/;"	m
*newClear	quarks/MathLib/classes/various/Matrix.sc	/^	*newClear { arg rows=1, cols=1; \/\/ return (rows x cols) - zero matrix $/;"	m
*newClear	quarks/cruciallib/Sample/Sample.sc	/^	*newClear {  arg numFrames=44100,numChannels=1,sampleRate=44100.0;$/;"	m
*newCondition	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*newCondition { ^Document.allowAutoComp }	\/\/ no restrictions on when a window will be opened$/;"	m
*newCondition	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*newCondition { arg start, size, doc;$/;"	m
*newCopyArgs	SCClassLibrary/Common/Core/Object.sc	/^	*newCopyArgs { arg ... args;$/;"	m
*newCustom	SCClassLibrary/QtCollider/QView.sc	/^  *newCustom { arg customArgs;$/;"	m
*newFrom	SCClassLibrary/Common/Audio/BufIO.sc	/^	*newFrom { arg list;$/;"	m
*newFrom	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*newFrom { arg synthdef;$/;"	m
*newFrom	SCClassLibrary/Common/Collections/Collection.sc	/^	*newFrom { | aCollection |$/;"	m
*newFrom	SCClassLibrary/Common/Collections/Dictionary.sc	/^	*newFrom { arg aCollection;$/;"	m
*newFrom	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*newFrom { arg aCollection;$/;"	m
*newFrom	SCClassLibrary/Common/Collections/Pair.sc	/^	*newFrom { arg collection;$/;"	m
*newFrom	SCClassLibrary/Common/Control/Bus.sc	/^	*newFrom { |bus, offset, numChannels=1|$/;"	m
*newFrom	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*newFrom { arg server;$/;"	m
*newFrom	SCClassLibrary/Common/GUI/ControlModel.sc	/^	*newFrom { arg similar;$/;"	m
*newFrom	quarks/cruciallib/Instr/MoreSpecs.sc	/^	*newFrom { arg similar;$/;"	m
*newFrom	quarks/cruciallib/ServerTools/SharedBus.sc	/^	*newFrom { arg bus,owner;$/;"	m
*newFromDesc	SCClassLibrary/Common/Audio/UGen.sc	/^	*newFromDesc { arg rate, numOutputs, inputs, specialIndex;$/;"	m
*newFromDesc	SCClassLibrary/Common/Audio/UGen.sc	/^	*newFromDesc { arg rate, numOutputs, inputs;$/;"	m
*newFromFile	SCClassLibrary/Common/Control/Score.sc	/^	*newFromFile { arg path;$/;"	m
*newFromIndex	SCClassLibrary/Common/GUI/Document.sc	/^	*newFromIndex { | idx |$/;"	m
*newFromIndices	SCClassLibrary/Common/Collections/SparseArray.sc	/^	*newFromIndices { arg array, indices;$/;"	m
*newFromKey	SCClassLibrary/Common/Collections/Scale.sc	/^	*newFromKey { | key |$/;"	m
*newFromKey	SCClassLibrary/Common/Collections/Scale.sc	/^	*newFromKey { |key, tuning|$/;"	m
*newFromRawPointer	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*newFromRawPointer {|nsptr|$/;"	m
*newHO	quarks/MathLib/classes/Solver/Solver.sc	/^	*newHO { |f,dt,t,y| ^super.new.initHO(f,dt,t,y) }$/;"	m
*newIdentity	quarks/MathLib/classes/various/Matrix.sc	/^	*newIdentity { arg n; \/\/ return an (n x n) identity matrix$/;"	m
*newMatching	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*newMatching { arg func, path, srcID, recvPort, argTemplate;$/;"	m
*newMatching	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*newMatching { arg key, func, path, srcID, recvPort, argTemplate;$/;"	m
*newPaused	SCClassLibrary/Common/Control/Node.sc	/^	*newPaused { arg defName, args, target, addAction=\\addToHead;$/;"	m
*newSides	SCClassLibrary/Common/Geometry/Rect.sc	/^	*newSides { arg left=0, top=0, right=0, bottom=0;$/;"	m
*newUndocClass	SCClassLibrary/SCDoc/SCDoc.sc	/^    *newUndocClass {|name|$/;"	m
*newUsing	SCClassLibrary/Common/Collections/List.sc	/^	*newUsing { arg anArray;$/;"	m
*newWith	quarks/cruciallib/Gui/CXMenu.sc	/^	*newWith { arg nameFuncs;$/;"	m
*next	quarks/cruciallib/Scheduling/Tempo.sc	/^	*next { ^default.tempo }$/;"	m
*nextBar	SCClassLibrary/Common/Core/Clock.sc	/^	*nextBar { | beat | ^TempoClock.default.nextBar(beat)  }$/;"	m
*nextTimeOnGrid	SCClassLibrary/Common/Core/Clock.sc	/^	*nextTimeOnGrid { | quant = 1, phase = 0 | ^TempoClock.default.nextTimeOnGrid(quant, phase)	}$/;"	m
*nextTimeOnGrid	SCClassLibrary/Common/Core/Clock.sc	/^	*nextTimeOnGrid { | quant = 1, phase = 0|$/;"	m
*noncontrol	quarks/cruciallib/Players/Patching.sc	/^	*noncontrol { arg nodeControl;$/;"	m
*noncontrol	quarks/cruciallib/Players/Patching.sc	/^	*noncontrol { arg source,group,bus;$/;"	m
*nonimpl	SCClassLibrary/QtCollider/QPen.sc	/^  *nonimpl { arg methodName;$/;"	m
*nonimpl	SCClassLibrary/QtCollider/QView.sc	/^  *nonimpl { arg methodName;$/;"	m
*normalize	SCClassLibrary/Common/Files/SoundFile.sc	/^	*normalize { |path, outPath, newHeaderFormat, newSampleFormat,$/;"	m
*notImplemented	SCClassLibrary/QtCollider/QtGUI.sc	/^  *notImplemented { arg class;$/;"	m
*noteOff	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*noteOff { arg func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*noteOff	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*noteOff { arg key, func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*noteOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*noteOn { arg func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*noteOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*noteOn { arg key, func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*notify	SCClassLibrary/Common/GUI/Model.sc	/^	*notify { arg object, message, args;$/;"	m
*numFixedArgs	SCClassLibrary/Common/Audio/InOut.sc	/^	*numFixedArgs { ^0 }$/;"	m
*numFixedArgs	SCClassLibrary/Common/Audio/InOut.sc	/^	*numFixedArgs { ^1 }$/;"	m
*numFixedArgs	SCClassLibrary/Common/Audio/InOut.sc	/^	*numFixedArgs { ^2 }$/;"	m
*numFixedArgs	SCClassLibrary/Common/Audio/InOut.sc	/^	*numFixedArgs { ^this.subclassResponsibility(thisMethod) }$/;"	m
*numberBox	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*numberBox { ^SCNumberBox }$/;"	m
*numberBox	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*numberBox { ^SCNumberBox }$/;"	m
*numberBox	SCClassLibrary/QtCollider/QtGUI.sc	/^  *numberBox { ^QNumberBox }$/;"	m
*numberOfKnownServices	SCClassLibrary/Common/Control/OSCService.sc	/^	*numberOfKnownServices {$/;"	m
*numberOfOpen	SCClassLibrary/Common/GUI/Document.sc	/^	*numberOfOpen {$/;"	m
*numericalDict	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*numericalDict { arg dict, keyName, valName, math=true;$/;"	m
*objPerform	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*objPerform { arg id, selector ... args;$/;"	m
*object	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	*object {^"@"}$/;"	m
*objectAt	quarks/cruciallib/Instr/Instr.sc	/^	*objectAt { arg name;$/;"	m
*objects	SCClassLibrary/Common/Control/SystemActions.sc	/^	*objects { ^this.shouldNotImplement(thisMethod) }$/;"	m
*objects_	SCClassLibrary/Common/Control/SystemActions.sc	/^	*objects_ { arg obj; ^this.shouldNotImplement(thisMethod) }$/;"	m
*observedClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*observedClass { ^Pdef }$/;"	m
*observedClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*observedClass { ^Pdefn }$/;"	m
*observedClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*observedClass { ^Tdef }$/;"	m
*ok	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*ok {$/;"	m
*on	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	*on { arg window,bounds,margin,background;$/;"	m
*on	SCClassLibrary/Common/Streams/IOStream.sc	/^	*on { arg aCollection;$/;"	m
*open	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*open { |dev| ^scheme.open(dev); }$/;"	m
*open	SCClassLibrary/Common/Files/File.sc	/^	*open { arg pathName, mode;$/;"	m
*open	SCClassLibrary/Common/GUI/Document.sc	/^	*open { | path, selectionStart=0, selectionLength=0, envir |$/;"	m
*open	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*open { arg path;$/;"	m
*open	SCClassLibrary/Platform/linux/GLID.sc	/^	*open { arg dev;$/;"	m
*open	SCClassLibrary/Platform/osx/MXHID.sc	/^	*open { arg dev;$/;"	m
*open	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*open { |path, charPos = 0, selectionLength = 0|$/;"	m
*openAutoComplete	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*openAutoComplete {	\/\/ open a file by opendialog$/;"	m
*openBrowsePage	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*openBrowsePage {|category|$/;"	m
*openDialog	SCClassLibrary/Common/GUI/PlusGUI/Files/FilePlusGUI.sc	/^	*openDialog { arg prompt, successFunc, cancelFunc;$/;"	m
*openDocuments	SCClassLibrary/Common/GUI/Document.sc	/^	*openDocuments {$/;"	m
*openFileAutoComplete	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	*openFileAutoComplete {	arg path;		\/\/ open a file by path$/;"	m
*openHelpFor	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*openHelpFor {|text|$/;"	m
*openHelpForMethod	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*openHelpForMethod {|method|$/;"	m
*openHelpUrl	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*openHelpUrl { |url|$/;"	m
*openPanel	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*openPanel { arg okFunc, cancelFunc, multipleSelection=false;$/;"	m
*openPanel	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*openPanel { arg okFunc, cancelFunc, multipleSelection=false;$/;"	m
*openPanel	SCClassLibrary/QtCollider/QDialog.sc	/^  *openPanel { arg okFunc, cancelFunc, multipleSelection=false;$/;"	m
*openSearchPage	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	*openSearchPage {|text|$/;"	m
*openURL	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*openURL { arg url;$/;"	m
*orc	quarks/cruciallib/Instr/Instr.sc	/^	*orc { arg name, pairs, outSpec = \\audio;$/;"	m
*orderNodesMsg	SCClassLibrary/Common/Control/Node.sc	/^	*orderNodesMsg { arg nodes;$/;"	m
*outDevices	SCClassLibrary/Common/Control/Server.sc	/^	*outDevices {$/;"	m
*overwriteMsg	SCClassLibrary/DefaultLibrary/Main.sc	/^	*overwriteMsg { _MainOverwriteMsg ^this.primitiveFailed }$/;"	m
*packNotes	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*packNotes { arg notes;$/;"	m
*packages	SCClassLibrary/Common/Quarks/packages.sc	/^	*packages {$/;"	m
*pairs	SCClassLibrary/Common/Audio/Env.sc	/^	*pairs { arg pairs, curve;$/;"	m
*palette	SCClassLibrary/QtCollider/QtGUI.sc	/^  *palette {$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*paletteExample	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	*paletteExample { arg parent, bounds;$/;"	m
*palette_	SCClassLibrary/QtCollider/QtGUI.sc	/^  *palette_ { arg p;$/;"	m
*parallelise	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*parallelise { arg list; ^Ppar(list) }$/;"	m
*parallelise	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*parallelise { arg list; ^Ptuple(list) }$/;"	m
*parse	SCClassLibrary/QtCollider/QLayout.sc	/^  *parse { arg in, row, col;$/;"	m
*parse	SCClassLibrary/QtCollider/QLayout.sc	/^  *parse { arg in;$/;"	m
*parseAndRender	SCClassLibrary/SCDoc/SCDoc.sc	/^    *parseAndRender {|doc|$/;"	m
*parseDoc	SCClassLibrary/SCDoc/SCDoc.sc	/^    *parseDoc {|doc|$/;"	m
*parseFileFull	SCClassLibrary/SCDoc/SCDoc.sc	/^    *parseFileFull {|path|$/;"	m
*parseFileMetaData	SCClassLibrary/SCDoc/SCDoc.sc	/^    *parseFileMetaData {|dir,path|$/;"	m
*parseFilePartial	SCClassLibrary/SCDoc/SCDoc.sc	/^    *parseFilePartial {|path|$/;"	m
*path	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*path { arg function;$/;"	m
*path	SCClassLibrary/QtCollider/QPen.sc	/^  *path {$/;"	m
*pathSeparator	SCClassLibrary/Platform/Platform.sc	/^	*pathSeparator { ^thisProcess.platform.pathSeparator }$/;"	m
*pause	SCClassLibrary/Common/osx/Speech.sc	/^	*pause { arg chan, paused=0;$/;"	m
*pen	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*pen { ^SCPen }$/;"	m
*pen	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*pen { ^SCPen }$/;"	m
*pen	SCClassLibrary/QtCollider/QtGUI.sc	/^  *pen { ^QPen }$/;"	m
*perc	SCClassLibrary/Common/Audio/Env.sc	/^	*perc { arg attackTime=0.01, releaseTime=1.0, level=1.0, curve = -4.0;$/;"	m
*performFunction	SCClassLibrary/Common/Control/SystemActions.sc	/^	*performFunction { arg server, function;$/;"	m
*platformDir	SCClassLibrary/Platform/Platform.sc	/^	*platformDir { ^thisProcess.platform.platformDir }$/;"	m
*play	SCClassLibrary/Common/Control/Score.sc	/^	*play { arg list, server;$/;"	m
*play	SCClassLibrary/Common/Core/Clock.sc	/^	*play { | task | this.sched(0, task) }$/;"	m
*play	SCClassLibrary/Common/Core/Clock.sc	/^	*play { | task, quant | TempoClock.default.play(task, quant)	 }$/;"	m
*play	SCClassLibrary/Common/Streams/History.sc	/^	*play { arg str, clock;$/;"	m
*play	SCClassLibrary/Common/Streams/History.sc	/^	*play { |start=0, end, verbose=true| ^current.play(start, end, verbose) }$/;"	m
*playDocument	SCClassLibrary/Common/Streams/History.sc	/^	*playDocument {$/;"	m
*playFromFile	SCClassLibrary/Common/Control/Score.sc	/^	*playFromFile { arg path, server;$/;"	m
*playNextBar	SCClassLibrary/Common/Core/Clock.sc	/^	*playNextBar { | task | ^TempoClock.default.playNextBar(task)  }$/;"	m
*polytouch	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*polytouch { arg func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*polytouch	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*polytouch { arg key, func, noteNum, chan, srcID, argTemplate, dispatcher;$/;"	m
*pop	SCClassLibrary/Common/Collections/Environment.sc	/^	*pop {$/;"	m
*pop	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*pop {$/;"	m
*pop	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*pop {$/;"	m
*pop	SCClassLibrary/QtCollider/QPen.sc	/^  *pop {$/;"	m
*popUpMenu	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*popUpMenu { ^SCPopUpMenu }$/;"	m
*popUpMenu	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*popUpMenu { ^SCPopUpMenu }$/;"	m
*popUpMenu	SCClassLibrary/QtCollider/QtGUI.sc	/^  *popUpMenu { ^QPopUpMenu }$/;"	m
*postColor	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*postColor {$/;"	m
*postColor_	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*postColor_ { | col |$/;"	m
*postColor_	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*postColor_ {|...args|$/;"	m
*postDevices	SCClassLibrary/Platform/linux/GLID.sc	/^	*postDevices {$/;"	m
*postDevices	SCClassLibrary/Platform/osx/MXHID.sc	/^	*postDevices {$/;"	m
*postDevicesAndProperties	SCClassLibrary/Platform/linux/GLID.sc	/^	*postDevicesAndProperties {$/;"	m
*postDevicesAndProperties	SCClassLibrary/Platform/osx/MXHID.sc	/^	*postDevicesAndProperties {$/;"	m
*postInlineWarnings	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*postInlineWarnings {$/;"	m
*postInlineWarnings_	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*postInlineWarnings_ {|aBoolean|$/;"	m
*postMsg	SCClassLibrary/SCDoc/SCDoc.sc	/^    *postMsg {|txt, lvl=0|$/;"	m
*postRepository	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*postRepository { arg keys, stream;$/;"	m
*postTree	SCClassLibrary/Common/Collections/Library.sc	/^	*postTree {$/;"	m
*prAddAnnularWedge	SCClassLibrary/QtCollider/QPen.sc	/^  *prAddAnnularWedge { arg center, innerRadius, outerRadius, startAngle, sweepLength;$/;"	m
*prAddArc	SCClassLibrary/QtCollider/QPen.sc	/^  *prAddArc { arg center, radius, startAngle, arcAngle;$/;"	m
*prAnnotate	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*prAnnotate { arg thing, notes;$/;"	m
*prBasicNew	SCClassLibrary/Common/GUI/Document.sc	/^	*prBasicNew {$/;"	m
*prBegin	SCClassLibrary/QtCollider/QPen.sc	/^  *prBegin { arg aQView;$/;"	m
*prClear	SCClassLibrary/Common/Core/Clock.sc	/^	*prClear {$/;"	m
*prClearCurrentDrag	SCClassLibrary/QtCollider/QView.sc	/^  *prClearCurrentDrag { currentDrag = nil; currentDragString = nil; }$/;"	m
*prConnect	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*prConnect {|ideName|$/;"	m
*prDefaultFamilyForStyle	SCClassLibrary/QtCollider/QFont.sc	/^  *prDefaultFamilyForStyle { arg style = -1;$/;"	m
*prDiscover	SCClassLibrary/Common/Control/WII.sc	/^	*prDiscover { |newid,alldevices|$/;"	m
*prDispatchEvent	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*prDispatchEvent { arg eventList, status, port, chan, b, c;$/;"	m
*prEnd	SCClassLibrary/QtCollider/QPen.sc	/^  *prEnd {$/;"	m
*prFillAxialGradient	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*prFillAxialGradient { arg startPoint, endPoint, color0, color1;$/;"	m
*prFillRadialGradient	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*prFillRadialGradient { arg innerCircleCenter, outerCircleCenter, startRadius,$/;"	m
*prFreeAll	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*prFreeAll {$/;"	m
*prFromWindowRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*prFromWindowRect {arg window, rect;$/;"	m
*prGetFilterAttributes	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*prGetFilterAttributes {|filterName|$/;"	m
*prGetFilterNames	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*prGetFilterNames {|cat, array|$/;"	m
*prGetIndexOfListener	SCClassLibrary/Common/GUI/Document.sc	/^	*prGetIndexOfListener {$/;"	m
*prGetIndexOfListener	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*prGetIndexOfListener {$/;"	m
*prGetLast	SCClassLibrary/Common/GUI/Document.sc	/^	*prGetLast {$/;"	m
*prGetMouseCoords	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*prGetMouseCoords {|point|$/;"	m
*prGetPathsDialog	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*prGetPathsDialog { arg allowsMultiple;$/;"	m
*prGetPathsInDirectory	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*prGetPathsInDirectory { arg dir,ext,arr;$/;"	m
*prGetScreenBounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*prGetScreenBounds { arg argBounds;$/;"	m
*prGetScreenBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*prGetScreenBounds { arg argBounds;$/;"	m
*prGetcwd	SCClassLibrary/Common/Files/File.sc	/^	*prGetcwd { arg string;$/;"	m
*prInit	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*prInit { arg inports, outports;$/;"	m
*prInit	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*prInit { arg title;$/;"	m
*prInitClient	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*prInitClient {$/;"	m
*prInitOSCService	SCClassLibrary/Common/Control/OSCService.sc	/^	*prInitOSCService { arg server, index;$/;"	m
*prInitSpeech	SCClassLibrary/Common/osx/Speech.sc	/^	*prInitSpeech { arg num=16;$/;"	m
*prList	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*prList {$/;"	m
*prListDevices	SCClassLibrary/Common/Control/Server.sc	/^	*prListDevices {$/;"	m
*prLoadDir	quarks/cruciallib/Instr/Instr.sc	/^	*prLoadDir { arg dir;$/;"	m
*prNew	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*prNew { arg name;$/;"	m
*prNew	SCClassLibrary/Common/Core/Object.sc	/^	*prNew { arg maxSize = 0;$/;"	m
*prNew	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	*prNew { arg key, value, busNumChannels, isMultiChannel=false, isMapped=false, mappedRate;$/;"	m
*prNew	quarks/cruciallib/Instr/Instr.sc	/^	*prNew {$/;"	m
*prNew	quarks/cruciallib/Players/Patching.sc	/^	*prNew {arg source,enabled; ^super.newCopyArgs(source).init(enabled) }$/;"	m
*prNew	quarks/cruciallib/Players/Patching.sc	/^	*prNew {arg source,group,bus;$/;"	m
*prNew	quarks/cruciallib/Players/PlayerSocket.sc	/^	*prNew {  arg rate=\\audio,numChannels=2,round=0.0,env;$/;"	m
*prNewCopyArgs	SCClassLibrary/Common/Core/Object.sc	/^	*prNewCopyArgs { arg ... args;$/;"	m
*prParseFile	SCClassLibrary/SCDoc/SCDoc.sc	/^    *prParseFile {|path, mode|$/;"	m
*prSavePanel	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*prSavePanel { arg argResult;$/;"	m
*prSchedNotify	SCClassLibrary/Common/Core/Clock.sc	/^	*prSchedNotify {$/;"	m
*prSend	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*prSend {|id, data|$/;"	m
*prSetCurrentDrag	SCClassLibrary/QtCollider/QView.sc	/^  *prSetCurrentDrag { arg obj; currentDrag = obj; currentDragString = obj.asCompileString; }$/;"	m
*prSetDefault	SCClassLibrary/QtCollider/QFont.sc	/^  *prSetDefault { arg font, className;$/;"	m
*prSetFont	SCClassLibrary/QtCollider/QPen.sc	/^  *prSetFont { arg aFont;$/;"	m
*prSetShadow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*prSetShadow { arg offsetPoint, blur, color;$/;"	m
*prSetStyle	SCClassLibrary/QtCollider/QtGUI.sc	/^  *prSetStyle { arg name;$/;"	m
*prSetSyntaxColorTheme	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*prSetSyntaxColorTheme {|textC, classC, stringC, symbolC, commentC, numberC, specialValsC, specialVarsC, declC, puncC, environC|$/;"	m
*prStart	SCClassLibrary/Common/Control/WII.sc	/^	*prStart { |updtime=0.05|$/;"	m
*prStartEventLoop	SCClassLibrary/Platform/linux/LID.sc	/^	*prStartEventLoop {$/;"	m
*prStop	SCClassLibrary/Common/Control/WII.sc	/^	*prStop {$/;"	m
*prStopEventLoop	SCClassLibrary/Platform/linux/LID.sc	/^	*prStopEventLoop {$/;"	m
*prStringBounds	SCClassLibrary/QtCollider/QtGUI.sc	/^  *prStringBounds { arg aString, aFont;$/;"	m
*prType	SCClassLibrary/Common/Files/File.sc	/^	*prType { arg pathName;$/;"	m
*pr_Point3toBasis	quarks/MathLib/classes/various/Trafo.sc	/^	*pr_Point3toBasis {|a, b, c|$/;"	m
*pr_cross	quarks/MathLib/classes/various/Trafo.sc	/^	*pr_cross {|a, b|$/;"	m
*pr_do	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*pr_do { |action, curdict| ^global.pr_do(action, curdict) }$/;"	m
*prepareHelpForURL	SCClassLibrary/SCDoc/SCDoc.sc	/^    *prepareHelpForURL {|url|$/;"	m
*prettyString	SCClassLibrary/Common/Streams/History.sc	/^	*prettyString { |str|$/;"	m
*primitiveError	SCClassLibrary/Common/Core/Thread.sc	/^	*primitiveError { _PrimitiveError }$/;"	m
*primitiveErrorString	SCClassLibrary/Common/Core/Thread.sc	/^	*primitiveErrorString { _PrimitiveErrorString; }$/;"	m
*print	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  *print { |printFunc, cancelFunc|$/;"	m
*printAll	SCClassLibrary/DefaultLibrary/Main.sc	/^	*printAll { arg simplifyPaths = true;$/;"	m
*printAllShort	SCClassLibrary/DefaultLibrary/Main.sc	/^	*printAllShort {$/;"	m
*prnumberOfOpen	SCClassLibrary/Common/GUI/Document.sc	/^	*prnumberOfOpen {$/;"	m
*prnumberOfOpen	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*prnumberOfOpen {$/;"	m
*processRest	SCClassLibrary/Common/Streams/Rest.sc	/^	*processRest { |inval|$/;"	m
*processUrl	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*processUrl { |urlString, doneAction|$/;"	m
*program	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*program { arg func, chan, srcID, argTemplate, dispatcher;$/;"	m
*program	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*program { arg key, func, chan, srcID, argTemplate, dispatcher;$/;"	m
*publicInstVars	quarks/cruciallib/Gui/gui.sc	/^	*publicInstVars {$/;"	m
*push	SCClassLibrary/Common/Collections/Environment.sc	/^	*push { arg envir;$/;"	m
*push	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*push {$/;"	m
*push	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*push {$/;"	m
*push	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	*push { arg server, name, clock;$/;"	m
*push	SCClassLibrary/QtCollider/QPen.sc	/^  *push {$/;"	m
*pushForKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*pushForKeycode { arg keycode,requireMask,denyMask,function,description;$/;"	m
*pushForUnicode	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*pushForUnicode { arg unicode,requireMask,denyMask,function,description;$/;"	m
*put	SCClassLibrary/Common/Collections/Library.sc	/^	*put { arg ... args;$/;"	m
*put	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*put { arg key, obj;$/;"	m
*put	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*put { arg key, object;$/;"	m
*put	SCClassLibrary/Platform/linux/GLID.sc	/^	*put { arg key, object;$/;"	m
*put	SCClassLibrary/Platform/osx/MXHID.sc	/^	*put { arg key, object;$/;"	m
*put	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*put { arg key, object;$/;"	m
*put	quarks/cruciallib/Instr/Instr.sc	/^	*put { arg instr;$/;"	m
*put	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*put { arg things ... notes;$/;"	m
*put	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*put { arg address,val;  this.global.put(address,val) }$/;"	m
*put	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*put { arg address,val;  this.global.put(address,val) }$/;"	m
*putList	SCClassLibrary/Common/Collections/Library.sc	/^	*putList { arg args;$/;"	m
*qsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*qsched { arg quantize,function;$/;"	m
*qsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*qsched { arg quantize,server,bundle,onArrival;$/;"	m
*qt	SCClassLibrary/Common/GUI/GUI.sc	/^	*qt {$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QLabel' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcButton' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcCheckBox' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcHLayoutWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcPopUpMenu' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcScrollArea' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcScrollWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcTextField' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/BasicViews.sc	/^  *qtClass { ^'QcVLayoutWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QDialog.sc	/^  *qtClass { ^'QcFileDialog' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  *qtClass {^'QcGraph'}$/;"	m
*qtClass	SCClassLibrary/QtCollider/QKnob.sc	/^  *qtClass {^'QcKnob'}$/;"	m
*qtClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *qtClass { ^'QcGridLayout' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *qtClass { ^'QcHBoxLayout' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *qtClass { ^'QcStackLayout' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QLayout.sc	/^  *qtClass { ^'QcVBoxLayout' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  *qtClass {^'QcLevelIndicator'}$/;"	m
*qtClass	SCClassLibrary/QtCollider/QListView.sc	/^  *qtClass { ^'QcListWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  *qtClass { ^'QcMultiSlider' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QNumberBox.sc	/^  *qtClass { ^'QcNumberBox' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QObject.sc	/^  *qtClass { ^nil }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  *qtClass { ^'QcPenPrinter' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  *qtClass { ^'QcRangeSlider' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QScope.sc	/^  *qtClass { ^'QcScope' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QScope2.sc	/^  *qtClass { ^'QcScopeShm' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QSlider.sc	/^  *qtClass { ^'QcSlider' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QSlider2D.sc	/^  *qtClass { ^'QcSlider2D' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  *qtClass { ^'QcWaveform' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QTextView.sc	/^  *qtClass { ^'QcTextEdit' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QTreeView.sc	/^  *qtClass { ^'QcTreeWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QUserView.sc	/^  *qtClass { ^'QcCustomPainted' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QView.sc	/^  *qtClass { ^'QcDefaultWidget' }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QWebView.sc	/^  *qtClass { ^'QtCollider::WebView'; }$/;"	m
*qtClass	SCClassLibrary/QtCollider/QWindow.sc	/^  *qtClass {^'QcScrollWindow'}$/;"	m
*qtClass	SCClassLibrary/QtCollider/QWindow.sc	/^  *qtClass {^'QcWindow'}$/;"	m
*quadCurveTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*quadCurveTo { arg point, cpoint1;$/;"	m
*quadCurveTo	SCClassLibrary/QtCollider/QPen.sc	/^  *quadCurveTo { arg endPoint, cPoint;$/;"	m
*quartzComposerView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*quartzComposerView { ^SCQuartzComposerView }$/;"	m
*quartzComposerView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*quartzComposerView { ^SCQuartzComposerView }$/;"	m
*quitAll	SCClassLibrary/Common/Control/Server.sc	/^	*quitAll {$/;"	m
*rand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*rand { arg size, minVal, maxVal;$/;"	m
*rand	SCClassLibrary/Common/Core/Color.sc	/^	*rand { arg lo=0.3,hi=0.9; ^Color.new(rrand(lo,hi),rrand(lo,hi),rrand(lo,hi)) }$/;"	m
*rand	quarks/MathLib/classes/various/Quaternion.sc	/^	*rand { |min, max|$/;"	m
*rand2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*rand2 { arg size, val;$/;"	m
*rangeSlider	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*rangeSlider { ^SCRangeSlider }$/;"	m
*rangeSlider	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*rangeSlider { ^SCRangeSlider }$/;"	m
*rangeSlider	SCClassLibrary/QtCollider/QtGUI.sc	/^  *rangeSlider { ^QRangeSlider }$/;"	m
*read	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*read { arg path, keepDefs=false, dict;$/;"	m
*read	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*read { arg path;$/;"	m
*read	SCClassLibrary/Common/Collections/Library.sc	/^	*read { arg filename;$/;"	m
*read	SCClassLibrary/Common/Control/Buffer.sc	/^	*read { arg server,path,startFrame = 0,numFrames = -1, action, bufnum;$/;"	m
*read	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	*read { | path, skipEmptyLines=false, skipBlanks=false, func, delimiter, startRow = 0, skipSize = 0 |$/;"	m
*readArchive	SCClassLibrary/Common/Core/Object.sc	/^	*readArchive { arg pathname;$/;"	m
*readBinaryArchive	SCClassLibrary/Common/Core/Object.sc	/^	*readBinaryArchive { arg pathname;$/;"	m
*readChannel	SCClassLibrary/Common/Control/Buffer.sc	/^	*readChannel { arg server,path,startFrame = 0,numFrames = -1, channels, action, bufnum;$/;"	m
*readFile	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*readFile { arg stream, keepDefs=false, dict, path;$/;"	m
*readFromDoc	SCClassLibrary/Common/Streams/History.sc	/^	*readFromDoc { |path|$/;"	m
*readInterpret	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	*readInterpret { | path, skipEmptyLines=false, skipBlanks=false, delimiter, startRow = 0, skipSize = 0  |$/;"	m
*readMetadata	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*readMetadata { |path|$/;"	m
*readMetadataFile	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*readMetadataFile { ^nil }$/;"	m
*readMetadataFile	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*readMetadataFile { |path|$/;"	m
*readNew	SCClassLibrary/Common/Collections/String.sc	/^	*readNew { arg file;$/;"	m
*readNew	SCClassLibrary/Common/Math/Signal.sc	/^	*readNew { arg file;$/;"	m
*readNoUpdate	SCClassLibrary/Common/Control/Buffer.sc	/^	*readNoUpdate { arg server,path,startFrame = 0,numFrames = -1, bufnum, completionMessage;$/;"	m
*readTextArchive	SCClassLibrary/Common/Core/Object.sc	/^	*readTextArchive { arg pathname;$/;"	m
*realpath	SCClassLibrary/Common/Files/File.sc	/^	*realpath { arg pathName;$/;"	m
*rebuildTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*rebuildTree { ^global.rebuildTree }$/;"	m
*recordNRT	SCClassLibrary/Common/Control/Score.sc	/^	*recordNRT { arg list, oscFilePath, outputFilePath, inputFilePath, sampleRate = 44100,$/;"	m
*rectWindow	SCClassLibrary/Common/Math/Signal.sc	/^	*rectWindow { arg size, pad=0;$/;"	m
*red	SCClassLibrary/Common/Core/Color.sc	/^	*red { arg val = 1.0, alpha = 1.0; ^Color.new(min(1,val), max(val-1,0), max(val-1,0), alpha) }$/;"	m
*reduceArray	SCClassLibrary/Common/Collections/SparseArray.sc	/^	*reduceArray { arg array, default;$/;"	m
*register	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*register { arg node, assumePlaying=false;$/;"	m
*register	SCClassLibrary/Common/GUI/Model.sc	/^	*register { arg object,message,listener,action;$/;"	m
*register	SCClassLibrary/Platform/linux/LID.sc	/^	*register { | name, spec |$/;"	m
*register	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*register { arg object;$/;"	m
*register	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*register { arg keycode,shift,caps,opt,cntl,function;$/;"	m
*register	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*register { arg unicode,shift,caps,opt,cntl,function;$/;"	m
*registerAll	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*registerAll { arg ... sets;$/;"	m
*registerAll	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*registerAll { arg ... sets;$/;"	m
*registerKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*registerKeycode { arg modifier,keycode,function;$/;"	m
*registerKeycodeAll	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*registerKeycodeAll { arg ... sets;$/;"	m
*registerOneShot	SCClassLibrary/Common/GUI/Model.sc	/^	*registerOneShot {  arg object,message,listener,action;$/;"	m
*registerUnicode	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*registerUnicode { arg modifier,unicode,function;$/;"	m
*registerUnicodeAll	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*registerUnicodeAll { arg ... sets;$/;"	m
*registrationExists	SCClassLibrary/Common/GUI/Model.sc	/^	*registrationExists { |object,message,listener|$/;"	m
*release	quarks/cruciallib/ServerTools/BusPool.sc	/^	*release { |bus,client|$/;"	m
*remove	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	*remove { arg obj;$/;"	m
*remove	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*remove { arg resp;$/;"	m
*remove	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*remove { arg responder;$/;"	m
*remove	SCClassLibrary/Common/Control/SystemActions.sc	/^	*remove { arg object, server;$/;"	m
*remove	SCClassLibrary/Common/Control/SystemActions.sc	/^	*remove { arg object;$/;"	m
*remove	quarks/cruciallib/Instr/Instr.sc	/^	*remove { arg instr;$/;"	m
*remove	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*remove { View.globalKeyDownAction = nil; }$/;"	m
*remove	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*remove { View.globalKeyDownAction = nil; }$/;"	m
*removeAddr	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*removeAddr { arg addr;$/;"	m
*removeAll	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*removeAll {$/;"	m
*removeAll	SCClassLibrary/Common/Control/SystemActions.sc	/^	*removeAll {$/;"	m
*removeAll	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	*removeAll {$/;"	m
*removeAnnotation	quarks/cruciallib/Players/AbstractPlayer.sc	/^	*removeAnnotation { arg thing; $/;"	m
*removeAt	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*removeAt { arg name, libname = \\global;$/;"	m
*removeAt	SCClassLibrary/Common/Streams/History.sc	/^	*removeAt {|index| current.removeAt(index) }$/;"	m
*removeExcludePath	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*removeExcludePath {|aPath|$/;"	m
*removeForListener	SCClassLibrary/Common/GUI/Model.sc	/^	*removeForListener { |listener|$/;"	m
*removeFuncFrom	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*removeFuncFrom { |what, func|$/;"	m
*removeIncludePath	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*removeIncludePath {|aPath|$/;"	m
*removeLast	SCClassLibrary/Common/Streams/History.sc	/^	*removeLast { current.removeLast }$/;"	m
*removeServer	SCClassLibrary/Common/Control/SystemActions.sc	/^	*removeServer { arg server;$/;"	m
*removeWindow	SCClassLibrary/QtCollider/QWindow.sc	/^  *removeWindow { arg window;$/;"	m
*renderAll	SCClassLibrary/SCDoc/SCDoc.sc	/^    *renderAll {|includeExtensions=true|$/;"	m
*renderChildren	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderChildren {|stream, node|$/;"	m
*renderClassTree	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderClassTree {|stream, cls|$/;"	m
*renderFootNotes	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderFootNotes {|stream|$/;"	m
*renderFooter	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderFooter {|stream, doc|$/;"	m
*renderHeader	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderHeader {|stream, doc|$/;"	m
*renderMethod	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderMethod {|stream, node, cls, icls, css, pfx|$/;"	m
*renderOnStream	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderOnStream {|stream, doc, root|$/;"	m
*renderSubTree	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderSubTree {|stream, node|$/;"	m
*renderTOC	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderTOC {|stream, node|$/;"	m
*renderToFile	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^    *renderToFile {|filename, doc, root|$/;"	m
*renderUndocClass	SCClassLibrary/SCDoc/SCDoc.sc	/^    *renderUndocClass {|doc|$/;"	m
*replace	SCClassLibrary/Common/Control/Node.sc	/^	*replace { arg nodeToReplace, defName, args;$/;"	m
*replace	SCClassLibrary/Common/Control/Node.sc	/^	*replace { arg nodeToReplace; ^this.new(nodeToReplace, \\addReplace) }$/;"	m
*replaceFuncTo	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*replaceFuncTo { |what, func, newFunc|$/;"	m
*replaceZeroesWithSilence	SCClassLibrary/Common/Audio/UGen.sc	/^	*replaceZeroesWithSilence { arg array;$/;"	m
*repos	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*repos { ^this.global.repos }$/;"	m
*request	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*request { |id, command, data|$/;"	m
*reset	quarks/cruciallib/ServerTools/BusPool.sc	/^	*reset {$/;"	m
*resetKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*resetKeycode { arg keycode;$/;"	m
*resetUnicode	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*resetUnicode { arg unicode;$/;"	m
*resourceDir	SCClassLibrary/Platform/Platform.sc	/^	*resourceDir { ^thisProcess.platform.resourceDir }$/;"	m
*respond	SCClassLibrary/Common/Control/OSCresponder.sc	/^	*respond { arg time, addr, msg;$/;"	m
*responderClass	quarks/cruciallib/Control/CCBank.sc	/^	*responderClass { ^CCResponder }	$/;"	m
*responderClass	quarks/cruciallib/Control/CCBank.sc	/^	*responderClass { ^NoteOnResponder }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^bendr }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^ccnumr.select(_.notNil).flat ++ ccr }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^noffr }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^nonr }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^pcr }$/;"	m
*responders	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	*responders { ^touchr }$/;"	m
*restart	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*restart {$/;"	m
*restrictList	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^	*restrictList {$/;"	m
*resumeThreads	SCClassLibrary/Common/Control/Server.sc	/^	*resumeThreads {$/;"	m
*retain	quarks/cruciallib/ServerTools/BusPool.sc	/^	*retain { |bus,client,name|$/;"	m
*rewrite	SCClassLibrary/Common/Streams/History.sc	/^	*rewrite { |path, open = true|$/;"	m
*rms	SCClassLibrary/Common/Audio/FFT2.sc	/^	*rms { arg in, numsamp=40;$/;"	m
*rotate	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*rotate { arg angle=0, x=0, y=0;$/;"	m
*rotate	SCClassLibrary/QtCollider/QPen.sc	/^  *rotate { arg angle=0, x=0, y=0;$/;"	m
*rotateDeg	SCClassLibrary/QtCollider/QPen.sc	/^  *rotateDeg { arg angle=0, x=0, y=0;$/;"	m
*row	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*row { arg obj, align="l", n=1;$/;"	m
*rows	SCClassLibrary/QtCollider/QLayout.sc	/^  *rows { arg ...rows ;$/;"	m
*run	SCClassLibrary/Common/Control/SystemActions.sc	/^	*run { arg server;$/;"	m
*run	SCClassLibrary/Common/Control/SystemActions.sc	/^	*run {$/;"	m
*run	SCClassLibrary/Common/Core/Thread.sc	/^	*run { arg func, stackSize, clock, quant;$/;"	m
*run	SCClassLibrary/Platform/osx/ApplicationStart.sc	/^	*run {$/;"	m
*runEventLoop	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^	*runEventLoop {arg rate=0.002;$/;"	m
*sansSerif	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*sansSerif {|size|$/;"	m
*sansSerif	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*sansSerif {|size|$/;"	m
*sansSerif	SCClassLibrary/QtCollider/QFont.sc	/^  *sansSerif {|size, bold = false, italic = false, usePointSize = false|$/;"	m
*saveCS	SCClassLibrary/Common/Streams/History.sc	/^	*saveCS { |path, forward=false| current.saveCS(path, forward) }$/;"	m
*saveDialog	SCClassLibrary/Common/GUI/PlusGUI/Files/FilePlusGUI.sc	/^	*saveDialog { arg prompt, defaultName, successFunc, cancelFunc;$/;"	m
*savePanel	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^	*savePanel { arg okFunc, cancelFunc;$/;"	m
*savePanel	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^	*savePanel { arg okFunc,cancelFunc;$/;"	m
*savePanel	SCClassLibrary/QtCollider/QDialog.sc	/^  *savePanel { arg okFunc, cancelFunc;$/;"	m
*saveStory	SCClassLibrary/Common/Streams/History.sc	/^	*saveStory { |path| current.saveStory(path) }$/;"	m
*sc	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*sc { arg dummy, freq = 120.0, rs = 1.0, db = 0.0;$/;"	m
*sc	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*sc { arg dummy, freq = 1200.0, bw = 1.0;$/;"	m
*sc	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*sc { arg dummy, freq = 1200.0, rq = 1.0, db = 0.0;$/;"	m
*sc	SCClassLibrary/Common/Audio/BEQSuite.sc	/^	*sc { arg dummy, freq = 1200.0, rq = 1.0;$/;"	m
*scDir	SCClassLibrary/Common/Collections/String.sc	/^	*scDir {$/;"	m
*scVersionPostfix	SCClassLibrary/DefaultLibrary/Main.sc	/^	*scVersionPostfix { _SC_VersionPatch }$/;"	m
*scalar	quarks/cruciallib/Players/Patching.sc	/^	*scalar { arg nodeControl;$/;"	m
*scalar	quarks/cruciallib/Players/Patching.sc	/^	*scalar { arg source, group,bus;$/;"	m
*scale	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*scale { arg x=0, y=0;$/;"	m
*scale	SCClassLibrary/QtCollider/QPen.sc	/^  *scale { arg x=0, y=0;$/;"	m
*sched	SCClassLibrary/Common/Core/Clock.sc	/^	*sched { arg delta, item;$/;"	m
*sched	SCClassLibrary/Common/Core/Clock.sc	/^	*sched { | delta, item | TempoClock.default.sched(delta, item)  }$/;"	m
*sched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*sched { arg beats,function;$/;"	m
*sched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*sched { arg beats,server,bundle,onArrival;$/;"	m
*schedAbs	SCClassLibrary/Common/Core/Clock.sc	/^	*schedAbs { arg time, item;$/;"	m
*schedAbs	SCClassLibrary/Common/Core/Clock.sc	/^	*schedAbs { | beat, item | TempoClock.default.schedAbs(beat, item)  }$/;"	m
*schedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*schedAbs { arg beat,function;$/;"	m
*schedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*schedAbs { arg beat,server,bundle,onArrival;$/;"	m
*scopeResponse	SCClassLibrary/Common/GUI/PlusGUI/Control/scopeResponse.sc	/^	*scopeResponse { |server, freqMode=1, label, args|$/;"	m
*scopeView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*scopeView { ^SCScope }$/;"	m
*scopeView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*scopeView { ^SCScope }$/;"	m
*scopeView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *scopeView { ^QScope }$/;"	m
*screenBounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*screenBounds {$/;"	m
*screenBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*screenBounds {$/;"	m
*screenBounds	SCClassLibrary/QtCollider/QWindow.sc	/^  *screenBounds {$/;"	m
*scrollView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*scrollView { ^SCScrollView }$/;"	m
*scrollView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*scrollView { ^SCScrollView }$/;"	m
*scrollView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *scrollView { ^QScrollView; }$/;"	m
*scsynth	SCClassLibrary/Common/Control/Server.sc	/^	*scsynth {$/;"	m
*search	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*search { |query, ignoreCase| ^global.search(query, ignoreCase) }$/;"	m
*searchGUI	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*searchGUI { ^global.searchGUI }$/;"	m
*seconds	SCClassLibrary/Common/Core/Clock.sc	/^	*seconds { ^thisThread.seconds }$/;"	m
*secs2beats	SCClassLibrary/Common/Core/Clock.sc	/^	*secs2beats { | secs | ^TempoClock.default.secs2beats(secs)	}$/;"	m
*secs2beats	SCClassLibrary/Common/Core/Clock.sc	/^	*secs2beats { | secs | ^secs }$/;"	m
*secs2beats	quarks/cruciallib/Scheduling/Tempo.sc	/^	*secs2beats { arg secs; ^default.secs2beats(secs) }$/;"	m
*seed	SCClassLibrary/Common/Math/Date.sc	/^	*seed {$/;"	m
*selectBySpec	quarks/cruciallib/Instr/Instr.sc	/^	*selectBySpec { arg outSpec;$/;"	m
*selectedBackground	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*selectedBackground {$/;"	m
*selectedBackground_	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*selectedBackground_ {|...args|$/;"	m
*selectedText	SCClassLibrary/QtCollider/QtGUI.sc	/^  *selectedText {$/;"	m
*send	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*send { |server, tryToLoadReconstructedDefs = true|$/;"	m
*sendAllClasses	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*sendAllClasses { |id|$/;"	m
*sendCollection	SCClassLibrary/Common/Control/Buffer.sc	/^	*sendCollection { arg server, collection, numChannels = 1, wait = -1, action;$/;"	m
*sendIntrospection	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*sendIntrospection {$/;"	m
*sendSymbolTable	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*sendSymbolTable { |id|$/;"	m
*serializeMethod	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*serializeMethod { arg method;$/;"	m
*serializeMethodDetailed	SCClassLibrary/scide_scqt/ScIDE.sc	/^	*serializeMethodDetailed { arg method;$/;"	m
*series	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*series { arg size, start=0, step=1;$/;"	m
*serif	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*serif {|size|$/;"	m
*serif	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*serif {|size|$/;"	m
*serif	SCClassLibrary/QtCollider/QFont.sc	/^  *serif {|size, bold = false, italic = false, usePointSize = false|$/;"	m
*server	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*server {$/;"	m
*server_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	*server_ {|aServer|$/;"	m
*set	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*set { arg aScheme;$/;"	m
*set	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*set { arg aScheme;$/;"	m
*set	SCClassLibrary/Common/GUI/GUI.sc	/^	*set { arg aScheme;$/;"	m
*setDefault	SCClassLibrary/QtCollider/QFont.sc	/^  *setDefault { arg font, class;$/;"	m
*setGlobalEventEnabled	SCClassLibrary/QtCollider/QView.sc	/^  *setGlobalEventEnabled { arg event, enabled;$/;"	m
*setMeterAtBeat	SCClassLibrary/Common/Core/Clock.sc	/^	*setMeterAtBeat { | newBeatsPerBar, beats | TempoClock.default.setMeterAtBeat(newBeatsPerBar, beats)	 }$/;"	m
*setShadow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*setShadow { arg offsetPoint=Point(2,2), blur=0.5, color=Color.black;$/;"	m
*setShadow	SCClassLibrary/QtCollider/QPen.sc	/^  *setShadow { arg offsetPoint, blur, color;$/;"	m
*setSkin	SCClassLibrary/Common/GUI/GUI.sc	/^	*setSkin { arg skinName;$/;"	m
*setSmoothing	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*setSmoothing { arg flag = true;$/;"	m
*setSpeechPitch	SCClassLibrary/Common/osx/Speech.sc	/^	*setSpeechPitch { arg chan,pitch;$/;"	m
*setSpeechPitchMod	SCClassLibrary/Common/osx/Speech.sc	/^	*setSpeechPitchMod { arg chan,pitchMod;$/;"	m
*setSpeechRate	SCClassLibrary/Common/osx/Speech.sc	/^	*setSpeechRate { arg chan,rate;$/;"	m
*setSpeechVoice	SCClassLibrary/Common/osx/Speech.sc	/^	*setSpeechVoice { arg chan,voice;$/;"	m
*setSpeechVolume	SCClassLibrary/Common/osx/Speech.sc	/^	*setSpeechVolume { arg chan,volume;$/;"	m
*setTempoAtBeat	SCClassLibrary/Common/Core/Clock.sc	/^	*setTempoAtBeat { | newTempo, beats | TempoClock.default.setTempoAtBeat(newTempo, beats)	 }$/;"	m
*setTempoAtSec	SCClassLibrary/Common/Core/Clock.sc	/^	*setTempoAtSec { | newTempo, secs | TempoClock.default.setTempoAtSec(newTempo, secs)	 }$/;"	m
*setTempoKeys	quarks/cruciallib/Scheduling/TempoGui.sc	/^	*setTempoKeys {$/;"	m
*setTheme	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*setTheme { | themeName |$/;"	m
*shapeNumber	SCClassLibrary/Common/Audio/Env.sc	/^	*shapeNumber { arg shapeName;$/;"	m
*shorten	SCClassLibrary/Common/Streams/History.sc	/^	*shorten { |line, maxLength|$/;"	m
*showLogFile	SCClassLibrary/Common/Streams/History.sc	/^	*showLogFile { Document.open(this.logPath) }$/;"	m
*showLogFolder	SCClassLibrary/Common/Streams/History.sc	/^	*showLogFolder { openOS(logFolder) }$/;"	m
*silent	SCClassLibrary/Common/Collections/Event.sc	/^	*silent { |dur(1.0), inEvent|$/;"	m
*simplifyPath	SCClassLibrary/DefaultLibrary/Main.sc	/^	*simplifyPath { arg path;$/;"	m
*sine	SCClassLibrary/Common/Audio/Env.sc	/^	*sine { arg dur=1.0, level=1.0;$/;"	m
*sineFill	SCClassLibrary/Common/Math/Signal.sc	/^	*sineFill { arg size, amplitudes, phases;$/;"	m
*singleNameAsNames	quarks/cruciallib/deprecated-3.5.sc	/^	*singleNameAsNames { arg singleName;$/;"	m
*sizeHint	SCClassLibrary/QtCollider/QUserView.sc	/^  *sizeHint {$/;"	m
*skew	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*skew { arg x=0, y=0;$/;"	m
*skew	SCClassLibrary/QtCollider/QPen.sc	/^  *skew { arg x=0, y=0;$/;"	m
*slider	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*slider { ^SCSlider }$/;"	m
*slider	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*slider { ^SCSlider }$/;"	m
*slider	SCClassLibrary/QtCollider/QtGUI.sc	/^  *slider { ^QSlider }$/;"	m
*slider2D	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*slider2D { ^SC2DSlider }$/;"	m
*slider2D	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*slider2D { ^SC2DSlider }$/;"	m
*slider2D	SCClassLibrary/QtCollider/QtGUI.sc	/^  *slider2D { ^QSlider2D }$/;"	m
*smoothing_	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	*smoothing_ { arg flag = false;$/;"	m
*smoothing_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	*smoothing_ { arg flag = false;$/;"	m
*smoothing_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*smoothing_ { arg flag = true;$/;"	m
*smoothing_	SCClassLibrary/QtCollider/QFont.sc	/^  *smoothing_ { arg flag;$/;"	m
*smoothing_	SCClassLibrary/QtCollider/QPen.sc	/^  *smoothing_ { arg flag;$/;"	m
*soundFileView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*soundFileView { ^SCSoundFileView }$/;"	m
*soundFileView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*soundFileView { ^SCSoundFileView }$/;"	m
*soundFileView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *soundFileView { ^QSoundFileView }$/;"	m
*speech	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*speech { ^Speech }$/;"	m
*speech	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*speech { ^Speech }$/;"	m
*speech	SCClassLibrary/QtCollider/QtGUI.sc	/^  *speech { ^'Speech'.asClass }$/;"	m
*stackLayout	SCClassLibrary/QtCollider/QtGUI.sc	/^  *stackLayout { ^QStackLayout }$/;"	m
*standardizePath	SCClassLibrary/Common/GUI/Document.sc	/^	*standardizePath { | p |$/;"	m
*standardizePath	quarks/cruciallib/Players/SFP/SFP.sc	/^	*standardizePath { arg path;$/;"	m
*standardizePath	quarks/cruciallib/Sample/Sample.sc	/^	*standardizePath { arg path;$/;"	m
*start	SCClassLibrary/Common/Streams/History.sc	/^	*start {$/;"	m
*startLog	SCClassLibrary/Common/Streams/History.sc	/^	*startLog {$/;"	m
*startup	SCClassLibrary/Common/GUI/Document.sc	/^	*startup {$/;"	m
*startup	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*startup {$/;"	m
*staticText	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*staticText { ^SCStaticText }$/;"	m
*staticText	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*staticText { ^SCStaticText }$/;"	m
*staticText	SCClassLibrary/QtCollider/QtGUI.sc	/^  *staticText { ^QStaticText }$/;"	m
*status	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*status { |name| this.global.status(name) }$/;"	m
*stethoscope	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*stethoscope { ^SCStethoscope }$/;"	m
*stethoscope	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*stethoscope { ^SCStethoscope }$/;"	m
*stethoscope	SCClassLibrary/QtCollider/QtGUI.sc	/^  *stethoscope { ^QStethoscope2 }$/;"	m
*stethoscope1	SCClassLibrary/QtCollider/QtGUI.sc	/^  *stethoscope1 { ^QStethoscope }$/;"	m
*stop	SCClassLibrary/Common/Control/SkipJack.sc	/^	*stop { |name| all.copy.do { |skip| if (skip.name == name) { skip.stop } } }$/;"	m
*stop	SCClassLibrary/Common/Core/Clock.sc	/^	*stop { TempoClock.default.stop	}$/;"	m
*stop	SCClassLibrary/Common/Streams/History.sc	/^	*stop { ^current.stop }$/;"	m
*stop	SCClassLibrary/Common/osx/Speech.sc	/^	*stop { arg chan, when=0;$/;"	m
*stop	SCClassLibrary/QtCollider/QtGUI.sc	/^  *stop { }$/;"	m
*stopAll	SCClassLibrary/Common/Control/SkipJack.sc	/^	*stopAll { all.copy.do(_.stop).clear }$/;"	m
*store	SCClassLibrary/Common/Core/LanguageConfig.sc	/^	*store {|file|$/;"	m
*stream	SCClassLibrary/Common/Streams/History.sc	/^	*stream { arg str, func;$/;"	m
*stream	quarks/cruciallib/Players/Patching.sc	/^	*stream { arg nodeControl;$/;"	m
*stream	quarks/cruciallib/Players/Patching.sc	/^	*stream { arg source,group,bus;$/;"	m
*streamContents	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*streamContents { arg function;$/;"	m
*streamContentsLimit	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	*streamContentsLimit { arg function, limit=2000;$/;"	m
*string	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*string { arg str;$/;"	m
*string	SCClassLibrary/QtCollider/QPen.sc	/^  *string { arg aString;$/;"	m
*stringAtPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stringAtPoint { arg str, point;$/;"	m
*stringAtPoint	SCClassLibrary/QtCollider/QPen.sc	/^  *stringAtPoint { arg string, point, font, color;$/;"	m
*stringBounds	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*stringBounds { |string, font|$/;"	m
*stringBounds	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*stringBounds { |string, font|$/;"	m
*stringBounds	SCClassLibrary/QtCollider/QtGUI.sc	/^  *stringBounds { arg aString, aFont;$/;"	m
*stringCenteredIn	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stringCenteredIn { arg str, inRect;$/;"	m
*stringCenteredIn	SCClassLibrary/QtCollider/QPen.sc	/^  *stringCenteredIn { arg string, rect, font, color;$/;"	m
*stringColor_	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*stringColor_ {|...args|$/;"	m
*stringInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stringInRect { arg str, rect;$/;"	m
*stringInRect	SCClassLibrary/QtCollider/QPen.sc	/^  *stringInRect { arg string, rect, font, color, alignment;$/;"	m
*stringLeftJustIn	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stringLeftJustIn { arg str, inRect;$/;"	m
*stringLeftJustIn	SCClassLibrary/QtCollider/QPen.sc	/^  *stringLeftJustIn { arg string, rect, font, color;$/;"	m
*stringRightJustIn	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stringRightJustIn { arg str, inRect;$/;"	m
*stringRightJustIn	SCClassLibrary/QtCollider/QPen.sc	/^  *stringRightJustIn { arg string, rect, font, color;$/;"	m
*stroke	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*stroke {$/;"	m
*stroke	SCClassLibrary/QtCollider/QPen.sc	/^  *stroke {$/;"	m
*strokeColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*strokeColor_ { arg color;$/;"	m
*strokeColor_	SCClassLibrary/QtCollider/QPen.sc	/^  *strokeColor_ { arg aColor;$/;"	m
*strokeOval	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*strokeOval { arg rect;$/;"	m
*strokeOval	SCClassLibrary/QtCollider/QPen.sc	/^  *strokeOval { arg rect;$/;"	m
*strokeRect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*strokeRect { arg rect;$/;"	m
*strokeRect	SCClassLibrary/QtCollider/QPen.sc	/^  *strokeRect { arg rect;$/;"	m
*style_	SCClassLibrary/QtCollider/QtGUI.sc	/^  *style_ { arg styleName;$/;"	m
*suggestString	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	*suggestString { |key, value|$/;"	m
*supernova	SCClassLibrary/Common/Control/Server.sc	/^	*supernova {$/;"	m
*swing	SCClassLibrary/Common/GUI/GUI.sc	/^	*swing {$/;"	m
*symbolizeName	quarks/cruciallib/Instr/Instr.sc	/^	*symbolizeName { arg name;$/;"	m
*synthDefDir_	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*synthDefDir_ { arg dir;$/;"	m
*sysex	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*sysex { arg func, srcID, argTemplate, dispatcher;$/;"	m
*sysex	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*sysex { arg key, func, srcID, argTemplate, dispatcher;$/;"	m
*sysrt	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*sysrt { arg func, index, srcID, argTemplate, dispatcher;$/;"	m
*sysrt	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*sysrt { arg key, func, index, srcID, argTemplate, dispatcher;$/;"	m
*system	SCClassLibrary/QtCollider/QPalette.sc	/^  *system { ^super.new.prSystem }$/;"	m
*systemAppSupportDir	SCClassLibrary/Platform/Platform.sc	/^	*systemAppSupportDir { ^thisProcess.platform.systemAppSupportDir }$/;"	m
*systemExtensionDir	SCClassLibrary/Platform/Platform.sc	/^	*systemExtensionDir { ^thisProcess.platform.systemExtensionDir }$/;"	m
*tableDict	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*tableDict { arg dict,  hlines=#[], align="l", separator=" ", math=true;$/;"	m
*tableHeader	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*tableHeader { arg n, align="l", separator=" ";$/;"	m
*tabletSlider2D	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*tabletSlider2D { ^SC2DTabletSlider }$/;"	m
*tabletSlider2D	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*tabletSlider2D { ^SC2DTabletSlider }$/;"	m
*tabletSlider2D	SCClassLibrary/QtCollider/QtGUI.sc	/^  *tabletSlider2D { ^this.notImplemented( "TabletSlider2D"); }$/;"	m
*tabletView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*tabletView { ^SCTabletView }$/;"	m
*tabletView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*tabletView { ^SCTabletView }$/;"	m
*tabletView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *tabletView { ^this.notImplemented( "TabletView"); }$/;"	m
*tabletab	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*tabletab { ^"\\t&\\t" }$/;"	m
*tabularFooter	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^	*tabularFooter { ^"\\\\end{tabular}\\n" }$/;"	m
*tail	SCClassLibrary/Common/Control/Node.sc	/^	*tail { arg aGroup, defName, args;$/;"	m
*tail	SCClassLibrary/Common/Control/Node.sc	/^	*tail { arg aGroup; 	^this.new(aGroup, \\addToTail) }$/;"	m
*tailCallOptimize	SCClassLibrary/Common/Core/Kernel.sc	/^	*tailCallOptimize { _GetTailCallOptimize }$/;"	m
*tailCallOptimize_	SCClassLibrary/Common/Core/Kernel.sc	/^	*tailCallOptimize_ { arg bool; _SetTailCallOptimize ^this.primitiveFailed }$/;"	m
*tdeltaTillNext	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*tdeltaTillNext { arg quantize; ^global.tdeltaTillNext(quantize) }$/;"	m
*tempo	SCClassLibrary/Common/Core/Clock.sc	/^	*tempo { ^TempoClock.default.tempo }$/;"	m
*tempo	quarks/cruciallib/Scheduling/Tempo.sc	/^	*tempo { ^default.tempo }$/;"	m
*tempo_	SCClassLibrary/Common/Core/Clock.sc	/^	*tempo_ { | newTempo | TempoClock.default.tempo_(newTempo)  }$/;"	m
*tempo_	quarks/cruciallib/Scheduling/Tempo.sc	/^	*tempo_ { arg tempo;$/;"	m
*test	SCClassLibrary/Common/GUI/Grid.sc	/^	*test { arg horzGrid,vertGrid,bounds;$/;"	m
*tester	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*tester {$/;"	m
*tester	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*tester {$/;"	m
*textField	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*textField { ^SCTextField }$/;"	m
*textField	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*textField { ^SCTextField }$/;"	m
*textField	SCClassLibrary/QtCollider/QtGUI.sc	/^  *textField { ^QTextField }$/;"	m
*textView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*textView { ^SCTextView }$/;"	m
*textView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*textView { ^SCTextView }$/;"	m
*textView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *textView { ^QTextView; }$/;"	m
*theme	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*theme {$/;"	m
*theme_	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	*theme_ { |...args|$/;"	m
*tick	SCClassLibrary/Common/Core/Clock.sc	/^	*tick {$/;"	m
*tileBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	*tileBounds {$/;"	m
*tileBounds	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *tileBounds {$/;"	m
*tileBounds	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *tileBounds {$/;"	m
*time	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*time { ^global.time }$/;"	m
*timeStamp	SCClassLibrary/Common/Streams/History.sc	/^	*timeStamp {$/;"	m
*timeToNextBeat	SCClassLibrary/Common/Core/Clock.sc	/^	*timeToNextBeat { ^0 }$/;"	m
*timeToNextBeat	SCClassLibrary/Common/Core/Clock.sc	/^	*timeToNextBeat { | quant = 1 | ^TempoClock.default.timeToNextBeat(quant)  }$/;"	m
*time_	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*time_ { arg seconds; ^global.time_(seconds) }$/;"	m
*toCocoa	SCClassLibrary/QtCollider/enums.sc	/^  *toCocoa { arg mods;$/;"	m
*tolerant	SCClassLibrary/SCDoc/SCDoc.sc	/^    *tolerant { |string|$/;"	m
*touch	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*touch { arg func, chan, srcID, argTemplate, dispatcher;$/;"	m
*touch	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*touch { arg key, func, chan, srcID, argTemplate, dispatcher;$/;"	m
*tpGuiClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*tpGuiClass { ^PdefGui }$/;"	m
*tpGuiClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*tpGuiClass { ^PdefnGui }$/;"	m
*tpGuiClass	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	*tpGuiClass { ^TdefGui }$/;"	m
*tr	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*tr { arg  name, values, lags;$/;"	m
*trace	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	*trace {|bool = true|$/;"	m
*translate	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*translate { arg x=0, y=0;$/;"	m
*translate	SCClassLibrary/QtCollider/QPen.sc	/^  *translate { arg x=0, y=0;$/;"	m
*translateObject	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	*translateObject {|object|$/;"	m
*tree	SCClassLibrary/Common/Control/OSC.sc	/^	*tree { arg children, argName, argValue;$/;"	m
*tree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	*tree { |sysext = true, userext = true, allowCached = true| ^global.tree(sysext, userext, allowCached) }$/;"	m
*treeView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *treeView { ^QTreeView }$/;"	m
*triangle	SCClassLibrary/Common/Audio/Env.sc	/^	*triangle { arg dur=1.0, level=1.0;$/;"	m
*tsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*tsched { arg seconds,function;$/;"	m
*tsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*tsched { arg seconds,server,bundle,onArrival;$/;"	m
*tschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*tschedAbs { arg time,function;$/;"	m
*tschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*tschedAbs { arg time,server,bundle,onArrival;$/;"	m
*type	SCClassLibrary/Common/Files/File.sc	/^	*type { arg pathName;$/;"	m
*ugenScopes	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	*ugenScopes {$/;"	m
*ugenScopes	SCClassLibrary/QtCollider/QStethoscope.sc	/^  *ugenScopes {$/;"	m
*ugenScopes	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  *ugenScopes {$/;"	m
*unformatTime	SCClassLibrary/Common/Streams/History.sc	/^	*unformatTime { arg str;$/;"	m
*uninstall	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*uninstall { |name| ^this.global.uninstall(name) }$/;"	m
*unpackNotes	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*unpackNotes { arg notes;$/;"	m
*unregister	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	*unregister { arg node;$/;"	m
*unregister	SCClassLibrary/Common/GUI/Model.sc	/^	*unregister { arg object,message,listener;$/;"	m
*unregister	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	*unregister { arg object;$/;"	m
*update	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*update { |quarkName| this.global.update(quarkName) }$/;"	m
*updateDirectory	SCClassLibrary/Common/Quarks/Quarks.sc	/^	*updateDirectory {$/;"	m
*use	SCClassLibrary/Common/Collections/Environment.sc	/^	*use { arg function;$/;"	m
*use	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	*use { arg function;$/;"	m
*use	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*use { arg aScheme, func;$/;"	m
*use	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*use { arg aScheme, func;$/;"	m
*use	SCClassLibrary/Common/Files/File.sc	/^	*use { arg pathName, mode, function;$/;"	m
*use	SCClassLibrary/Common/Files/SoundFile.sc	/^	*use { arg path, function;$/;"	m
*use	SCClassLibrary/Common/GUI/GUI.sc	/^	*use { arg aScheme, func;$/;"	m
*use	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*use { arg function;$/;"	m
*use	SCClassLibrary/QtCollider/QPen.sc	/^  *use { arg aFunction;$/;"	m
*useDoubles_	SCClassLibrary/Common/Control/NetAddr.sc	/^	*useDoubles_ { arg flag = false;$/;"	m
*useID	SCClassLibrary/Common/Control/GeneralHID.sc	/^	*useID { arg id, func;$/;"	m
*useID	SCClassLibrary/Common/Control/ignore/GeneralHID.sc	/^	*useID { arg id, func;$/;"	m
*useID	SCClassLibrary/Common/GUI/GUI.sc	/^	*useID { arg id, func;$/;"	m
*userAppSupportDir	SCClassLibrary/Platform/Platform.sc	/^	*userAppSupportDir { ^thisProcess.platform.userAppSupportDir }$/;"	m
*userConfigDir	SCClassLibrary/Platform/Platform.sc	/^	*userConfigDir { ^thisProcess.platform.userConfigDir }$/;"	m
*userExtensionDir	SCClassLibrary/Platform/Platform.sc	/^	*userExtensionDir { ^thisProcess.platform.userExtensionDir }$/;"	m
*userHomeDir	SCClassLibrary/Platform/Platform.sc	/^	*userHomeDir { ^thisProcess.platform.userHomeDir }$/;"	m
*userView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*userView { ^SCUserView }$/;"	m
*userView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*userView { ^SCUserView }$/;"	m
*userView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *userView { ^QUserView }$/;"	m
*vLayout	SCClassLibrary/QtCollider/QtGUI.sc	/^  *vLayout { ^QVLayout }$/;"	m
*vLayoutView	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*vLayoutView { ^SCVLayoutView }$/;"	m
*vLayoutView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*vLayoutView { ^SCVLayoutView }$/;"	m
*vLayoutView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *vLayoutView { ^QVLayoutView }$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*value { arg obj; ^obj.even }$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*value { arg obj; ^obj.isNil }$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*value { arg obj; ^obj.notNil }$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	*value { arg obj; ^obj.odd }$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	*value { arg view,keycode,modifier,unicode;$/;"	m
*value	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	*value { arg view,char,modifiers,unicode,keycode;$/;"	m
*version	SCClassLibrary/DefaultLibrary/Main.sc	/^	*version {^[this.scVersionMajor, ".", this.scVersionMinor, this.scVersionPostfix].join}$/;"	m
*versionAtLeast	SCClassLibrary/DefaultLibrary/Main.sc	/^	*versionAtLeast { |maj, min|$/;"	m
*versionAtMost	SCClassLibrary/DefaultLibrary/Main.sc	/^	*versionAtMost { |maj, min|$/;"	m
*view	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*view { ^SCView }$/;"	m
*view	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*view { ^SCView }$/;"	m
*view	SCClassLibrary/QtCollider/QtGUI.sc	/^  *view { ^QView }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	*viewClass { ^GUI.compositeView }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	*viewClass { ^this }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	*viewClass { ^SCUserView }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	*viewClass { ^this }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	*viewClass { ^SCNumberBoxOld }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	*viewClass { ^SCEnvelopeView }$/;"	m
*viewClass	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCConstructionView.sc	/^	*viewClass { ^SCUserView }$/;"	m
*viewClass	quarks/cruciallib/Gui/CXLabel.sc	/^	*viewClass { ^GUI.staticText }$/;"	m
*viewPalette	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	*viewPalette {|win|$/;"	m
*viewPalette	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	*viewPalette {|win|$/;"	m
*waitBend	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitBend { arg port, chan, val;$/;"	m
*waitControl	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitControl { arg port, chan, num, val;$/;"	m
*waitNoteOff	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitNoteOff { arg port, chan, note, veloc;$/;"	m
*waitNoteOn	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitNoteOn { arg port, chan, note, veloc;$/;"	m
*waitPoly	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitPoly { arg port, chan, note, veloc;$/;"	m
*waitProgram	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitProgram { arg port, chan, num;$/;"	m
*waitTouch	SCClassLibrary/Common/Control/MIDIOut.sc	/^	*waitTouch { arg port, chan, val;$/;"	m
*watchServer	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	*watchServer { arg server;$/;"	m
*watchServer	quarks/cruciallib/ServerTools/BusPool.sc	/^	*watchServer { |server|$/;"	m
*webView	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*webView {^SCWebView }$/;"	m
*webView	SCClassLibrary/QtCollider/QtGUI.sc	/^  *webView { ^QWebView }$/;"	m
*welchWindow	SCClassLibrary/Common/Math/Signal.sc	/^	*welchWindow { arg size, pad=0;$/;"	m
*when	SCClassLibrary/Platform/Platform.sc	/^	*when {  | features, ifFunction, elseFunction |$/;"	m
*white	SCClassLibrary/Common/Core/Color.sc	/^	*white { ^Color.new(1.0, 1.0, 1.0) }$/;"	m
*width_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^	*width_ { arg width = 1;$/;"	m
*width_	SCClassLibrary/QtCollider/QPen.sc	/^  *width_ { arg width;$/;"	m
*wikiDir_	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	*wikiDir_ { | path |$/;"	m
*window	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^	*window { ^SCWindow }$/;"	m
*window	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^	*window { ^SCWindow }$/;"	m
*window	SCClassLibrary/QtCollider/QtGUI.sc	/^  *window { ^QWindow }$/;"	m
*with	SCClassLibrary/Common/Collections/Array.sc	/^	*with { arg ... args;$/;"	m
*with	SCClassLibrary/Common/Collections/Collection.sc	/^	*with { | ... args |$/;"	m
*with	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	*with { arg items, weights;$/;"	m
*with	quarks/MathLib/classes/various/Matrix.sc	/^	*with { arg array; \/\/ return matrix from 2D array (array of rows)$/;"	m
*withFlatArray	quarks/MathLib/classes/various/Matrix.sc	/^	*withFlatArray { arg rows, cols, array; \/\/ return (rows x cols) - matrix from one slot array$/;"	m
*wrap	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*wrap { arg func, rates, prependArgs;$/;"	m
*wrapOut	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	*wrapOut { arg name, func, rates, prependArgs, outClass=\\Out, fadeTime;$/;"	m
*write	SCClassLibrary/Common/Collections/Library.sc	/^	*write { arg filename;$/;"	m
*write	SCClassLibrary/Common/Control/Score.sc	/^	*write { arg list, oscFilePath, clock;$/;"	m
*writeFromFile	SCClassLibrary/Common/Control/Score.sc	/^	*writeFromFile { arg path, oscFilePath, clock;$/;"	m
*writeMetadata	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*writeMetadata { |metadata, synthdef, path|$/;"	m
*writeMetadataFile	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*writeMetadataFile { |metadata, synthdef, path|$/;"	m
*writeMetadataFile	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	*writeMetadataFile {}$/;"	m
*writeOnce	SCClassLibrary/Common/Audio/SynthDef.sc	/^	*writeOnce { arg name, func, rates, prependArgs, variants, dir, metadata, mdPlugin;$/;"	m
*xblock	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xblock { ^global.xblock }$/;"	m
*xqsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xqsched { arg quantize,function;$/;"	m
*xqsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xqsched { arg quantize,server,bundle,onArrival;$/;"	m
*xsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xsched { arg beats,function;$/;"	m
*xsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xsched { arg beats,server,bundle,onArrival;$/;"	m
*xtsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xtsched { arg seconds,function;$/;"	m
*xtsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xtsched { arg seconds,server,bundle,onArrival;$/;"	m
*xtschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	*xtschedAbs { arg time,function;$/;"	m
*xyc	SCClassLibrary/Common/Audio/Env.sc	/^	*xyc { arg xyc;$/;"	m
*yellow	SCClassLibrary/Common/Core/Color.sc	/^	*yellow { arg val = 1.0, alpha = 1.0; ^Color.new(min(1,val), min(1,val), max(val-1,0), alpha) }$/;"	m
A	quarks/MathLib/classes/various/Bessel.sc	/^A copy of the GNU General Public License is available at$/;"	c
A2K	SCClassLibrary/Common/Audio/Line.sc	/^A2K : PureUGen { \/\/ audio rate to control rate converter. only needed in specific cases$/;"	c
APF	SCClassLibrary/Common/Audio/Filter.sc	/^APF : TwoPole {}$/;"	c
AbstractBusDriver	quarks/cruciallib/Sequencers/BusDriver.sc	/^AbstractBusDriver : SynthlessPlayer {$/;"	c
AbstractConsole	quarks/cruciallib/Gui/SynthConsole.sc	/^AbstractConsole {$/;"	c
AbstractConstraint	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^AbstractConstraint {$/;"	c
AbstractDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^AbstractDispatcher {$/;"	c
AbstractFunction	SCClassLibrary/Common/Core/AbstractFunction.sc	/^AbstractFunction {$/;"	c
AbstractGroup	SCClassLibrary/Common/Control/Node.sc	/^AbstractGroup : Node {$/;"	c
AbstractIn	SCClassLibrary/Common/Audio/InOut.sc	/^AbstractIn : MultiOutUGen {$/;"	c
AbstractMDPlugin	SCClassLibrary/Common/Audio/SynthDesc.sc	/^AbstractMDPlugin {$/;"	c
AbstractMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^AbstractMessageMatcher {$/;"	c
AbstractNodeWatcher	SCClassLibrary/Common/Control/NodeWatcher.sc	/^AbstractNodeWatcher {$/;"	c
AbstractOpPlug	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^AbstractOpPlug : AbstractFunction {$/;"	c
AbstractOut	SCClassLibrary/Common/Audio/InOut.sc	/^AbstractOut : UGen {$/;"	c
AbstractPlayControl	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^AbstractPlayControl {$/;"	c
AbstractPlayer	quarks/cruciallib/Players/AbstractPlayer.sc	/^AbstractPlayer : AbstractFunction  {$/;"	c
AbstractPlayerEffect	quarks/cruciallib/Players/HasSubject.sc	/^AbstractPlayerEffect : HasSubject {$/;"	c
AbstractPlayerGui	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^AbstractPlayerGui : ObjectGui {$/;"	c
AbstractPlayerProxy	quarks/cruciallib/Players/AbstractPlayer.sc	/^AbstractPlayerProxy : AbstractPlayer { \/\/ won't play if source is nil$/;"	c
AbstractResponderFunc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^AbstractResponderFunc {$/;"	c
AbstractSFP	quarks/cruciallib/Players/SFP/SFP.sc	/^AbstractSFP  : AbstractPlayer {$/;"	c
AbstractSFPGui	quarks/cruciallib/Players/SFP/SFPGui.sc	/^AbstractSFPGui : AbstractPlayerGui {$/;"	c
AbstractSample	quarks/cruciallib/Sample/Sample.sc	/^AbstractSample : BufferProxy {$/;"	c
AbstractServerAction	SCClassLibrary/Common/Control/SystemActions.sc	/^AbstractServerAction : AbstractSystemAction {$/;"	c
AbstractSinglePlayerEffect	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^AbstractSinglePlayerEffect : HasSubject {$/;"	c
AbstractSystemAction	SCClassLibrary/Common/Control/SystemActions.sc	/^AbstractSystemAction {$/;"	c
AbstractWrappingDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^AbstractWrappingDispatcher :  AbstractDispatcher {$/;"	c
AccelerometerX	SCClassLibrary/Common/Audio/iphone/iPhoneUGens.sc	/^AccelerometerX : UGen$/;"	c
AccelerometerX	SCClassLibrary/deprecated/deprecated-3.6-categories/iphone/iPhoneUGens.sc	/^AccelerometerX : UGen$/;"	c
AccelerometerY	SCClassLibrary/Common/Audio/iphone/iPhoneUGens.sc	/^AccelerometerY : AccelerometerX {}$/;"	c
AccelerometerY	SCClassLibrary/deprecated/deprecated-3.6-categories/iphone/iPhoneUGens.sc	/^AccelerometerY : AccelerometerX {}$/;"	c
AccelerometerZ	SCClassLibrary/Common/Audio/iphone/iPhoneUGens.sc	/^AccelerometerZ : AccelerometerX {}$/;"	c
AccelerometerZ	SCClassLibrary/deprecated/deprecated-3.6-categories/iphone/iPhoneUGens.sc	/^AccelerometerZ : AccelerometerX {}$/;"	c
ActionButton	quarks/cruciallib/Gui/ActionButton.sc	/^ActionButton : SCButtonAdapter {$/;"	c
AllpassC	SCClassLibrary/Common/Audio/Delays.sc	/^AllpassC : CombN { }$/;"	c
AllpassL	SCClassLibrary/Common/Audio/Delays.sc	/^AllpassL : CombN { }$/;"	c
AllpassN	SCClassLibrary/Common/Audio/Delays.sc	/^AllpassN : CombN { }$/;"	c
AmpComp	SCClassLibrary/Common/Audio/Line.sc	/^AmpComp : PureUGen {$/;"	c
AmpCompA	SCClassLibrary/Common/Audio/Line.sc	/^AmpCompA : AmpComp {$/;"	c
Amplitude	SCClassLibrary/Common/Audio/Compander.sc	/^Amplitude : UGen {$/;"	c
AnnotatedDebugNodeWatcher	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^AnnotatedDebugNodeWatcher : DebugNodeWatcher {$/;"	c
Annotations	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^Annotations {$/;"	c
Any	SCClassLibrary/Common/Core/Finalize.sc	/^Any class that needs finalizable data should create and point to an instance of$/;"	c
Any	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^Any : Every {$/;"	c
AppClock	SCClassLibrary/Common/Core/Clock.sc	/^AppClock : Clock {$/;"	c
ApplicationStart	SCClassLibrary/Platform/osx/ApplicationStart.sc	/^ApplicationStart : StartUp {$/;"	c
Archive	SCClassLibrary/Common/Collections/Library.sc	/^Archive : LibraryBase$/;"	c
ArgNameLabel	quarks/cruciallib/Gui/CXLabel.sc	/^ArgNameLabel : CXAbstractLabel {$/;"	c
Array2D	SCClassLibrary/Common/Collections/Array2D.sc	/^Array2D : Collection {$/;"	c
ArrayBuffer	quarks/cruciallib/Sample/Sample.sc	/^ArrayBuffer : BufferProxy {$/;"	c
ArraySpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^ArraySpec : HasItemSpec {$/;"	c
ArrayedCollection	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^ArrayedCollection : SequenceableCollection {$/;"	c
As	SCClassLibrary/Common/Audio/MoogFF.sc	/^As described in the paper entitled$/;"	c
Association	SCClassLibrary/Common/Collections/Association.sc	/^Association : Magnitude {$/;"	c
AudioControl	SCClassLibrary/Common/Audio/InOut.sc	/^AudioControl : MultiOutUGen {$/;"	c
AudioEventSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^AudioEventSpec : AudioSpec {$/;"	c
AudioIn	SCClassLibrary/Common/Audio/AudioIn.sc	/^AudioIn : SoundIn  {$/;"	c
AudioInPlayer	quarks/cruciallib/Players/AudioInPlayer.sc	/^AudioInPlayer : AbstractPlayer {$/;"	c
AudioPatchIn	quarks/cruciallib/Players/Patching.sc	/^AudioPatchIn : PatchIn {$/;"	c
AudioPatchOut	quarks/cruciallib/Players/Patching.sc	/^AudioPatchOut : ControlPatchOut {$/;"	c
AudioSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^AudioSpec : Spec {$/;"	c
AutoCompClassBrowser	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^AutoCompClassBrowser : AutoCompMethodBrowser {$/;"	c
AutoCompClassSearch	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^AutoCompClassSearch : AutoCompClassBrowser {$/;"	c
AutoCompMethodBrowser	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteBrowsers.sc	/^AutoCompMethodBrowser {$/;"	c
BAllPass	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BAllPass : BEQSuite {$/;"	c
BBandPass	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BBandPass : BEQSuite {$/;"	c
BBandStop	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BBandStop : BEQSuite {$/;"	c
BEQSuite	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BEQSuite : Filter {}$/;"	c
BFormatSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^BFormatSpec : AudioSpec {$/;"	c
BHiPass	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BHiPass : BEQSuite {$/;"	c
BHiPass4	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BHiPass4 {$/;"	c
BHiShelf	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BHiShelf : BEQSuite {$/;"	c
BLowPass	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BLowPass : BEQSuite {$/;"	c
BLowPass4	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BLowPass4 {$/;"	c
BLowShelf	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BLowShelf : BEQSuite {$/;"	c
BPF	SCClassLibrary/Common/Audio/Filter.sc	/^BPF : Filter {$/;"	c
BPZ2	SCClassLibrary/Common/Audio/Filter.sc	/^BPZ2 : LPZ2 {}$/;"	c
BPeakEQ	SCClassLibrary/Common/Audio/BEQSuite.sc	/^BPeakEQ : BEQSuite {$/;"	c
BRF	SCClassLibrary/Common/Audio/Filter.sc	/^BRF : BPF {}$/;"	c
BRZ2	SCClassLibrary/Common/Audio/Filter.sc	/^BRZ2 : LPZ2 {}$/;"	c
Bag	SCClassLibrary/Common/Collections/Bag.sc	/^Bag : Collection {$/;"	c
Balance2	SCClassLibrary/Common/Audio/Pan.sc	/^Balance2 : MultiOutUGen {$/;"	c
Ball	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^Ball : UGen {$/;"	c
BasicNodeWatcher	SCClassLibrary/Common/Control/NodeWatcher.sc	/^BasicNodeWatcher : AbstractNodeWatcher {$/;"	c
BasicOpUGen	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^BasicOpUGen : UGen {$/;"	c
BeatClockPlayer	quarks/cruciallib/Players/BeatClockPlayer.sc	/^BeatClockPlayer : KrPlayer {$/;"	c
BeatClockPlayerGui	quarks/cruciallib/Players/BeatClockPlayerGui.sc	/^BeatClockPlayerGui : AbstractPlayerGui {$/;"	c
BeatSched	quarks/cruciallib/Scheduling/OSCSched.sc	/^BeatSched {$/;"	c
BeatTrack	SCClassLibrary/Common/Audio/MachineListening.sc	/^BeatTrack : MultiOutUGen {$/;"	c
BeatTrack2	SCClassLibrary/Common/Audio/MachineListening.sc	/^BeatTrack2 : MultiOutUGen {$/;"	c
BendResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^BendResponder : TouchResponder {$/;"	c
BiPanB2	SCClassLibrary/Common/Audio/Pan.sc	/^BiPanB2 : MultiOutUGen {$/;"	c
BinaryOpFailureError	SCClassLibrary/Common/Core/Error.sc	/^BinaryOpFailureError : DoesNotUnderstandError {$/;"	c
BinaryOpFunction	SCClassLibrary/Common/Core/AbstractFunction.sc	/^BinaryOpFunction : AbstractFunction {$/;"	c
BinaryOpFunctionProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^BinaryOpFunctionProxy : BinaryOpFunction {$/;"	c
BinaryOpPlug	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^BinaryOpPlug : AbstractOpPlug  {$/;"	c
BinaryOpStream	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^BinaryOpStream : Stream {$/;"	c
BinaryOpUGen	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^BinaryOpUGen : BasicOpUGen {$/;"	c
BinaryOpXStream	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^BinaryOpXStream : Stream {$/;"	c
BlankGridLines	SCClassLibrary/Common/GUI/Grid.sc	/^BlankGridLines : GridLines {$/;"	c
Blip	SCClassLibrary/Common/Audio/FSinOsc.sc	/^Blip : UGen {$/;"	c
Boolean	SCClassLibrary/Common/Core/Boolean.sc	/^Boolean {$/;"	c
BooleanEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^BooleanEditor : NumberEditor {$/;"	c
BooleanEditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^BooleanEditorGui : EditorGui {$/;"	c
BrownNoise	SCClassLibrary/Common/Audio/Noise.sc	/^BrownNoise : WhiteNoise {$/;"	c
BufAllpassC	SCClassLibrary/Common/Audio/Delays.sc	/^BufAllpassC : BufCombN { }$/;"	c
BufAllpassL	SCClassLibrary/Common/Audio/Delays.sc	/^BufAllpassL : BufCombN { }$/;"	c
BufAllpassN	SCClassLibrary/Common/Audio/Delays.sc	/^BufAllpassN : BufCombN { }$/;"	c
BufChannels	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufChannels : BufInfoUGenBase {}$/;"	c
BufCombC	SCClassLibrary/Common/Audio/Delays.sc	/^BufCombC : BufCombN { }$/;"	c
BufCombL	SCClassLibrary/Common/Audio/Delays.sc	/^BufCombL : BufCombN { }$/;"	c
BufCombN	SCClassLibrary/Common/Audio/Delays.sc	/^BufCombN : UGen {$/;"	c
BufDelayC	SCClassLibrary/Common/Audio/Delays.sc	/^BufDelayC : BufDelayN { }$/;"	c
BufDelayL	SCClassLibrary/Common/Audio/Delays.sc	/^BufDelayL : BufDelayN { }$/;"	c
BufDelayN	SCClassLibrary/Common/Audio/Delays.sc	/^BufDelayN : UGen {$/;"	c
BufDur	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufDur : BufInfoUGenBase {}$/;"	c
BufFrames	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufFrames : BufInfoUGenBase {}$/;"	c
BufInfoUGenBase	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufInfoUGenBase : UGen {$/;"	c
BufRateScale	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufRateScale : BufInfoUGenBase {}$/;"	c
BufRd	SCClassLibrary/Common/Audio/BufIO.sc	/^BufRd : MultiOutUGen {$/;"	c
BufSampleRate	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufSampleRate : BufInfoUGenBase {}$/;"	c
BufSamples	SCClassLibrary/Common/Audio/InfoUGens.sc	/^BufSamples : BufInfoUGenBase {}$/;"	c
BufWr	SCClassLibrary/Common/Audio/BufIO.sc	/^BufWr : UGen {$/;"	c
Buffer	SCClassLibrary/Common/Control/Buffer.sc	/^Buffer {$/;"	c
BufferProxy	quarks/cruciallib/Sample/Sample.sc	/^BufferProxy { \/\/ blank space for delays, loopers etc.$/;"	c
BufferProxySpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^BufferProxySpec : NonControlSpec {$/;"	c
BundleNetAddr	SCClassLibrary/Common/Control/NetAddr.sc	/^BundleNetAddr : NetAddr {$/;"	c
Bus	SCClassLibrary/Common/Control/Bus.sc	/^Bus {$/;"	c
BusDriver	quarks/cruciallib/Sequencers/BusDriver.sc	/^BusDriver : AbstractBusDriver {$/;"	c
BusPlug	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^BusPlug : AbstractFunction {$/;"	c
BusPool	quarks/cruciallib/ServerTools/BusPool.sc	/^BusPool {$/;"	c
BusScopeSynth	SCClassLibrary/QtCollider/QStethoscope2.sc	/^BusScopeSynth {$/;"	c
BusSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^BusSpec : NonControlSpec {$/;"	c
Button	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Button : ViewRedirect { *key { ^\\button }}$/;"	c
By	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^By Dan Stowell, 2007$/;"	c
CCBank	quarks/cruciallib/Control/CCBank.sc	/^CCBank {$/;"	c
CCPlayer	quarks/cruciallib/Control/MIDIPlayer.sc	/^CCPlayer : MIDIPlayer {$/;"	c
CCResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^CCResponder : MIDIResponder {$/;"	c
COsc	SCClassLibrary/Common/Audio/Osc.sc	/^COsc : PureUGen {$/;"	c
CSVFileReader	SCClassLibrary/Common/Streams/TabFileReader.sc	/^CSVFileReader : FileReader {$/;"	c
CXAbstractLabel	quarks/cruciallib/Gui/CXLabel.sc	/^CXAbstractLabel : SCViewHolder {$/;"	c
CXLabel	quarks/cruciallib/Gui/CXLabel.sc	/^CXLabel : CXAbstractLabel {$/;"	c
CXMenu	quarks/cruciallib/Gui/CXMenu.sc	/^CXMenu : SCViewHolder { \/\/ multiple actions$/;"	c
CXPatterns	quarks/cxpatterns/CXPatterns.sc	/^CXPatterns {$/;"	c
CXPlayerControl	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^CXPlayerControl : AbstractPlayControl {$/;"	c
CXSynthPlayerControl	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^CXSynthPlayerControl : CXPlayerControl {$/;"	c
Cartesian	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^Cartesian {$/;"	c
CartesianArray	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^CartesianArray : Cartesian$/;"	c
CatchingCCPlayer	quarks/cruciallib/Control/MIDIPlayer.sc	/^CatchingCCPlayer : MIDIPlayer {$/;"	c
Categorisation	SCClassLibrary/deprecated/deprecated-3.6-categories/UGenCategories.sc	/^Categorisation of SC UGens, created by Dan Stowell, 2007.$/;"	c
Changed	SCClassLibrary/Common/Audio/Filter.sc	/^Changed : Filter {$/;"	c
ChaosGen	SCClassLibrary/Common/Audio/Chaos.sc	/^ChaosGen : UGen {$/;"	c
Char	SCClassLibrary/Common/Core/Char.sc	/^Char : Magnitude {$/;"	c
CheckBadValues	SCClassLibrary/Common/Audio/CheckBadValues.sc	/^CheckBadValues : UGen {$/;"	c
CheckBox	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^CheckBox : ViewRedirect { *key { ^\\checkBox }}$/;"	c
Class	SCClassLibrary/Common/Core/Kernel.sc	/^Class {$/;"	c
ClassBrowser	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^ClassBrowser {$/;"	c
ClassInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^ClassInspector : ObjectInspector {$/;"	c
CleanupStream	SCClassLibrary/Common/Streams/Stream.sc	/^CleanupStream : Stream {$/;"	c
ClearBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^ClearBuf : WidthFirstUGen {$/;"	c
ClearList	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^ClearList : List {$/;"	c
ClientOnTrigResponder	quarks/cruciallib/Instr/InstrSynthDef.sc	/^ClientOnTrigResponder {$/;"	c
Clip	SCClassLibrary/Common/Audio/Trig.sc	/^Clip : InRange {}$/;"	c
ClipNoise	SCClassLibrary/Common/Audio/Noise.sc	/^ClipNoise : WhiteNoise {$/;"	c
Clock	SCClassLibrary/Common/Core/Clock.sc	/^Clock {$/;"	c
CmdPeriod	SCClassLibrary/Common/Control/SystemActions.sc	/^CmdPeriod : AbstractSystemAction {$/;"	c
Cocoa	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^Cocoa {$/;"	c
CocoaAction	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^CocoaAction : SCNSObjectAbstract{$/;"	c
CocoaDialog	SCClassLibrary/Common/osx/scide_scapp/Cocoa.sc	/^CocoaDialog {$/;"	c
CocoaDocument	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^CocoaDocument : Document {$/;"	c
CocoaGUI	SCClassLibrary/Platform/osx/scide_scapp/CocoaGUI.sc	/^CocoaGUI {$/;"	c
CocoaMenuItem	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^CocoaMenuItem {$/;"	c
CoinGate	SCClassLibrary/Common/Audio/Noise.sc	/^CoinGate : UGen {$/;"	c
CollStream	SCClassLibrary/Common/Streams/IOStream.sc	/^CollStream : IOStream {$/;"	c
Collection	SCClassLibrary/Common/Collections/Collection.sc	/^Collection {$/;"	c
Color	SCClassLibrary/Common/Core/Color.sc	/^Color {$/;"	c
CombAChorus	quarks/cxaudio/cxaudio.sc	/^CombAChorus { \/\/ different if odd or even voices!$/;"	c
CombC	SCClassLibrary/Common/Audio/Delays.sc	/^CombC : CombN { }$/;"	c
CombL	SCClassLibrary/Common/Audio/Delays.sc	/^CombL : CombN { }$/;"	c
CombN	SCClassLibrary/Common/Audio/Delays.sc	/^CombN : PureUGen {$/;"	c
CombNChorus	quarks/cxaudio/cxaudio.sc	/^CombNChorus { \/\/ different if odd or even voices!$/;"	c
Compander	SCClassLibrary/Common/Audio/Compander.sc	/^Compander : UGen {$/;"	c
CompanderD	SCClassLibrary/Common/Audio/Compander.sc	/^CompanderD : UGen {$/;"	c
Complex	SCClassLibrary/Common/Math/Complex.sc	/^Complex : Number {$/;"	c
CompositeInstr	quarks/cruciallib/Instr/Instr.sc	/^CompositeInstr : PappliedInstr {$/;"	c
CompositeInstrGui	quarks/cruciallib/Instr/InstrGui.sc	/^CompositeInstrGui : InstrGui {$/;"	c
CompositeView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^CompositeView : ViewRedirect { *key { ^\\compositeView }}$/;"	c
Condition	SCClassLibrary/Common/Core/Condition.sc	/^Condition {$/;"	c
Constraint	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^Constraint : AbstractConstraint { \/\/ seemingly pointless but for .not .reject .select etc.$/;"	c
ContiguousBlock	SCClassLibrary/Common/Control/Engine.sc	/^ContiguousBlock {$/;"	c
ContiguousBlockAllocator	SCClassLibrary/Common/Control/Engine.sc	/^ContiguousBlockAllocator {$/;"	c
Control	SCClassLibrary/Common/Audio/InOut.sc	/^Control : MultiOutUGen {$/;"	c
ControlDur	SCClassLibrary/Common/Audio/InfoUGens.sc	/^ControlDur : InfoUGenBase {}$/;"	c
ControlPatchIn	quarks/cruciallib/Players/Patching.sc	/^ControlPatchIn : AudioPatchIn {$/;"	c
ControlPatchOut	quarks/cruciallib/Players/Patching.sc	/^ControlPatchOut : PatchOut { \/\/ you are returned from a .kr play$/;"	c
ControlPlayerSocket	quarks/cruciallib/Players/PlayerSocket.sc	/^ControlPlayerSocket : PlayerSocket {$/;"	c
ControlPrototypes	quarks/cruciallib/Instr/ControlPrototypes.sc	/^ControlPrototypes {$/;"	c
ControlRate	SCClassLibrary/Common/Audio/InfoUGens.sc	/^ControlRate : InfoUGenBase {}$/;"	c
ControlSpec	SCClassLibrary/Common/GUI/ControlModel.sc	/^ControlSpec : Spec {$/;"	c
Convolution	SCClassLibrary/Common/Audio/FFT2.sc	/^Convolution : UGen$/;"	c
Convolution2	SCClassLibrary/Common/Audio/FFT2.sc	/^Convolution2 : UGen$/;"	c
Convolution2L	SCClassLibrary/Common/Audio/FFT2.sc	/^Convolution2L : UGen$/;"	c
Convolution3	SCClassLibrary/Common/Audio/FFT2.sc	/^Convolution3 : UGen$/;"	c
Copyright	quarks/MathLib/classes/various/Bessel.sc	/^Copyright by Stephen L. Moshier$/;"	c
CosineWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^CosineWarp : LinearWarp {$/;"	c
CountLimit	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^CountLimit : SeenBefore {$/;"	c
Crackle	SCClassLibrary/Common/Audio/Noise.sc	/^Crackle : UGen {$/;"	c
Crucial	quarks/cruciallib/Crucial.sc	/^Crucial {$/;"	c
CurveWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^CurveWarp : Warp {$/;"	c
CuspL	SCClassLibrary/Common/Audio/Chaos.sc	/^CuspL : CuspN {}$/;"	c
CuspN	SCClassLibrary/Common/Audio/Chaos.sc	/^CuspN : ChaosGen {$/;"	c
DC	SCClassLibrary/Common/Audio/Line.sc	/^DC : MultiOutUGen {$/;"	c
DUGen	SCClassLibrary/Common/Audio/Demand.sc	/^DUGen : UGen {$/;"	c
Dan	quarks/MathLib/classes/various/extSequenceableCollection.sc	/^Dan Stowell 2009.$/;"	c
Date	SCClassLibrary/Common/Math/Date.sc	/^Date {$/;"	c
DbFaderWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^DbFaderWarp : Warp {$/;"	c
Dbrown	SCClassLibrary/Common/Audio/Demand.sc	/^Dbrown : DUGen {$/;"	c
Dbufrd	SCClassLibrary/Common/Audio/Demand.sc	/^Dbufrd : DUGen {$/;"	c
Dbufwr	SCClassLibrary/Common/Audio/Demand.sc	/^Dbufwr : DUGen {$/;"	c
DebugFrame	SCClassLibrary/Common/Core/Kernel.sc	/^DebugFrame {$/;"	c
DebugNodeWatcher	SCClassLibrary/Common/Control/NodeWatcher.sc	/^DebugNodeWatcher : BasicNodeWatcher {$/;"	c
Decay	SCClassLibrary/Common/Audio/Filter.sc	/^Decay : Filter {$/;"	c
Decay2	SCClassLibrary/Common/Audio/Filter.sc	/^Decay2 : Filter {$/;"	c
DecodeB2	SCClassLibrary/Common/Audio/Pan.sc	/^DecodeB2 : MultiOutUGen {$/;"	c
Decorator	SCClassLibrary/Common/GUI/FlowLayout.sc	/^Decorator {$/;"	c
DegreeToKey	SCClassLibrary/Common/Audio/Osc.sc	/^DegreeToKey : PureUGen {$/;"	c
DelTapRd	SCClassLibrary/Common/Audio/Delays.sc	/^DelTapRd : UGen {$/;"	c
DelTapWr	SCClassLibrary/Common/Audio/Delays.sc	/^DelTapWr : UGen {$/;"	c
Delay1	SCClassLibrary/Common/Audio/Delays.sc	/^Delay1 : PureUGen {$/;"	c
Delay2	SCClassLibrary/Common/Audio/Delays.sc	/^Delay2 : Delay1 { }$/;"	c
DelayC	SCClassLibrary/Common/Audio/Delays.sc	/^DelayC : DelayN { }$/;"	c
DelayL	SCClassLibrary/Common/Audio/Delays.sc	/^DelayL : DelayN { }$/;"	c
DelayN	SCClassLibrary/Common/Audio/Delays.sc	/^DelayN : PureUGen {$/;"	c
DelayProcess	SCClassLibrary/Common/Audio/DelayWr.sc	/^DelayProcess {$/;"	c
DelayT	quarks/cxaudio/cxaudio.sc	/^DelayT {$/;"	c
Demand	SCClassLibrary/Common/Audio/Demand.sc	/^Demand : MultiOutUGen {$/;"	c
DemandEnvGen	SCClassLibrary/Common/Audio/Demand.sc	/^DemandEnvGen : UGen {$/;"	c
DemandSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^DemandSpec : ControlSpec {$/;"	c
DeprecatedError	SCClassLibrary/Common/Core/Error.sc	/^DeprecatedError : MethodError {$/;"	c
DetectIndex	SCClassLibrary/Common/Audio/Osc.sc	/^DetectIndex : Index {$/;"	c
DetectSilence	SCClassLibrary/Common/Audio/Filter.sc	/^DetectSilence : Filter {$/;"	c
Dgeom	SCClassLibrary/Common/Audio/Demand.sc	/^Dgeom : DUGen {$/;"	c
Dialog	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Dialog : GuiRedirect {$/;"	c
Dibrown	SCClassLibrary/Common/Audio/Demand.sc	/^Dibrown : Dbrown {}$/;"	c
Dictionary	SCClassLibrary/Common/Collections/Dictionary.sc	/^Dictionary : Set {$/;"	c
DictionaryEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^DictionaryEditor : Editor {$/;"	c
DictionaryEditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^DictionaryEditorGui : EditorGui {$/;"	c
Directory	SCClassLibrary/Common/Files/Directory.sc	/^Directory {$/;"	c
DirectoryEntry	SCClassLibrary/Common/Files/Directory.sc	/^DirectoryEntry {$/;"	c
DiskIn	SCClassLibrary/Common/Audio/DiskIO.sc	/^DiskIn : MultiOutUGen {$/;"	c
DiskOut	SCClassLibrary/Common/Audio/DiskIO.sc	/^DiskOut : UGen {$/;"	c
Diwhite	SCClassLibrary/Common/Audio/Demand.sc	/^Diwhite : Dwhite {}$/;"	c
Document	SCClassLibrary/Common/GUI/Document.sc	/^Document {$/;"	c
DoesNotUnderstandError	SCClassLibrary/Common/Core/Error.sc	/^DoesNotUnderstandError : MethodError {$/;"	c
Donce	SCClassLibrary/Common/Audio/Demand.sc	/^Donce : DUGen {$/;"	c
Done	SCClassLibrary/Common/Audio/EnvGen.sc	/^Done : UGen {$/;"	c
Dpoll	SCClassLibrary/Common/Audio/Demand.sc	/^Dpoll : DUGen {$/;"	c
DragBoth	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^DragBoth : ViewRedirect { *key { ^\\dragBoth }}$/;"	c
DragSink	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^DragSink : ViewRedirect { *key { ^\\dragSink }}$/;"	c
DragSource	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^DragSource : ViewRedirect { *key { ^\\dragSource }}$/;"	c
Drand	SCClassLibrary/Common/Audio/Demand.sc	/^Drand : ListDUGen {}$/;"	c
DrawGrid	SCClassLibrary/Common/GUI/Grid.sc	/^DrawGrid {$/;"	c
DrawGridX	SCClassLibrary/Common/GUI/Grid.sc	/^DrawGridX {$/;"	c
DrawGridY	SCClassLibrary/Common/GUI/Grid.sc	/^DrawGridY : DrawGridX {$/;"	c
Dreset	SCClassLibrary/Common/Audio/Demand.sc	/^Dreset : DUGen {$/;"	c
Dseq	SCClassLibrary/Common/Audio/Demand.sc	/^Dseq : ListDUGen {}$/;"	c
Dser	SCClassLibrary/Common/Audio/Demand.sc	/^Dser : ListDUGen {}$/;"	c
Dseries	SCClassLibrary/Common/Audio/Demand.sc	/^Dseries : DUGen {$/;"	c
Dshuf	SCClassLibrary/Common/Audio/Demand.sc	/^Dshuf : ListDUGen {}$/;"	c
Dstutter	SCClassLibrary/Common/Audio/Demand.sc	/^Dstutter : DUGen {$/;"	c
Dswitch	SCClassLibrary/Common/Audio/Demand.sc	/^Dswitch : Dswitch1 {}$/;"	c
Dswitch1	SCClassLibrary/Common/Audio/Demand.sc	/^Dswitch1 : DUGen {$/;"	c
Dunique	SCClassLibrary/Common/Audio/Demand.sc	/^Dunique : UGen {$/;"	c
Dust	SCClassLibrary/Common/Audio/Noise.sc	/^Dust : UGen {$/;"	c
Dust2	SCClassLibrary/Common/Audio/Noise.sc	/^Dust2 : UGen {$/;"	c
Duty	SCClassLibrary/Common/Audio/Demand.sc	/^Duty : UGen {$/;"	c
Dwhite	SCClassLibrary/Common/Audio/Demand.sc	/^Dwhite : DUGen {$/;"	c
Dwrand	SCClassLibrary/Common/Audio/Demand.sc	/^Dwrand : DUGen {$/;"	c
Dxrand	SCClassLibrary/Common/Audio/Demand.sc	/^Dxrand : ListDUGen {}$/;"	c
DynKlang	SCClassLibrary/Common/Audio/FSinOsc.sc	/^DynKlang : UGen {$/;"	c
DynKlank	SCClassLibrary/Common/Audio/FSinOsc.sc	/^DynKlank : UGen {$/;"	c
EZControlSpecEditor	SCClassLibrary/Common/GUI/Base/EZSpecEditor.sc	/^EZControlSpecEditor : EZGui {$/;"	c
EZKnob	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^EZKnob : EZGui {$/;"	c
EZListView	SCClassLibrary/Common/GUI/Base/EZListView.sc	/^EZListView : EZLists{$/;"	c
EZLists	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^EZLists : EZGui{  \/\/ an abstract class$/;"	c
EZNumber	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^EZNumber : EZGui{$/;"	c
EZPopUpMenu	SCClassLibrary/Common/GUI/Base/EZPopUpMenu.sc	/^EZPopUpMenu : EZLists{$/;"	c
EZRanger	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^EZRanger : EZGui {$/;"	c
EZScroller	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^EZScroller {$/;"	c
EZSlider	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^EZSlider : EZGui {$/;"	c
EZText	SCClassLibrary/Common/GUI/Base/EZText.sc	/^EZText : EZGui {$/;"	c
Editor	quarks/cruciallib/Editors/NumberEditor.sc	/^Editor {$/;"	c
EditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^EditorGui : ObjectGui {$/;"	c
EffectSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^EffectSpec : AudioSpec {$/;"	c
EmbedOnce	SCClassLibrary/Common/Streams/Stream.sc	/^EmbedOnce : Stream  {$/;"	c
Env	SCClassLibrary/Common/Audio/Env.sc	/^Env {$/;"	c
EnvEditor	quarks/cruciallib/Editors/EnvEditor.sc	/^EnvEditor : Editor {$/;"	c
EnvEditorGui	quarks/cruciallib/Editors/EnvEditorGui.sc	/^EnvEditorGui : ObjectGui {$/;"	c
EnvGate	SCClassLibrary/Common/Control/GraphBuilder.sc	/^EnvGate {$/;"	c
EnvGen	SCClassLibrary/Common/Audio/EnvGen.sc	/^EnvGen : UGen { \/\/ envelope generator$/;"	c
EnvSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^EnvSpec : NonControlSpec {$/;"	c
EnvelopeView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^EnvelopeView : ViewRedirect { *key { ^\\envelopeView }}$/;"	c
EnvelopedPlayer	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^EnvelopedPlayer : AbstractSinglePlayerEffect {$/;"	c
Enveloper2	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^Enveloper2 {$/;"	c
EnvirGui	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^EnvirGui : JITGui {$/;"	c
Environment	SCClassLibrary/Common/Collections/Environment.sc	/^Environment : IdentityDictionary {$/;"	c
EnvironmentRedirect	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^EnvironmentRedirect {$/;"	c
Error	SCClassLibrary/Common/Core/Error.sc	/^Error : Exception {$/;"	c
Euler	quarks/MathLib/classes/Solver/Solver.sc	/^Euler : Solver {$/;"	c
Event	SCClassLibrary/Common/Collections/Event.sc	/^Event : Environment {$/;"	c
EventPatternProxy	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^EventPatternProxy : TaskProxy {$/;"	c
EventStreamCleanup	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^EventStreamCleanup {$/;"	c
EventStreamPlayer	SCClassLibrary/Common/Streams/Stream.sc	/^EventStreamPlayer : PauseStream {$/;"	c
EventStreamSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^EventStreamSpec : NonControlSpec {$/;"	c
EventTypesWithCleanup	SCClassLibrary/Common/Collections/EventTypesWithCleanup.sc	/^EventTypesWithCleanup {$/;"	c
Every	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^Every : AbstractConstraint {$/;"	c
Exception	SCClassLibrary/Common/Core/Error.sc	/^Exception {$/;"	c
ExpRand	SCClassLibrary/Common/Audio/Noise.sc	/^ExpRand : UGen {$/;"	c
ExponentialWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^ExponentialWarp : Warp {$/;"	c
FBSineC	SCClassLibrary/Common/Audio/Chaos.sc	/^FBSineC : FBSineN {}$/;"	c
FBSineL	SCClassLibrary/Common/Audio/Chaos.sc	/^FBSineL : FBSineN {}$/;"	c
FBSineN	SCClassLibrary/Common/Audio/Chaos.sc	/^FBSineN : ChaosGen {$/;"	c
FFT	SCClassLibrary/Common/Audio/FFT.sc	/^FFT : PV_ChainUGen$/;"	c
FFTSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^FFTSpec : Spec {$/;"	c
FFTTrigger	SCClassLibrary/Common/Audio/FFT.sc	/^FFTTrigger : PV_ChainUGen$/;"	c
FOS	SCClassLibrary/Common/Audio/Filter.sc	/^FOS : Filter {$/;"	c
FSinOsc	SCClassLibrary/Common/Audio/FSinOsc.sc	/^FSinOsc : UGen {$/;"	c
FaderWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^FaderWarp : Warp {$/;"	c
False	SCClassLibrary/Common/Core/Boolean.sc	/^False : Boolean  {$/;"	c
Fb	quarks/Feedback/Fb.sc	/^Fb : UGen {$/;"	c
FbC	quarks/Feedback/Fb.sc	/^FbC : Fb {*delayUGen{^DelayC}}$/;"	c
FbK	quarks/Feedback/Fb.sc	/^FbK : UGen {$/;"	c
FbL	quarks/Feedback/Fb.sc	/^FbL : Fb {*delayUGen{^DelayL}}$/;"	c
FbNode	quarks/Feedback/Fb.sc	/^FbNode : UGen {$/;"	c
Fdef	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^Fdef : Maybe {$/;"	c
File	SCClassLibrary/Common/Files/File.sc	/^File : UnixFILE {$/;"	c
FileReader	SCClassLibrary/Common/Streams/TabFileReader.sc	/^FileReader : Stream {$/;"	c
Filter	SCClassLibrary/Common/Audio/Filter.sc	/^Filter : PureUGen {$/;"	c
FilterPattern	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^FilterPattern : Pattern {$/;"	c
Finalization	SCClassLibrary/Common/Core/Finalize.sc	/^Finalization is a way for the C primitives to release resources back to the system.$/;"	c
Finalizer	SCClassLibrary/Common/Core/Finalize.sc	/^Finalizer {$/;"	c
FixNumChannelsPlayer	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^FixNumChannelsPlayer : AbstractSinglePlayerEffect {$/;"	c
Float	SCClassLibrary/Common/Math/Float.sc	/^Float : SimpleNumber {$/;"	c
FlowLayout	SCClassLibrary/Common/GUI/FlowLayout.sc	/^FlowLayout : Decorator {$/;"	c
FlowVar	SCClassLibrary/Common/Core/Condition.sc	/^FlowVar {$/;"	c
FlowView	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^FlowView : SCViewHolder {$/;"	c
FlowViewLayout	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^FlowViewLayout : FlowLayout {$/;"	c
Fold	SCClassLibrary/Common/Audio/Trig.sc	/^Fold : InRange {}$/;"	c
Font	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Font : GuiRedirect  {$/;"	c
For	SCClassLibrary/Common/Streams/NodeEvents.sc	/^For example,$/;"	c
Formant	SCClassLibrary/Common/Audio/Osc.sc	/^Formant : PureUGen {$/;"	c
Formlet	SCClassLibrary/Common/Audio/Filter.sc	/^Formlet : Filter {$/;"	c
Frame	SCClassLibrary/Common/Core/Kernel.sc	/^Frame {$/;"	c
FrameInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^FrameInspector : Inspector {$/;"	c
Free	SCClassLibrary/Common/Audio/EnvGen.sc	/^Free : UGen {$/;"	c
FreeSelf	SCClassLibrary/Common/Audio/EnvGen.sc	/^FreeSelf : UGen {$/;"	c
FreeSelfWhenDone	SCClassLibrary/Common/Audio/EnvGen.sc	/^FreeSelfWhenDone : UGen {$/;"	c
FreeVerb	SCClassLibrary/Common/Audio/FreeVerb.sc	/^FreeVerb : Filter {$/;"	c
FreeVerb2	SCClassLibrary/Common/Audio/FreeVerb.sc	/^FreeVerb2 : MultiOutUGen {$/;"	c
FreqScope	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^FreqScope : GuiRedirect { \/\/ redirects to FreqScopeWindow$/;"	c
FreqScopeView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^FreqScopeView : ViewRedirect { *key { ^\\freqScopeView }} \/\/ redirects to FreqScope$/;"	c
FreqShift	SCClassLibrary/Common/Audio/Hilbert.sc	/^FreqShift : UGen {$/;"	c
From	quarks/MathLib/classes/various/Bessel.sc	/^From Cephes Math Library Release 2.8:  June, 2000$/;"	c
FuncFilterPattern	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^FuncFilterPattern : FilterPattern {$/;"	c
FuncStream	SCClassLibrary/Common/Streams/Stream.sc	/^FuncStream : Stream {$/;"	c
FuncStreamAsRoutine	SCClassLibrary/Common/Streams/FuncStreamAsRoutine.sc	/^FuncStreamAsRoutine : Routine {$/;"	c
Function	SCClassLibrary/Common/Core/Function.sc	/^Function : AbstractFunction {$/;"	c
FunctionDef	SCClassLibrary/Common/Core/Kernel.sc	/^FunctionDef {$/;"	c
FunctionDefInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^FunctionDefInspector : ObjectInspector {$/;"	c
FunctionList	SCClassLibrary/Common/Core/AbstractFunction.sc	/^FunctionList : AbstractFunction {$/;"	c
FuzzyDictionary	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^FuzzyDictionary : IdentityDictionary {$/;"	c
FuzzySet	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^FuzzySet : FuzzyDictionary {$/;"	c
GNU	quarks/MathLib/classes/various/Bessel.sc	/^GNU General Public License for more details.$/;"	c
GUI	SCClassLibrary/Common/GUI/GUI.sc	/^GUI {$/;"	c
GVerb	SCClassLibrary/Common/Audio/GVerb.sc	/^GVerb : MultiOutUGen {$/;"	c
Gate	SCClassLibrary/Common/Audio/Trig.sc	/^Gate : Latch {$/;"	c
GbmanL	SCClassLibrary/Common/Audio/Chaos.sc	/^GbmanL : GbmanN {}$/;"	c
GbmanN	SCClassLibrary/Common/Audio/Chaos.sc	/^GbmanN : ChaosGen {$/;"	c
GenLaguerre	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^GenLaguerre {$/;"	c
Gendy1	SCClassLibrary/Common/Audio/Gendyn.sc	/^Gendy1 : UGen {$/;"	c
Gendy2	SCClassLibrary/Common/Audio/Gendyn.sc	/^Gendy2 : UGen {$/;"	c
Gendy3	SCClassLibrary/Common/Audio/Gendyn.sc	/^Gendy3 : UGen {$/;"	c
Gradient	SCClassLibrary/Common/GUI/Base/Gradient.sc	/^Gradient {$/;"	c
GrainBuf	SCClassLibrary/Common/Audio/GrainUGens.sc	/^GrainBuf : MultiOutUGen {$/;"	c
GrainFM	SCClassLibrary/Common/Audio/GrainUGens.sc	/^GrainFM : MultiOutUGen {$/;"	c
GrainIn	SCClassLibrary/Common/Audio/GrainUGens.sc	/^GrainIn : MultiOutUGen {$/;"	c
GrainSin	SCClassLibrary/Common/Audio/GrainUGens.sc	/^GrainSin : MultiOutUGen {$/;"	c
GrainTap	SCClassLibrary/Common/Audio/Delays.sc	/^GrainTap : MultiOutUGen {$/;"	c
GrainTap	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^GrainTap {$/;"	c
GraphBuilder	SCClassLibrary/Common/Control/GraphBuilder.sc	/^GraphBuilder {$/;"	c
GrayNoise	SCClassLibrary/Common/Audio/Noise.sc	/^GrayNoise : WhiteNoise {$/;"	c
GridLayout	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^GridLayout : GuiRedirect { *key { ^\\gridLayout }}$/;"	c
GridLines	SCClassLibrary/Common/GUI/Grid.sc	/^GridLines {$/;"	c
Group	SCClassLibrary/Common/Control/Node.sc	/^Group : AbstractGroup {$/;"	c
GroupedPlayerMixer	quarks/cruciallib/Players/PlayerMixer.sc	/^GroupedPlayerMixer : PlayerMixer {$/;"	c
GuiRedirect	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^GuiRedirect { \/\/ Abstract$/;"	c
HIDDevice	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^HIDDevice {$/;"	c
HIDDeviceElement	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^HIDDeviceElement {$/;"	c
HLayout	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^HLayout : GuiRedirect { *key { ^\\hLayout }}$/;"	c
HLayoutView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^HLayoutView : ViewRedirect { *key { ^\\hLayoutView }}$/;"	c
HPF	SCClassLibrary/Common/Audio/Filter.sc	/^HPF : LPF {}$/;"	c
HPZ1	SCClassLibrary/Common/Audio/Filter.sc	/^HPZ1 : LPZ1 {}$/;"	c
HPZ2	SCClassLibrary/Common/Audio/Filter.sc	/^HPZ2 : LPZ2 {}$/;"	c
HTML	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^HTML renderer$/;"	c
HardShaper	quarks/cxaudio/cxaudio.sc	/^HardShaper  {$/;"	c
Harmonics	SCClassLibrary/Common/Collections/Harmonics.sc	/^Harmonics {$/;"	c
HasItemSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^HasItemSpec : NonControlSpec {$/;"	c
HasPatchIns	quarks/cruciallib/Instr/Patch.sc	/^HasPatchIns : AbstractPlayer {$/;"	c
HasSubject	quarks/cruciallib/Players/HasSubject.sc	/^HasSubject : AbstractPlayer {$/;"	c
HasSubjectGui	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^HasSubjectGui : AbstractPlayerGui {$/;"	c
Hasher	SCClassLibrary/Common/Audio/Noise.sc	/^Hasher : UGen {$/;"	c
Help	SCClassLibrary/SCDoc/Help.sc	/^Help {$/;"	c
HelpBrowser	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^HelpBrowser {$/;"	c
HelpSearchResult	SCClassLibrary/deprecated/deprecated-3.6-help/HelpSearchResult.sc	/^HelpSearchResult {$/;"	c
HenonC	SCClassLibrary/Common/Audio/Chaos.sc	/^HenonC : HenonN {}$/;"	c
HenonL	SCClassLibrary/Common/Audio/Chaos.sc	/^HenonL : HenonN {}$/;"	c
HenonN	SCClassLibrary/Common/Audio/Chaos.sc	/^HenonN : ChaosGen {$/;"	c
Here	SCClassLibrary/Common/Streams/NodeEvents.sc	/^Here is a simple example of its use:$/;"	c
HiShelf	quarks/cxaudio/RBJeq.sc	/^HiShelf {$/;"	c
Hilbert	SCClassLibrary/Common/Audio/Hilbert.sc	/^Hilbert : MultiOutUGen {$/;"	c
HilbertFIR	SCClassLibrary/Common/Audio/Hilbert.sc	/^HilbertFIR : UGen {$/;"	c
HiliteGradient	SCClassLibrary/Common/GUI/Base/Gradient.sc	/^HiliteGradient {$/;"	c
History	SCClassLibrary/Common/Streams/History.sc	/^History { 		\/\/ adc 2006, Birmingham; rewrite 2007.$/;"	c
HistoryGui	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^HistoryGui {$/;"	c
I	SCClassLibrary/Common/Core/Finalize.sc	/^I have decided to centralize finalization in one class. This makes handling it in$/;"	c
IEnvGen	SCClassLibrary/Common/Audio/IEnvGen.sc	/^IEnvGen : UGen { \/\/ envelope index generator$/;"	c
IFFT	SCClassLibrary/Common/Audio/FFT.sc	/^IFFT : WidthFirstUGen$/;"	c
IODesc	SCClassLibrary/Common/Audio/SynthDesc.sc	/^IODesc {$/;"	c
IOStream	SCClassLibrary/Common/Streams/IOStream.sc	/^IOStream : Stream {$/;"	c
IPhoneGUI	SCClassLibrary/Platform/iphone/iPhoneGUI.sc	/^IPhoneGUI {$/;"	c
IPhonePlatform	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^IPhonePlatform : UnixPlatform$/;"	c
IRand	SCClassLibrary/Common/Audio/Noise.sc	/^IRand : UGen {$/;"	c
IdentityBag	SCClassLibrary/Common/Collections/Bag.sc	/^IdentityBag : Bag$/;"	c
IdentityDictionary	SCClassLibrary/Common/Collections/Dictionary.sc	/^IdentityDictionary : Dictionary {$/;"	c
IdentityMarkovSet	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^IdentityMarkovSet : MarkovSet {$/;"	c
IdentitySet	SCClassLibrary/Common/Collections/Set.sc	/^IdentitySet : Set {$/;"	c
IdentityWeighBag	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^IdentityWeighBag : WeighBag {$/;"	c
Image	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Image : ViewRedirect { *key { ^\\image }}$/;"	c
ImmutableError	SCClassLibrary/Common/Core/Error.sc	/^ImmutableError : MethodError {$/;"	c
Impulsar	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^Impulsar {  \/\/ see also Trig$/;"	c
Impulse	SCClassLibrary/Common/Audio/Osc.sc	/^Impulse : PureUGen {$/;"	c
In	SCClassLibrary/Common/Audio/InOut.sc	/^In : AbstractIn {$/;"	c
InBus	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^InBus {$/;"	c
InFeedback	SCClassLibrary/Common/Audio/InOut.sc	/^InFeedback : AbstractIn {$/;"	c
InRange	SCClassLibrary/Common/Audio/Trig.sc	/^InRange : UGen$/;"	c
InRect	SCClassLibrary/Common/Audio/Trig.sc	/^InRect : UGen$/;"	c
InTrig	SCClassLibrary/Common/Audio/InOut.sc	/^InTrig : AbstractIn {$/;"	c
Index	SCClassLibrary/Common/Audio/Osc.sc	/^Index : PureUGen {$/;"	c
IndexInBetween	SCClassLibrary/Common/Audio/Osc.sc	/^IndexInBetween : Index {$/;"	c
IndexL	SCClassLibrary/Common/Audio/Osc.sc	/^IndexL : Index {$/;"	c
InfoUGenBase	SCClassLibrary/Common/Audio/InfoUGens.sc	/^InfoUGenBase : UGen {$/;"	c
Inspector	SCClassLibrary/Common/GUI/Inspector.sc	/^Inspector {$/;"	c
Instr	quarks/cruciallib/Instr/Instr.sc	/^Instr  {$/;"	c
InstrAt	quarks/cruciallib/Instr/Instr.sc	/^InstrAt {$/;"	c
InstrBrowser	quarks/cruciallib/Instr/InstrBrowser.sc	/^InstrBrowser {$/;"	c
InstrGateSpawner	quarks/cruciallib/Instr/InstrSpawner.sc	/^InstrGateSpawner : InstrSpawner {$/;"	c
InstrGui	quarks/cruciallib/Instr/InstrGui.sc	/^InstrGui : ObjectGui {$/;"	c
InstrNameSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^InstrNameSpec : HasItemSpec {$/;"	c
InstrSpawner	quarks/cruciallib/Instr/InstrSpawner.sc	/^InstrSpawner : Patch {$/;"	c
InstrSpawnerGui	quarks/cruciallib/Instr/PatchGui.sc	/^InstrSpawnerGui : PatchGui {$/;"	c
InstrSynthDef	quarks/cruciallib/Instr/InstrSynthDef.sc	/^InstrSynthDef : SynthDef {$/;"	c
Integer	SCClassLibrary/Common/Math/Integer.sc	/^Integer : SimpleNumber {$/;"	c
IntegerEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^IntegerEditor : NumberEditor {$/;"	c
Integrator	SCClassLibrary/Common/Audio/Filter.sc	/^Integrator : Filter {$/;"	c
Interface	quarks/cruciallib/Instr/Interface.sc	/^Interface : AbstractPlayerProxy {$/;"	c
InterfaceDef	quarks/cruciallib/Instr/Instr.sc	/^InterfaceDef : Instr {$/;"	c
InterfaceGui	quarks/cruciallib/Instr/PatchGui.sc	/^InterfaceGui : AbstractPlayerGui {$/;"	c
InterplChord	SCClassLibrary/Common/Audio/InterplEnv.sc	/^InterplChord {$/;"	c
InterplEnv	SCClassLibrary/Common/Audio/InterplEnv.sc	/^InterplEnv {$/;"	c
InterplPairs	SCClassLibrary/Common/Audio/InterplEnv.sc	/^InterplPairs {$/;"	c
InterplXYC	SCClassLibrary/Common/Audio/InterplEnv.sc	/^InterplXYC {$/;"	c
Interpreter	SCClassLibrary/Common/Core/Kernel.sc	/^Interpreter {$/;"	c
Interval	SCClassLibrary/Common/Collections/Interval.sc	/^Interval : Collection {$/;"	c
IrNumberEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^IrNumberEditor : NumberEditor {$/;"	c
IsEven	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^IsEven : AbstractConstraint {$/;"	c
IsIn	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^IsIn : AbstractConstraint { \/\/ Includes$/;"	c
IsNil	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^IsNil : AbstractConstraint {$/;"	c
IsNotIn	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^IsNotIn : IsIn { \/\/ IncludesNot$/;"	c
IsOdd	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^IsOdd : AbstractConstraint {$/;"	c
It	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^It is also an OSCMultiResponder, so it distributes a command to$/;"	c
JITGui	SCClassLibrary/JITLib/GUI/JITGui.sc	/^JITGui {$/;"	c
Julian	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^Julian Rohrhuber 2003 $/;"	c
K2A	SCClassLibrary/Common/Audio/Line.sc	/^K2A : PureUGen { \/\/ control rate to audio rate converter$/;"	c
KDRMaskTester	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^KDRMaskTester : SimpleKDRUnit {$/;"	c
KeyCodeResponder	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^KeyCodeResponder {$/;"	c
KeyCodeResponderGui	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponderGui.sc	/^KeyCodeResponderGui : ObjectGui {$/;"	c
KeyCodeResponderStack	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^KeyCodeResponderStack {$/;"	c
KeyCodeResponderStackGui	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponderGui.sc	/^KeyCodeResponderStackGui : KeyCodeResponderGui {$/;"	c
KeyDownResponderGroup	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^KeyDownResponderGroup {$/;"	c
KeyResponder	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^KeyResponder : KeyCodeResponder {$/;"	c
KeyState	SCClassLibrary/Common/Audio/MacUGens.sc	/^KeyState : UGen {$/;"	c
KeyTrack	SCClassLibrary/Common/Audio/MachineListening.sc	/^KeyTrack : UGen {$/;"	c
Klang	SCClassLibrary/Common/Audio/FSinOsc.sc	/^Klang : UGen {$/;"	c
Klank	SCClassLibrary/Common/Audio/FSinOsc.sc	/^Klank : UGen {$/;"	c
Knob	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Knob : ViewRedirect  { *key { ^\\knob }}$/;"	c
KrNumberEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^KrNumberEditor : NumberEditor {$/;"	c
KrNumberEditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^KrNumberEditorGui : NumberEditorGui {$/;"	c
KrPlayer	quarks/cruciallib/Players/KrPlayer.sc	/^KrPlayer : AbstractPlayer {$/;"	c
KrPlayerGui	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^KrPlayerGui : AbstractPlayerGui {}$/;"	c
LFClipNoise	SCClassLibrary/Common/Audio/Noise.sc	/^LFClipNoise : LFNoise0 {$/;"	c
LFCub	SCClassLibrary/Common/Audio/Osc.sc	/^LFCub : LFSaw$/;"	c
LFDClipNoise	SCClassLibrary/Common/Audio/Noise.sc	/^LFDClipNoise : LFNoise0 {$/;"	c
LFDNoise0	SCClassLibrary/Common/Audio/Noise.sc	/^LFDNoise0 : LFNoise0 {$/;"	c
LFDNoise1	SCClassLibrary/Common/Audio/Noise.sc	/^LFDNoise1 : LFNoise0 {$/;"	c
LFDNoise3	SCClassLibrary/Common/Audio/Noise.sc	/^LFDNoise3 : LFNoise0 {$/;"	c
LFGauss	SCClassLibrary/Common/Audio/Osc.sc	/^LFGauss : UGen {$/;"	c
LFNoise0	SCClassLibrary/Common/Audio/Noise.sc	/^LFNoise0 : UGen {$/;"	c
LFNoise1	SCClassLibrary/Common/Audio/Noise.sc	/^LFNoise1 : LFNoise0 {$/;"	c
LFNoise2	SCClassLibrary/Common/Audio/Noise.sc	/^LFNoise2 : LFNoise0 {$/;"	c
LFPar	SCClassLibrary/Common/Audio/Osc.sc	/^LFPar : LFSaw$/;"	c
LFPulse	SCClassLibrary/Common/Audio/Osc.sc	/^LFPulse : PureUGen {$/;"	c
LFSaw	SCClassLibrary/Common/Audio/Osc.sc	/^LFSaw : PureUGen {$/;"	c
LFTri	SCClassLibrary/Common/Audio/Osc.sc	/^LFTri : LFSaw$/;"	c
LID	SCClassLibrary/Platform/linux/LID.sc	/^LID {$/;"	c
LIDAbsInfo	SCClassLibrary/Platform/linux/LID.sc	/^LIDAbsInfo {$/;"	c
LIDAbsSlot	SCClassLibrary/Platform/linux/LID.sc	/^LIDAbsSlot : LIDSlot {$/;"	c
LIDInfo	SCClassLibrary/Platform/linux/LID.sc	/^LIDInfo {$/;"	c
LIDKeySlot	SCClassLibrary/Platform/linux/LID.sc	/^LIDKeySlot : LIDSlot {$/;"	c
LIDLedSlot	SCClassLibrary/Platform/linux/LID.sc	/^LIDLedSlot : LIDSlot {$/;"	c
LIDRelSlot	SCClassLibrary/Platform/linux/LID.sc	/^LIDRelSlot : LIDSlot {$/;"	c
LIDSlot	SCClassLibrary/Platform/linux/LID.sc	/^LIDSlot {$/;"	c
LPF	SCClassLibrary/Common/Audio/Filter.sc	/^LPF : Filter {$/;"	c
LPZ1	SCClassLibrary/Common/Audio/Filter.sc	/^LPZ1 : Filter {$/;"	c
LPZ2	SCClassLibrary/Common/Audio/Filter.sc	/^LPZ2 : Filter {$/;"	c
LaTeX	quarks/MathLib/classes/LaTeX/LaTeX.sc	/^LaTeX {$/;"	c
Lag	SCClassLibrary/Common/Audio/Filter.sc	/^Lag : Filter {$/;"	c
Lag2	SCClassLibrary/Common/Audio/Filter.sc	/^Lag2 : Lag {}$/;"	c
Lag2UD	SCClassLibrary/Common/Audio/Filter.sc	/^Lag2UD : LagUD {}$/;"	c
Lag3	SCClassLibrary/Common/Audio/Filter.sc	/^Lag3 : Lag {}$/;"	c
Lag3UD	SCClassLibrary/Common/Audio/Filter.sc	/^Lag3UD : LagUD {}$/;"	c
LagControl	SCClassLibrary/Common/Audio/InOut.sc	/^LagControl : Control {$/;"	c
LagIn	SCClassLibrary/Common/Audio/InOut.sc	/^LagIn : AbstractIn {$/;"	c
LagUD	SCClassLibrary/Common/Audio/Filter.sc	/^LagUD : Filter {$/;"	c
LanguageConfig	SCClassLibrary/Common/Core/LanguageConfig.sc	/^LanguageConfig {$/;"	c
LastValue	SCClassLibrary/Common/Audio/Trig.sc	/^LastValue : UGen {$/;"	c
Latch	SCClassLibrary/Common/Audio/Trig.sc	/^Latch : UGen {$/;"	c
LatoocarfianC	SCClassLibrary/Common/Audio/Chaos.sc	/^LatoocarfianC : LatoocarfianN {}$/;"	c
LatoocarfianL	SCClassLibrary/Common/Audio/Chaos.sc	/^LatoocarfianL : LatoocarfianN {}$/;"	c
LatoocarfianN	SCClassLibrary/Common/Audio/Chaos.sc	/^LatoocarfianN : ChaosGen {$/;"	c
LazyEnvir	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^LazyEnvir : EnvironmentRedirect {$/;"	c
LeakDC	SCClassLibrary/Common/Audio/Filter.sc	/^LeakDC : Filter {$/;"	c
LeastChange	SCClassLibrary/Common/Audio/Trig.sc	/^LeastChange : MostChange {}$/;"	c
LevelIndicator	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^LevelIndicator : ViewRedirect  { *key { ^\\levelIndicator }}$/;"	c
Library	SCClassLibrary/Common/Collections/Library.sc	/^Library : LibraryBase$/;"	c
LibraryBase	SCClassLibrary/Common/Collections/Library.sc	/^LibraryBase : MultiLevelIdentityDictionary$/;"	c
LimitedWriteStream	SCClassLibrary/Common/Streams/IOStream.sc	/^LimitedWriteStream : CollStream {$/;"	c
Limiter	SCClassLibrary/Common/Audio/Compander.sc	/^Limiter : Normalizer {}$/;"	c
LinCong	SCClassLibrary/Common/Audio/Noise.sc	/^LinCong : UGen {$/;"	c
LinCongC	SCClassLibrary/Common/Audio/Chaos.sc	/^LinCongC : LinCongN {}$/;"	c
LinCongL	SCClassLibrary/Common/Audio/Chaos.sc	/^LinCongL : LinCongN {}$/;"	c
LinCongN	SCClassLibrary/Common/Audio/Chaos.sc	/^LinCongN : ChaosGen {$/;"	c
LinExp	SCClassLibrary/Common/Audio/Line.sc	/^LinExp : PureUGen {$/;"	c
LinLin	SCClassLibrary/Common/Audio/Line.sc	/^LinLin {$/;"	c
LinPan2	SCClassLibrary/Common/Audio/Pan.sc	/^LinPan2 : Pan2 {}$/;"	c
LinRand	SCClassLibrary/Common/Audio/Noise.sc	/^LinRand : UGen {$/;"	c
LinSelectX	SCClassLibrary/Common/Audio/Osc.sc	/^LinSelectX : SelectX {$/;"	c
LinXFade2	SCClassLibrary/Common/Audio/Pan.sc	/^LinXFade2 : UGen {$/;"	c
Line	SCClassLibrary/Common/Audio/Line.sc	/^Line : UGen {$/;"	c
LinearWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^LinearWarp : Warp {$/;"	c
Linen	SCClassLibrary/Common/Audio/EnvGen.sc	/^Linen : UGen {$/;"	c
LinkedList	SCClassLibrary/Common/Collections/LinkedList.sc	/^LinkedList : SequenceableCollection {$/;"	c
LinkedListNode	SCClassLibrary/Common/Collections/LinkedList.sc	/^LinkedListNode {$/;"	c
LinuxPlatform	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^LinuxPlatform : UnixPlatform$/;"	c
List	SCClassLibrary/Common/Collections/List.sc	/^List : SequenceableCollection {$/;"	c
ListDUGen	SCClassLibrary/Common/Audio/Demand.sc	/^ListDUGen : DUGen {$/;"	c
ListPattern	SCClassLibrary/Common/Streams/ListPatterns.sc	/^ListPattern : Pattern {$/;"	c
ListView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^ListView : ViewRedirect { *key { ^\\listView }}$/;"	c
LocalBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^LocalBuf : WidthFirstUGen {$/;"	c
LocalIn	SCClassLibrary/Common/Audio/InOut.sc	/^LocalIn : AbstractIn {$/;"	c
LocalOut	SCClassLibrary/Common/Audio/InOut.sc	/^LocalOut : AbstractOut {$/;"	c
Logistic	SCClassLibrary/Common/Audio/Noise.sc	/^Logistic : UGen {$/;"	c
LookupMarkovSet	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^LookupMarkovSet : IdentityMarkovSet {$/;"	c
LorenzL	SCClassLibrary/Common/Audio/Chaos.sc	/^LorenzL : ChaosGen {$/;"	c
Loudness	SCClassLibrary/Common/Audio/MachineListening.sc	/^Loudness : UGen {$/;"	c
MERCHANTABILITY	quarks/MathLib/classes/various/Bessel.sc	/^MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the$/;"	c
MFCC	SCClassLibrary/Common/Audio/MachineListening.sc	/^MFCC : MultiOutUGen {$/;"	c
MIDIClient	SCClassLibrary/Common/Control/MIDIOut.sc	/^MIDIClient {$/;"	c
MIDIClockOut	quarks/cruciallib/Control/MIDIClock.sc	/^MIDIClockOut {$/;"	c
MIDIEndPoint	SCClassLibrary/Common/Control/MIDIOut.sc	/^MIDIEndPoint {$/;"	c
MIDIEvent	SCClassLibrary/Common/Control/MIDIOut.sc	/^MIDIEvent {$/;"	c
MIDIFreqPlayer	quarks/cruciallib/Control/MIDIPlayer.sc	/^MIDIFreqPlayer : MIDIHoldsNotes {$/;"	c
MIDIFunc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFunc : AbstractResponderFunc {$/;"	c
MIDIFuncBothCAMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncBothCAMessageMatcher : AbstractMessageMatcher {$/;"	c
MIDIFuncBothMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncBothMessageMatcher : AbstractMessageMatcher {$/;"	c
MIDIFuncChanArrayMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncChanArrayMessageMatcher : AbstractMessageMatcher {$/;"	c
MIDIFuncChanMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncChanMessageMatcher : AbstractMessageMatcher {$/;"	c
MIDIFuncSrcMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncSrcMessageMatcher : AbstractMessageMatcher {$/;"	c
MIDIFuncSrcMessageMatcherNV	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIFuncSrcMessageMatcherNV : MIDIFuncSrcMessageMatcher {$/;"	c
MIDIGatePlayer	quarks/cruciallib/Control/MIDIPlayer.sc	/^MIDIGatePlayer : MIDIHoldsNotes {$/;"	c
MIDIHoldsNotes	quarks/cruciallib/Control/MIDIPlayer.sc	/^MIDIHoldsNotes : MIDIPlayer {$/;"	c
MIDIIn	SCClassLibrary/Common/Control/MIDIOut.sc	/^MIDIIn {$/;"	c
MIDIMessageDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIMessageDispatcher : AbstractWrappingDispatcher {$/;"	c
MIDIMessageDispatcherNV	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIMessageDispatcherNV : MIDIMessageDispatcher {$/;"	c
MIDIOut	SCClassLibrary/Common/Control/MIDIOut.sc	/^MIDIOut {$/;"	c
MIDIPlayer	quarks/cruciallib/Control/MIDIPlayer.sc	/^MIDIPlayer : SynthlessPlayer { \/\/ InterfacePlayer, Control$/;"	c
MIDIResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^MIDIResponder {$/;"	c
MIDISysexDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDISysexDispatcher : MIDIMessageDispatcher {$/;"	c
MIDIValueMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIValueMatcher : AbstractMessageMatcher {$/;"	c
MIDIdef	SCClassLibrary/Common/Control/ResponseDefs.sc	/^MIDIdef : MIDIFunc {$/;"	c
MXHID	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHID {$/;"	c
MXHIDAbsInfo	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDAbsInfo {$/;"	c
MXHIDAbsSlot	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDAbsSlot : MXHIDSlot {$/;"	c
MXHIDKeySlot	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDKeySlot : MXHIDSlot {$/;"	c
MXHIDLedSlot	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDLedSlot : MXHIDSlot {$/;"	c
MXHIDRelSlot	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDRelSlot : MXHIDSlot {$/;"	c
MXHIDSlot	SCClassLibrary/Platform/osx/MXHID.sc	/^MXHIDSlot {$/;"	c
Magical	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^Magical UGens for treating FFT data as demand-rate streams.$/;"	c
Magnitude	SCClassLibrary/Common/Math/Magnitude.sc	/^Magnitude : Object {$/;"	c
Main	SCClassLibrary/DefaultLibrary/Main.sc	/^Main : Process {$/;"	c
MantissaMask	SCClassLibrary/Common/Audio/Noise.sc	/^MantissaMask : UGen {$/;"	c
MarkovSet	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^MarkovSet  {$/;"	c
MarkovSetN	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^MarkovSetN : LookupMarkovSet {$/;"	c
MaxLocalBufs	SCClassLibrary/Common/Audio/BufIO.sc	/^MaxLocalBufs : UGen {$/;"	c
Maybe	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^Maybe : Ref {$/;"	c
Median	SCClassLibrary/Common/Audio/Filter.sc	/^Median : Filter {$/;"	c
Message	SCClassLibrary/Common/Core/Message.sc	/^Message {$/;"	c
Method	SCClassLibrary/Common/Core/Kernel.sc	/^Method : FunctionDef {$/;"	c
MethodError	SCClassLibrary/Common/Core/Error.sc	/^MethodError : Error {$/;"	c
MethodInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^MethodInspector : ObjectInspector {$/;"	c
MethodOverride	SCClassLibrary/DefaultLibrary/Main.sc	/^MethodOverride {$/;"	c
MethodQuote	SCClassLibrary/Common/Core/Message.sc	/^MethodQuote {$/;"	c
MidEQ	SCClassLibrary/Common/Audio/Filter.sc	/^MidEQ : Filter {$/;"	c
Mix	SCClassLibrary/Common/Audio/Mix.sc	/^Mix {$/;"	c
MixedBundle	SCClassLibrary/Common/Control/OSCBundle.sc	/^MixedBundle : OSCBundle {$/;"	c
ModalDialog	quarks/cruciallib/Gui/Dialogs.sc	/^ModalDialog { \/\/ hit ok or cancel$/;"	c
Module	SCClassLibrary/Common/Control/Module.sc	/^Module {$/;"	c
Monitor	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^Monitor {$/;"	c
MonitorGui	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^MonitorGui : JITGui {$/;"	c
Mono	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^Mono {$/;"	c
MonoAudioIn	quarks/cruciallib/Players/AudioInPlayer.sc	/^MonoAudioIn : AbstractPlayer {$/;"	c
MoogFF	SCClassLibrary/Common/Audio/MoogFF.sc	/^MoogFF : Filter {$/;"	c
MostChange	SCClassLibrary/Common/Audio/Trig.sc	/^MostChange : UGen$/;"	c
MouseButton	SCClassLibrary/Common/Audio/MacUGens.sc	/^MouseButton : UGen {$/;"	c
MouseX	SCClassLibrary/Common/Audio/MacUGens.sc	/^MouseX : UGen$/;"	c
MouseY	SCClassLibrary/Common/Audio/MacUGens.sc	/^MouseY : MouseX {}$/;"	c
MovieView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^MovieView : ViewRedirect { *key { ^\\movieView }}$/;"	c
MulAdd	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^MulAdd : UGen {$/;"	c
MultiChanRecorder	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^MultiChanRecorder {$/;"	c
MultiLevelIdentityDictionary	SCClassLibrary/Common/Collections/Library.sc	/^MultiLevelIdentityDictionary : Collection$/;"	c
MultiOutUGen	SCClassLibrary/Common/Audio/UGen.sc	/^MultiOutUGen : UGen {$/;"	c
MultiPageLayout	quarks/cruciallib/deprecated-3.5.sc	/^MultiPageLayout : PageLayout { $/;"	c
MultiPitchShift	quarks/cxaudio/cxaudio.sc	/^MultiPitchShift { \/\/wrong!$/;"	c
MultiSliderView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^MultiSliderView : ViewRedirect { *key { ^\\multiSliderView }}$/;"	c
MultiTap	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^MultiTap  {$/;"	c
MultiTrackAudioSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^MultiTrackAudioSpec : AudioSpec {$/;"	c
MultiTrackPlayer	quarks/cruciallib/Players/AbstractPlayer.sc	/^MultiTrackPlayer : MultiplePlayers { \/\/ abstract$/;"	c
MultiplePlayers	quarks/cruciallib/Players/AbstractPlayer.sc	/^MultiplePlayers : AbstractPlayer { \/\/ abstract$/;"	c
MustBeBooleanError	SCClassLibrary/Common/Core/Error.sc	/^MustBeBooleanError : MethodError {$/;"	c
NAryOpFunction	SCClassLibrary/Common/Core/AbstractFunction.sc	/^NAryOpFunction : AbstractFunction {$/;"	c
NAryOpFunctionProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^NAryOpFunctionProxy : NAryOpFunction {$/;"	c
NAryOpStream	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^NAryOpStream : Stream {$/;"	c
NAryValueProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^NAryValueProxy : NAryOpFunctionProxy {$/;"	c
NRand	SCClassLibrary/Common/Audio/Noise.sc	/^NRand : UGen {$/;"	c
NSBundle	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^NSBundle : SCNSObject {$/;"	c
NSTypeEncoding	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^NSTypeEncoding {$/;"	c
NamedControl	SCClassLibrary/Common/Control/GraphBuilder.sc	/^NamedControl {$/;"	c
NamedIntegersSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^NamedIntegersSpec : ControlSpec {$/;"	c
Ndef	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^Ndef : NodeProxy {$/;"	c
NdefGui	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^NdefGui : JITGui {$/;"	c
NdefMixer	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^NdefMixer : ProxyMixer {$/;"	c
NdefMixerOld	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^NdefMixerOld : ProxyMixerOld {$/;"	c
NdefParamGui	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^NdefParamGui : EnvirGui {$/;"	c
NetAddr	SCClassLibrary/Common/Control/NetAddr.sc	/^NetAddr {$/;"	c
Nil	SCClassLibrary/Common/Core/Nil.sc	/^Nil {$/;"	c
NoLagControlSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^NoLagControlSpec : ControlSpec {$/;"	c
Node	SCClassLibrary/Common/Control/Node.sc	/^Node {$/;"	c
NodeControl	SCClassLibrary/Common/Control/NodeControl.sc	/^NodeControl {$/;"	c
NodeMap	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^NodeMap {$/;"	c
NodeMapSetting	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^NodeMapSetting {$/;"	c
NodeProxy	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^NodeProxy : BusPlug {$/;"	c
NodeProxyEditor	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^NodeProxyEditor {$/;"	c
NodeWatcher	SCClassLibrary/Common/Control/NodeWatcher.sc	/^NodeWatcher : BasicNodeWatcher {$/;"	c
NoiseChorus	quarks/cxaudio/cxaudio.sc	/^NoiseChorus {$/;"	c
NonControlSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^NonControlSpec : Spec {$/;"	c
Normalizer	SCClassLibrary/Common/Audio/Compander.sc	/^Normalizer : UGen {$/;"	c
Not	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^Not : AbstractConstraint { \/\/ aka TheCompleteOpposite$/;"	c
NotNil	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^NotNil : AbstractConstraint {$/;"	c
NotYetImplementedError	SCClassLibrary/Common/Core/Error.sc	/^NotYetImplementedError : MethodError {$/;"	c
NoteOffResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^NoteOffResponder : NoteOnResponder {$/;"	c
NoteOnBank	quarks/cruciallib/Control/CCBank.sc	/^NoteOnBank : CCBank {$/;"	c
NoteOnResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^NoteOnResponder : MIDIResponder {$/;"	c
NotificationCenter	SCClassLibrary/Common/GUI/Model.sc	/^NotificationCenter {$/;"	c
NotificationRegistration	SCClassLibrary/Common/GUI/Model.sc	/^NotificationRegistration {$/;"	c
NumAudioBuses	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumAudioBuses : InfoUGenBase {}$/;"	c
NumBuffers	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumBuffers : InfoUGenBase {}$/;"	c
NumChannels	SCClassLibrary/Common/Audio/Mix.sc	/^NumChannels {$/;"	c
NumControlBuses	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumControlBuses : InfoUGenBase {}$/;"	c
NumInputBuses	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumInputBuses : InfoUGenBase {}$/;"	c
NumOutputBuses	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumOutputBuses : InfoUGenBase {}$/;"	c
NumRunningSynths	SCClassLibrary/Common/Audio/InfoUGens.sc	/^NumRunningSynths : InfoUGenBase {$/;"	c
Number	SCClassLibrary/Common/Math/Number.sc	/^Number : Magnitude {$/;"	c
NumberBox	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^NumberBox : ViewRedirect { *key { ^\\numberBox }}$/;"	c
NumberEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^NumberEditor : Editor {$/;"	c
NumberEditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^NumberEditorGui : EditorGui {$/;"	c
OSCArgsMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCArgsMatcher : AbstractMessageMatcher {$/;"	c
OSCBundle	SCClassLibrary/Common/Control/OSCBundle.sc	/^OSCBundle {$/;"	c
OSCFunc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCFunc : AbstractResponderFunc {$/;"	c
OSCFuncAddrMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCFuncAddrMessageMatcher : AbstractMessageMatcher {$/;"	c
OSCFuncBothMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCFuncBothMessageMatcher : AbstractMessageMatcher {$/;"	c
OSCFuncRecvPortMessageMatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCFuncRecvPortMessageMatcher : AbstractMessageMatcher {$/;"	c
OSCInPort	SCClassLibrary/Common/Control/OSC.sc	/^OSCInPort : OSCPort {$/;"	c
OSCMessageDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCMessageDispatcher : AbstractWrappingDispatcher {$/;"	c
OSCMessagePatternDispatcher	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCMessagePatternDispatcher : OSCMessageDispatcher {$/;"	c
OSCMultiResponder	SCClassLibrary/Common/Control/OSCresponder.sc	/^OSCMultiResponder : OSCresponder {$/;"	c
OSCNode	SCClassLibrary/Common/Control/OSC.sc	/^OSCNode {$/;"	c
OSCOutPort	SCClassLibrary/Common/Control/OSC.sc	/^OSCOutPort : OSCPort {$/;"	c
OSCPort	SCClassLibrary/Common/Control/OSC.sc	/^OSCPort {$/;"	c
OSCSched	quarks/cruciallib/Scheduling/OSCSched.sc	/^OSCSched : BeatSched {$/;"	c
OSCService	SCClassLibrary/Common/Control/OSCService.sc	/^OSCService {$/;"	c
OSCdef	SCClassLibrary/Common/Control/ResponseDefs.sc	/^OSCdef : OSCFunc {$/;"	c
OSCpathDispatcher	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^OSCpathDispatcher : OSCMultiResponder {$/;"	c
OSCpathDispatcher	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^OSCpathDispatcher dispatches OSC commands to OSCpathResponder 's.$/;"	c
OSCpathResponder	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^OSCpathResponder : OSCresponder {$/;"	c
OSCresponder	SCClassLibrary/Common/Control/OSCresponder.sc	/^OSCresponder {$/;"	c
OSCresponderNode	SCClassLibrary/Common/Control/OSCresponder.sc	/^OSCresponderNode : OSCresponder {$/;"	c
OSXPlatform	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^OSXPlatform : UnixPlatform$/;"	c
Object	SCClassLibrary/Common/Core/Object.sc	/^Object  {$/;"	c
ObjectGui	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^ObjectGui : SCViewHolder {$/;"	c
ObjectInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^ObjectInspector : Inspector {$/;"	c
ObjectNotFound	quarks/cruciallib/Players/Silence.sc	/^ObjectNotFound : Silence {$/;"	c
ObjectPatchIn	quarks/cruciallib/Players/Patching.sc	/^ObjectPatchIn : ScalarPatchIn {$/;"	c
ObjectPatchOut	quarks/cruciallib/Players/Patching.sc	/^ObjectPatchOut : ScalarPatchOut {$/;"	c
ObjectSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^ObjectSpec : Spec {$/;"	c
ObjectTable	SCClassLibrary/Common/Collections/ObjectTable.sc	/^ObjectTable : TwoWayIdentityDictionary$/;"	c
OffsetOut	SCClassLibrary/Common/Audio/InOut.sc	/^OffsetOut : Out {$/;"	c
OnError	SCClassLibrary/Common/Control/SystemActions.sc	/^OnError : AbstractSystemAction {$/;"	c
OnePole	SCClassLibrary/Common/Audio/Filter.sc	/^OnePole : Filter {$/;"	c
OneShotStream	SCClassLibrary/Common/Streams/Stream.sc	/^OneShotStream : Stream {$/;"	c
OneZero	SCClassLibrary/Common/Audio/Filter.sc	/^OneZero : OnePole {}$/;"	c
Onsets	SCClassLibrary/Common/Audio/MachineListening.sc	/^Onsets : UGen {$/;"	c
Order	SCClassLibrary/Common/Collections/SparseArray.sc	/^Order : SequenceableCollection {$/;"	c
OrderedIdentitySet	SCClassLibrary/Common/Collections/Set.sc	/^OrderedIdentitySet : IdentitySet {$/;"	c
Original	SCClassLibrary/Common/Audio/MoogFF.sc	/^Original Java code created by F. Fontana - August 2007$/;"	c
Osc	SCClassLibrary/Common/Audio/Osc.sc	/^Osc : PureUGen {$/;"	c
OscN	SCClassLibrary/Common/Audio/Osc.sc	/^OscN : PureUGen {$/;"	c
Out	SCClassLibrary/Common/Audio/InOut.sc	/^Out : AbstractOut {$/;"	c
OutOfContextReturnError	SCClassLibrary/Common/Core/Error.sc	/^OutOfContextReturnError : MethodError {$/;"	c
OutputProxy	SCClassLibrary/Common/Audio/UGen.sc	/^OutputProxy : UGen {$/;"	c
P3n1	quarks/MathLib/classes/patterns/P3n1.sc	/^P3n1 : FilterPattern {$/;"	c
PAbstractGroup	SCClassLibrary/Common/Streams/Pfx.sc	/^PAbstractGroup : FilterPattern {$/;"	c
PMOsc	SCClassLibrary/backwards_compatibility/PMOsc.sc	/^PMOsc  {$/;"	c
PSinGrain	SCClassLibrary/Common/Audio/PSinGrain.sc	/^PSinGrain : UGen {$/;"	c
PV_Add	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Add : PV_MagMul {}$/;"	c
PV_BinScramble	SCClassLibrary/Common/Audio/FFT.sc	/^PV_BinScramble : PV_ChainUGen$/;"	c
PV_BinShift	SCClassLibrary/Common/Audio/FFT.sc	/^PV_BinShift : PV_ChainUGen$/;"	c
PV_BinWipe	SCClassLibrary/Common/Audio/FFT.sc	/^PV_BinWipe : PV_ChainUGen$/;"	c
PV_BrickWall	SCClassLibrary/Common/Audio/FFT.sc	/^PV_BrickWall : PV_ChainUGen$/;"	c
PV_ChainUGen	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^PV_ChainUGen : WidthFirstUGen {$/;"	c
PV_ConformalMap	SCClassLibrary/Common/Audio/FFT2.sc	/^PV_ConformalMap : PV_ChainUGen$/;"	c
PV_Conj	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Conj : PV_MagSquared {}$/;"	c
PV_Copy	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Copy : PV_MagMul {}$/;"	c
PV_CopyPhase	SCClassLibrary/Common/Audio/FFT.sc	/^PV_CopyPhase : PV_MagMul {}$/;"	c
PV_Diffuser	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Diffuser : PV_ChainUGen$/;"	c
PV_Div	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Div : PV_MagMul {}$/;"	c
PV_HainsworthFoote	SCClassLibrary/Common/Audio/FFT2.sc	/^PV_HainsworthFoote : PV_ChainUGen$/;"	c
PV_JensenAndersen	SCClassLibrary/Common/Audio/FFT2.sc	/^PV_JensenAndersen : PV_ChainUGen$/;"	c
PV_LoBitEncoder	SCClassLibrary/Common/Audio/FFT.sc	/^PV_LoBitEncoder : PV_ChainUGen$/;"	c
PV_LocalMax	SCClassLibrary/Common/Audio/FFT.sc	/^PV_LocalMax : PV_MagAbove {}$/;"	c
PV_MagAbove	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagAbove : PV_ChainUGen$/;"	c
PV_MagAllTimeAverage	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagAllTimeAverage : PV_MagSquared {}$/;"	c
PV_MagBelow	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagBelow : PV_MagAbove {}$/;"	c
PV_MagClip	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagClip : PV_MagAbove {}$/;"	c
PV_MagDiv	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagDiv : PV_ChainUGen$/;"	c
PV_MagFreeze	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagFreeze : PV_ChainUGen$/;"	c
PV_MagMul	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagMul : PV_ChainUGen$/;"	c
PV_MagNoise	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagNoise : PV_MagSquared {}$/;"	c
PV_MagOnePole	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagOnePole : PV_ChainUGen$/;"	c
PV_MagPeakDecay	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagPeakDecay : PV_ChainUGen$/;"	c
PV_MagShift	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagShift : PV_ChainUGen$/;"	c
PV_MagSmear	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagSmear : PV_ChainUGen$/;"	c
PV_MagSquared	SCClassLibrary/Common/Audio/FFT.sc	/^PV_MagSquared : PV_ChainUGen$/;"	c
PV_Max	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Max : PV_MagMul {}$/;"	c
PV_Min	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Min : PV_MagMul {}$/;"	c
PV_Mul	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Mul : PV_MagMul {}$/;"	c
PV_OscBank	SCClassLibrary/Common/Audio/FFT.sc	/^PV_OscBank : PV_ChainUGen$/;"	c
PV_PhaseShift	SCClassLibrary/Common/Audio/FFT.sc	/^PV_PhaseShift : PV_ChainUGen$/;"	c
PV_PhaseShift270	SCClassLibrary/Common/Audio/FFT.sc	/^PV_PhaseShift270 : PV_MagSquared {}$/;"	c
PV_PhaseShift90	SCClassLibrary/Common/Audio/FFT.sc	/^PV_PhaseShift90 : PV_MagSquared {}$/;"	c
PV_RandComb	SCClassLibrary/Common/Audio/FFT.sc	/^PV_RandComb : PV_ChainUGen$/;"	c
PV_RandWipe	SCClassLibrary/Common/Audio/FFT.sc	/^PV_RandWipe : PV_ChainUGen$/;"	c
PV_RectComb	SCClassLibrary/Common/Audio/FFT.sc	/^PV_RectComb : PV_ChainUGen$/;"	c
PV_RectComb2	SCClassLibrary/Common/Audio/FFT.sc	/^PV_RectComb2 : PV_ChainUGen$/;"	c
PV_Scope	SCClassLibrary/Common/Audio/FFT.sc	/^PV_Scope : PV_ChainUGen {}$/;"	c
PV_TimeAverageScope	SCClassLibrary/Common/Audio/FFT.sc	/^PV_TimeAverageScope : PV_Scope {}$/;"	c
PV_TimeSmear	SCClassLibrary/Common/Audio/FFT.sc	/^PV_TimeSmear : PV_MagSmear {}$/;"	c
PackFFT	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^PackFFT : PV_ChainUGen {$/;"	c
Padd	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Padd : Pset {$/;"	c
Paddp	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Paddp : Psetp {$/;"	c
Paddpre	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Paddpre : Psetpre {$/;"	c
PageLayout	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^PageLayout  {$/;"	c
Pair	SCClassLibrary/Common/Collections/Pair.sc	/^Pair : Collection {$/;"	c
Pan2	SCClassLibrary/Common/Audio/Pan.sc	/^Pan2 : MultiOutUGen {$/;"	c
Pan4	SCClassLibrary/Common/Audio/Pan.sc	/^Pan4 : MultiOutUGen {$/;"	c
PanAz	SCClassLibrary/Common/Audio/Pan.sc	/^PanAz : MultiOutUGen {$/;"	c
PanB	SCClassLibrary/Common/Audio/Pan.sc	/^PanB : MultiOutUGen {$/;"	c
PanB2	SCClassLibrary/Common/Audio/Pan.sc	/^PanB2 : MultiOutUGen {$/;"	c
PappliedInstr	quarks/cruciallib/Instr/Instr.sc	/^PappliedInstr : Instr { \/\/ partial application$/;"	c
PappliedInstrGui	quarks/cruciallib/Instr/InstrGui.sc	/^PappliedInstrGui : InstrGui {$/;"	c
ParGroup	SCClassLibrary/Common/Control/Node.sc	/^ParGroup : AbstractGroup {$/;"	c
Parametric	quarks/cxaudio/RBJeq.sc	/^Parametric {$/;"	c
PartConv	SCClassLibrary/Common/Audio/PartConv.sc	/^PartConv : UGen$/;"	c
Patch	quarks/cruciallib/Instr/Patch.sc	/^Patch : HasPatchIns  {$/;"	c
PatchGui	quarks/cruciallib/Instr/PatchGui.sc	/^PatchGui : AbstractPlayerGui {$/;"	c
PatchIn	quarks/cruciallib/Players/Patching.sc	/^PatchIn {$/;"	c
PatchOut	quarks/cruciallib/Players/Patching.sc	/^PatchOut {$/;"	c
PathName	SCClassLibrary/Common/Files/PathName.sc	/^PathName {$/;"	c
Pattern	SCClassLibrary/Common/Streams/Patterns.sc	/^Pattern : AbstractFunction {$/;"	c
PatternConductor	SCClassLibrary/Common/Streams/PatternConductor.sc	/^PatternConductor  {$/;"	c
PatternControl	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^PatternControl : StreamControl {$/;"	c
PatternProxy	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^PatternProxy : Pattern {$/;"	c
Pause	SCClassLibrary/Common/Audio/EnvGen.sc	/^Pause : UGen {$/;"	c
PauseSelf	SCClassLibrary/Common/Audio/EnvGen.sc	/^PauseSelf : UGen {$/;"	c
PauseSelfWhenDone	SCClassLibrary/Common/Audio/EnvGen.sc	/^PauseSelfWhenDone : UGen {$/;"	c
PauseStream	SCClassLibrary/Common/Streams/Stream.sc	/^PauseStream : Stream$/;"	c
Pavaroh	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pavaroh : FilterPattern {$/;"	c
Pbeta	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Pbeta : Pattern {$/;"	c
Pbind	SCClassLibrary/Common/Streams/Patterns.sc	/^Pbind : Pattern {$/;"	c
PbindProxy	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^PbindProxy : Pattern {$/;"	c
Pbindef	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^Pbindef : Pdef {$/;"	c
Pbindf	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pbindf : FilterPattern {$/;"	c
Pbinop	SCClassLibrary/Common/Streams/Patterns.sc	/^Pbinop : Pattern {$/;"	c
Pboolnet	quarks/MathLib/classes/patterns/Pboolnet.sc	/^Pboolnet : Pattern {$/;"	c
Pbrown	SCClassLibrary/Common/Streams/Patterns.sc	/^Pbrown : Pattern {$/;"	c
Pbus	SCClassLibrary/Common/Streams/Pfx.sc	/^Pbus : FilterPattern {$/;"	c
Pcauchy	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Pcauchy : Pattern {$/;"	c
Pchain	SCClassLibrary/Common/Streams/Patterns.sc	/^Pchain : Pattern {$/;"	c
Pclump	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pclump : FilterPattern {$/;"	c
Pclutch	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pclutch : FilterPattern {$/;"	c
Pcollatz	quarks/MathLib/classes/patterns/P3n1.sc	/^Pcollatz : FilterPattern {$/;"	c
PcollatzLike	quarks/MathLib/classes/patterns/P3n1.sc	/^PcollatzLike : Pcollatz {$/;"	c
Pcollect	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pcollect : FuncFilterPattern {$/;"	c
Pconst	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pconst : FilterPattern {$/;"	c
Pdef	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^Pdef : EventPatternProxy {$/;"	c
PdefAllGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^PdefAllGui : TaskProxyAllGui {$/;"	c
PdefGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^PdefGui : TaskProxyGui {$/;"	c
Pdefn	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^Pdefn : PatternProxy {$/;"	c
PdefnAllGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^PdefnAllGui : TaskProxyAllGui {$/;"	c
PdefnGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^PdefnGui : JITGui {$/;"	c
PdegreeToKey	SCClassLibrary/Common/Streams/Patterns.sc	/^PdegreeToKey : Pnaryop {$/;"	c
Pdfsm	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pdfsm : ListPattern {$/;"	c
Pdict	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^Pdict : Pattern {$/;"	c
Pdiff	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pdiff : FilterPattern {$/;"	c
Pdrop	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pdrop : FilterPattern {$/;"	c
PdurStutter	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^PdurStutter : Pstutter { \/\/ float streams$/;"	c
Peak	SCClassLibrary/Common/Audio/Trig.sc	/^Peak : UGen {$/;"	c
PeakFollower	SCClassLibrary/Common/Audio/Trig.sc	/^PeakFollower : UGen {$/;"	c
PeakingEQ	quarks/cxaudio/RBJeq.sc	/^PeakingEQ {$/;"	c
Pen	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Pen : GuiRedirect { *key { ^\\pen }}$/;"	c
Penv	SCClassLibrary/Common/Streams/Penv.sc	/^Penv : Env {$/;"	c
Penvir	SCClassLibrary/Common/Streams/Ppatmod.sc	/^Penvir : Pattern {$/;"	c
Pevent	SCClassLibrary/Common/Streams/Patterns.sc	/^Pevent : Pattern {$/;"	c
Peventmod	SCClassLibrary/Common/Streams/Ppatmod.sc	/^Peventmod : Pattern {$/;"	c
Pexprand	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Pexprand : Pwhite {$/;"	c
PfadeIn	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^PfadeIn : FilterPattern {$/;"	c
PfadeOut	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^PfadeOut : PfadeIn {$/;"	c
Pfin	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pfin : FilterPattern {$/;"	c
PfinQuant	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^PfinQuant : FilterPattern {$/;"	c
Pfindur	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pfindur : FilterPattern {$/;"	c
Pfinval	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pfinval : Pfin {$/;"	c
Pflatten	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pflatten : Pclump {$/;"	c
Pfpar	SCClassLibrary/Common/Streams/Pproto.sc	/^Pfpar : ListPattern {$/;"	c
Pfset	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pfset : FuncFilterPattern {$/;"	c
Pfsm	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pfsm : ListPattern {$/;"	c
Pfsm2	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^Pfsm2 : Pattern {$/;"	c
Pfsm3	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^Pfsm3 : Pfsm2 {$/;"	c
Pfunc	SCClassLibrary/Common/Streams/Patterns.sc	/^Pfunc : Pattern {$/;"	c
Pfuncn	SCClassLibrary/Common/Streams/Patterns.sc	/^Pfuncn : Pattern {$/;"	c
Pfx	SCClassLibrary/Common/Streams/Pfx.sc	/^Pfx : FilterPattern {$/;"	c
Pfxb	SCClassLibrary/Common/Streams/Pfx.sc	/^Pfxb : Pfx {$/;"	c
Pgate	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pgate  : Pn {$/;"	c
Pgauss	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Pgauss : Pattern {$/;"	c
Pgbrown	SCClassLibrary/Common/Streams/Patterns.sc	/^Pgbrown : Pbrown {$/;"	c
Pgeom	SCClassLibrary/Common/Streams/Patterns.sc	/^Pgeom : Pattern {	\/\/ geometric series$/;"	c
Pget	SCClassLibrary/Common/Streams/Plambda.sc	/^Pget : Pattern {$/;"	c
Pgpar	SCClassLibrary/Common/Streams/Ppar.sc	/^Pgpar : Ppar {$/;"	c
Pgroup	SCClassLibrary/Common/Streams/Pfx.sc	/^Pgroup : PAbstractGroup {$/;"	c
Pgtpar	SCClassLibrary/Common/Streams/Ppar.sc	/^Pgtpar : Pgpar {$/;"	c
Phasor	SCClassLibrary/Common/Audio/Trig.sc	/^Phasor : UGen {$/;"	c
Phid	SCClassLibrary/Common/Streams/ControlPatterns.sc	/^Phid : Pattern {$/;"	c
PhidKey	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^PhidKey : Pattern {$/;"	c
PhidSlot	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^PhidSlot : Pattern {$/;"	c
Phprand	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Phprand : Pwhite {$/;"	c
Pif	SCClassLibrary/Common/Streams/Patterns.sc	/^Pif : Pattern {$/;"	c
Pindex	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pindex : Pattern {$/;"	c
PingPong	SCClassLibrary/Common/Audio/DelayWr.sc	/^PingPong {$/;"	c
PingPongT	quarks/cxaudio/cxaudio.sc	/^PingPongT {$/;"	c
PingPongTP	quarks/cxaudio/cxaudio.sc	/^PingPongTP  {$/;"	c
PinkNoise	SCClassLibrary/Common/Audio/Noise.sc	/^PinkNoise : WhiteNoise {$/;"	c
Pipe	SCClassLibrary/Common/Files/File.sc	/^Pipe : UnixFILE {$/;"	c
Pitch	SCClassLibrary/Common/Audio/Trig.sc	/^Pitch : MultiOutUGen {$/;"	c
PitchShift	SCClassLibrary/Common/Audio/PitchShift.sc	/^PitchShift : UGen {$/;"	c
Pkey	SCClassLibrary/Common/Streams/Patterns.sc	/^Pkey : Pattern {$/;"	c
Place	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Place : Pseq {$/;"	c
Plag	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Plag : FilterPattern {$/;"	c
Plambda	SCClassLibrary/Common/Streams/Plambda.sc	/^Plambda : FilterPattern {$/;"	c
PlayBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^PlayBuf : MultiOutUGen {$/;"	c
PlayerAmp	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^PlayerAmp : AbstractSinglePlayerEffect {$/;"	c
PlayerAmpGui	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^PlayerAmpGui : HasSubjectGui {$/;"	c
PlayerBinop	quarks/cruciallib/Players/PlayerBasicOps.sc	/^PlayerBinop : AbstractPlayer{$/;"	c
PlayerBinopGui	quarks/cruciallib/Players/PlayerBasicOpsGui.sc	/^PlayerBinopGui : AbstractPlayerGui {$/;"	c
PlayerEffectGui	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^PlayerEffectGui : HasSubjectGui {$/;"	c
PlayerEffectSocket	quarks/cruciallib/Players/PlayerSocket.sc	/^PlayerEffectSocket : PlayerSocket {$/;"	c
PlayerInputProxy	quarks/cruciallib/Players/Silence.sc	/^PlayerInputProxy : Silence { \/\/ audio$/;"	c
PlayerMixer	quarks/cruciallib/Players/PlayerMixer.sc	/^PlayerMixer : AbstractPlayer {  \/\/ will become a HasPatchIns$/;"	c
PlayerRecorder	quarks/cruciallib/Players/PlayerRecorder.sc	/^PlayerRecorder {$/;"	c
PlayerSocket	quarks/cruciallib/Players/PlayerSocket.sc	/^PlayerSocket : AbstractPlayerProxy {$/;"	c
PlayerSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^PlayerSpec : HasItemSpec {$/;"	c
PlayerUnop	quarks/cruciallib/Players/PlayerBasicOps.sc	/^PlayerUnop : AbstractPlayer {$/;"	c
PlayerUnopGui	quarks/cruciallib/Players/PlayerBasicOpsGui.sc	/^PlayerUnopGui : AbstractPlayerGui {$/;"	c
Plazy	SCClassLibrary/Common/Streams/Ppatmod.sc	/^Plazy : Pattern {$/;"	c
PlazyEnvir	SCClassLibrary/Common/Streams/Ppatmod.sc	/^PlazyEnvir : Plazy {$/;"	c
PlazyEnvirN	SCClassLibrary/Common/Streams/Ppatmod.sc	/^PlazyEnvirN : PlazyEnvir {$/;"	c
Plet	SCClassLibrary/Common/Streams/Plambda.sc	/^Plet : Pattern {$/;"	c
Plot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^Plot {$/;"	c
Plotter	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^Plotter {$/;"	c
Plprand	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Plprand : Pwhite {$/;"	c
Plsys	quarks/MathLib/classes/LazyLindenmayer/Plsys.sc	/^Plsys : Pattern {$/;"	c
Pluck	SCClassLibrary/Common/Audio/Pluck.sc	/^Pluck : UGen {$/;"	c
PlusFreqScope	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^PlusFreqScope {$/;"	c
PlusFreqScopeWindow	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^PlusFreqScopeWindow {$/;"	c
Pmeanrand	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Pmeanrand : Pwhite {$/;"	c
Pmono	SCClassLibrary/Common/Streams/Patterns.sc	/^Pmono : Pattern {$/;"	c
PmonoArtic	SCClassLibrary/Common/Streams/Patterns.sc	/^PmonoArtic : Pmono {$/;"	c
PmonoArticStream	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^PmonoArticStream : PmonoStream {$/;"	c
PmonoStream	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^PmonoStream : Stream {$/;"	c
Pmswitch	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^Pmswitch : Pfsm2 {$/;"	c
Pmul	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pmul : Pset {$/;"	c
Pmulp	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pmulp : Psetp {$/;"	c
Pmulpre	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pmulpre : Psetpre {$/;"	c
Pn	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pn : FilterPattern {$/;"	c
Pnaryop	SCClassLibrary/Common/Streams/Patterns.sc	/^Pnaryop : Pattern {$/;"	c
Pnsym	SCClassLibrary/JITLib/Patterns/Psym.sc	/^Pnsym : Psym {$/;"	c
Pnsym1	SCClassLibrary/JITLib/Patterns/Psym.sc	/^Pnsym1 : Pnsym {$/;"	c
Point	SCClassLibrary/Common/Geometry/Point.sc	/^Point {$/;"	c
PointArray	SCClassLibrary/Common/Geometry/Point.sc	/^PointArray : Point$/;"	c
Polar	SCClassLibrary/Common/Math/Polar.sc	/^Polar : Number {$/;"	c
Poll	SCClassLibrary/Common/Audio/Poll.sc	/^Poll : UGen {$/;"	c
PopUpEditor	quarks/cruciallib/Editors/NumberEditor.sc	/^PopUpEditor : KrNumberEditor {$/;"	c
PopUpEditorGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^PopUpEditorGui : EditorGui {$/;"	c
PopUpMenu	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^PopUpMenu : ViewRedirect { *key { ^\\popUpMenu }}$/;"	c
Ported	SCClassLibrary/Common/Audio/MoogFF.sc	/^Ported to C++ for SuperCollider by Dan Stowell - August 2007$/;"	c
Position	quarks/cruciallib/Scheduling/Position.sc	/^Position  {$/;"	c
Post	SCClassLibrary/Common/Streams/IOStream.sc	/^Post {$/;"	c
Ppar	SCClassLibrary/Common/Streams/Ppar.sc	/^Ppar : ListPattern {$/;"	c
PparGroup	SCClassLibrary/Common/Streams/Pfx.sc	/^PparGroup : PAbstractGroup {$/;"	c
Ppatlace	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Ppatlace : Pseq {$/;"	c
Ppatmod	SCClassLibrary/Common/Streams/Ppatmod.sc	/^Ppatmod : Pattern {$/;"	c
Pperform	quarks/MathLib/classes/patterns/Preduce.sc	/^Pperform : Pattern {$/;"	c
Pplayer	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pplayer : FilterPattern {$/;"	c
Ppoisson	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^Ppoisson : Pattern {$/;"	c
Pprob	SCClassLibrary/Common/Streams/Patterns.sc	/^Pprob : Pattern {$/;"	c
Pprotect	SCClassLibrary/Common/Streams/Patterns.sc	/^Pprotect : FilterPattern {$/;"	c
Pproto	SCClassLibrary/Common/Streams/Pproto.sc	/^Pproto  : Pattern {$/;"	c
Prand	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Prand : ListPattern {$/;"	c
Preduce	quarks/MathLib/classes/patterns/Preduce.sc	/^Preduce : Pattern {$/;"	c
Preject	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Preject : FuncFilterPattern {$/;"	c
Pretty	SCClassLibrary/Common/Streams/IOStream.sc	/^Pretty : IOStream {$/;"	c
PrettyEat	SCClassLibrary/Common/Streams/IOStream.sc	/^PrettyEat : PrettyState {$/;"	c
PrettyEcho	SCClassLibrary/Common/Streams/IOStream.sc	/^PrettyEcho : PrettyState {$/;"	c
PrettyPrintStream	quarks/cruciallib/UncoupledUsefulThings/PrettyPrintStream.sc	/^PrettyPrintStream : CollStream { \/\/ well prettier anyway$/;"	c
PrettyState	SCClassLibrary/Common/Streams/IOStream.sc	/^PrettyState {$/;"	c
Prewrite	SCClassLibrary/Common/Streams/Prewrite.sc	/^Prewrite : FilterPattern {$/;"	c
PrimitiveFailedError	SCClassLibrary/Common/Core/Error.sc	/^PrimitiveFailedError : MethodError {$/;"	c
PriorityQueue	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^PriorityQueue {$/;"	c
Process	SCClassLibrary/Common/Core/Kernel.sc	/^Process {$/;"	c
ProgramChangeResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^ProgramChangeResponder : MIDIResponder {$/;"	c
Prorate	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Prorate : FilterPattern {$/;"	c
Prout	SCClassLibrary/Common/Streams/Patterns.sc	/^Prout : Pattern {$/;"	c
Proutine	SCClassLibrary/Common/Streams/Patterns.sc	/^Proutine : Prout {$/;"	c
ProxyMixer	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^ProxyMixer : JITGui {$/;"	c
ProxyMixerOld	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^ProxyMixerOld {$/;"	c
ProxyMonitorGui	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^ProxyMonitorGui {$/;"	c
ProxyNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^ProxyNodeMap : NodeMap {$/;"	c
ProxyNodeMapSetting	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^ProxyNodeMapSetting : NodeMapSetting {$/;"	c
ProxySpace	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^ProxySpace : LazyEnvir {$/;"	c
ProxySynthDef	SCClassLibrary/JITLib/ProxySpace/ProxySynthDef.sc	/^ProxySynthDef : SynthDef {$/;"	c
Pseed	SCClassLibrary/Common/Streams/Pseed.sc	/^Pseed : FilterPattern {$/;"	c
Pseg	SCClassLibrary/Common/Streams/TimePatterns.sc	/^Pseg : Pstep {$/;"	c
Pselect	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pselect : FuncFilterPattern {$/;"	c
Pseq	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pseq : ListPattern {$/;"	c
Pser	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pser : Pseq {$/;"	c
Pseries	SCClassLibrary/Common/Streams/Patterns.sc	/^Pseries : Pattern {	\/\/ arithmetic series$/;"	c
Pset	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pset : FilterPattern {$/;"	c
Psetp	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Psetp : Pset {$/;"	c
Psetpre	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Psetpre : FilterPattern {$/;"	c
Pshuf	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pshuf : ListPattern {$/;"	c
Pslide	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pslide : ListPattern {$/;"	c
Pspawn	SCClassLibrary/Common/Streams/Pspawner.sc	/^Pspawn : FilterPattern {$/;"	c
Pspawner	SCClassLibrary/Common/Streams/Pspawner.sc	/^Pspawner : Prout {$/;"	c
Pspy	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^Pspy : FilterPattern { $/;"	c
Pstep	SCClassLibrary/Common/Streams/TimePatterns.sc	/^Pstep : Pattern {$/;"	c
Pstep2add	SCClassLibrary/Common/Streams/Patterns.sc	/^Pstep2add : Pattern {$/;"	c
Pstep3add	SCClassLibrary/Common/Streams/Patterns.sc	/^Pstep3add : Pattern {$/;"	c
PstepNadd	SCClassLibrary/Common/Streams/Patterns.sc	/^PstepNadd : PstepNfunc {$/;"	c
PstepNfunc	SCClassLibrary/Common/Streams/Patterns.sc	/^PstepNfunc : Pattern {$/;"	c
Pstretch	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pstretch : FilterPattern {$/;"	c
Pstretchp	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pstretchp : Pstretch {$/;"	c
Pstutter	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pstutter : FilterPattern {$/;"	c
Pswitch	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pswitch : Pattern {$/;"	c
Pswitch1	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pswitch1 : Pswitch {$/;"	c
Psym	SCClassLibrary/JITLib/Patterns/Psym.sc	/^Psym : FilterPattern {$/;"	c
Psym1	SCClassLibrary/JITLib/Patterns/Psym.sc	/^Psym1 : Psym {$/;"	c
Psync	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Psync : FilterPattern {$/;"	c
Ptime	SCClassLibrary/Common/Streams/Patterns.sc	/^Ptime : Pattern {$/;"	c
Ptpar	SCClassLibrary/Common/Streams/Ppar.sc	/^Ptpar : Ppar {$/;"	c
Ptrace	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Ptrace : FilterPattern {$/;"	c
Ptsym	SCClassLibrary/JITLib/Patterns/Psym.sc	/^Ptsym : Psym {$/;"	c
Ptuple	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Ptuple : ListPattern {$/;"	c
Pulse	SCClassLibrary/Common/Audio/FSinOsc.sc	/^Pulse : UGen {$/;"	c
PulseCount	SCClassLibrary/Common/Audio/Trig.sc	/^PulseCount : UGen {$/;"	c
PulseDivider	SCClassLibrary/Common/Audio/Trig.sc	/^PulseDivider : UGen {$/;"	c
Punop	SCClassLibrary/Common/Streams/Patterns.sc	/^Punop : Pattern {$/;"	c
PureUGen	SCClassLibrary/Common/Audio/UGen.sc	/^PureUGen : UGen {$/;"	c
Pwalk	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pwalk : ListPattern {$/;"	c
Pwhile	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pwhile : FuncFilterPattern {$/;"	c
Pwhite	SCClassLibrary/Common/Streams/Patterns.sc	/^Pwhite : Pattern {$/;"	c
Pwrand	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pwrand : ListPattern {$/;"	c
Pwrap	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^Pwrap : FilterPattern {$/;"	c
Pxrand	SCClassLibrary/Common/Streams/ListPatterns.sc	/^Pxrand : ListPattern {$/;"	c
QAbstractScroll	SCClassLibrary/QtCollider/BasicViews.sc	/^QAbstractScroll : QView {$/;"	c
QAbstractStepValue	SCClassLibrary/QtCollider/BasicViews.sc	/^QAbstractStepValue : QView {$/;"	c
QAlignment	SCClassLibrary/QtCollider/enums.sc	/^QAlignment {$/;"	c
QButton	SCClassLibrary/QtCollider/BasicViews.sc	/^QButton : QView {$/;"	c
QCheckBox	SCClassLibrary/QtCollider/BasicViews.sc	/^QCheckBox : QView {$/;"	c
QColorGroup	SCClassLibrary/QtCollider/enums.sc	/^QColorGroup {$/;"	c
QColorRole	SCClassLibrary/QtCollider/enums.sc	/^QColorRole {$/;"	c
QCurve	SCClassLibrary/QtCollider/enums.sc	/^QCurve {$/;"	c
QDialog	SCClassLibrary/QtCollider/QDialog.sc	/^QDialog {$/;"	c
QDragBoth	SCClassLibrary/QtCollider/dnd_views.sc	/^QDragBoth : QDragSink$/;"	c
QDragSink	SCClassLibrary/QtCollider/dnd_views.sc	/^QDragSink : QDragView$/;"	c
QDragSource	SCClassLibrary/QtCollider/dnd_views.sc	/^QDragSource : QDragView$/;"	c
QDragView	SCClassLibrary/QtCollider/dnd_views.sc	/^QDragView : QTextField$/;"	c
QEnvelopeView	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^QEnvelopeView : QView$/;"	c
QFileDialog	SCClassLibrary/QtCollider/QDialog.sc	/^QFileDialog : QObject {$/;"	c
QFont	SCClassLibrary/QtCollider/QFont.sc	/^QFont {$/;"	c
QGridLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QGridLayout : QLayout {$/;"	c
QHLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QHLayout : QLineLayout {$/;"	c
QHLayoutView	SCClassLibrary/QtCollider/BasicViews.sc	/^QHLayoutView : QView {$/;"	c
QItemViewBase	SCClassLibrary/QtCollider/BasicViews.sc	/^QItemViewBase : QView$/;"	c
QKey	SCClassLibrary/QtCollider/enums.sc	/^QKey {$/;"	c
QKeyModifiers	SCClassLibrary/QtCollider/enums.sc	/^QKeyModifiers {$/;"	c
QKnob	SCClassLibrary/QtCollider/QKnob.sc	/^QKnob : QAbstractStepValue {$/;"	c
QLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QLayout : QObject {$/;"	c
QLevelIndicator	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^QLevelIndicator : QView {$/;"	c
QLimits	SCClassLibrary/QtCollider/enums.sc	/^QLimits {$/;"	c
QLineLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QLineLayout : QLayout {$/;"	c
QListView	SCClassLibrary/QtCollider/QListView.sc	/^QListView : QItemViewBase {$/;"	c
QMetaObject	SCClassLibrary/QtCollider/QObject.sc	/^QMetaObject {$/;"	c
QMultiSliderView	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^QMultiSliderView : QView {$/;"	c
QNumberBox	SCClassLibrary/QtCollider/QNumberBox.sc	/^QNumberBox : QAbstractStepValue {$/;"	c
QObject	SCClassLibrary/QtCollider/QObject.sc	/^QObject {$/;"	c
QOrientation	SCClassLibrary/QtCollider/enums.sc	/^QOrientation {$/;"	c
QPalette	SCClassLibrary/QtCollider/QPalette.sc	/^QPalette {$/;"	c
QPen	SCClassLibrary/QtCollider/QPen.sc	/^QPen {$/;"	c
QPenPrinter	SCClassLibrary/QtCollider/QPenPrinter.sc	/^QPenPrinter : QObject {$/;"	c
QPopUpMenu	SCClassLibrary/QtCollider/BasicViews.sc	/^QPopUpMenu : QItemViewBase {$/;"	c
QRangeSlider	SCClassLibrary/QtCollider/QRangeSlider.sc	/^QRangeSlider : QAbstractStepValue {$/;"	c
QScope	SCClassLibrary/QtCollider/QScope.sc	/^QScope : QView {$/;"	c
QScope2	SCClassLibrary/QtCollider/QScope2.sc	/^QScope2 : QView {$/;"	c
QScrollCanvas	SCClassLibrary/QtCollider/BasicViews.sc	/^QScrollCanvas : QObject {$/;"	c
QScrollTopView	SCClassLibrary/QtCollider/QWindow.sc	/^QScrollTopView : QScrollView {$/;"	c
QScrollView	SCClassLibrary/QtCollider/BasicViews.sc	/^QScrollView : QAbstractScroll {$/;"	c
QSlider	SCClassLibrary/QtCollider/QSlider.sc	/^QSlider : QAbstractStepValue {$/;"	c
QSlider2D	SCClassLibrary/QtCollider/QSlider2D.sc	/^QSlider2D : QAbstractStepValue {$/;"	c
QSoundFileView	SCClassLibrary/QtCollider/QSoundFileView.sc	/^QSoundFileView : QView {$/;"	c
QStackLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QStackLayout : QLayout$/;"	c
QStaticText	SCClassLibrary/QtCollider/BasicViews.sc	/^QStaticText : QTextViewBase {$/;"	c
QStethoscope	SCClassLibrary/QtCollider/QStethoscope.sc	/^QStethoscope {$/;"	c
QStethoscope2	SCClassLibrary/QtCollider/QStethoscope2.sc	/^QStethoscope2 {$/;"	c
QTextField	SCClassLibrary/QtCollider/BasicViews.sc	/^QTextField : QTextViewBase {$/;"	c
QTextView	SCClassLibrary/QtCollider/QTextView.sc	/^QTextView : QAbstractScroll {$/;"	c
QTextViewBase	SCClassLibrary/QtCollider/BasicViews.sc	/^QTextViewBase : QView {$/;"	c
QTopScrollWidget	SCClassLibrary/QtCollider/QWindow.sc	/^QTopScrollWidget : QScrollCanvas {$/;"	c
QTopView	SCClassLibrary/QtCollider/QWindow.sc	/^QTopView : QView {$/;"	c
QTreeView	SCClassLibrary/QtCollider/QTreeView.sc	/^QTreeView : QView {$/;"	c
QTreeViewItem	SCClassLibrary/QtCollider/QTreeView.sc	/^QTreeViewItem {$/;"	c
QUserView	SCClassLibrary/QtCollider/QUserView.sc	/^QUserView : QView {$/;"	c
QVLayout	SCClassLibrary/QtCollider/QLayout.sc	/^QVLayout : QLineLayout {$/;"	c
QVLayoutView	SCClassLibrary/QtCollider/BasicViews.sc	/^QVLayoutView : QView {$/;"	c
QView	SCClassLibrary/QtCollider/QView.sc	/^QView : QObject {$/;"	c
QWebFontFamily	SCClassLibrary/QtCollider/enums.sc	/^QWebFontFamily {$/;"	c
QWebView	SCClassLibrary/QtCollider/QWebView.sc	/^QWebView : QView {$/;"	c
QtGUI	SCClassLibrary/QtCollider/QtGUI.sc	/^QtGUI {$/;"	c
QuadC	SCClassLibrary/Common/Audio/Chaos.sc	/^QuadC : QuadN {}$/;"	c
QuadL	SCClassLibrary/Common/Audio/Chaos.sc	/^QuadL : QuadN {}$/;"	c
QuadN	SCClassLibrary/Common/Audio/Chaos.sc	/^QuadN : ChaosGen {$/;"	c
Quant	SCClassLibrary/Common/Streams/Quant.sc	/^Quant {$/;"	c
QuarkView	SCClassLibrary/Common/Quarks/Quark.sc	/^QuarkView {$/;"	c
QuarkViewQt	SCClassLibrary/Common/Quarks/Quark.sc	/^QuarkViewQt {$/;"	c
QuarksView	SCClassLibrary/Common/Quarks/Quarks.sc	/^QuarksView {$/;"	c
QuarksViewQt	SCClassLibrary/Common/Quarks/Quarks.sc	/^QuarksViewQt {$/;"	c
Quaternion	quarks/MathLib/classes/various/Quaternion.sc	/^Quaternion {$/;"	c
RHPF	SCClassLibrary/Common/Audio/Filter.sc	/^RHPF : RLPF {}$/;"	c
RK	quarks/MathLib/classes/Solver/Solver.sc	/^RK : Solver {$/;"	c
RK2	quarks/MathLib/classes/Solver/Solver.sc	/^RK2 : RK {$/;"	c
RK3	quarks/MathLib/classes/Solver/Solver.sc	/^RK3 : RK {$/;"	c
RK4	quarks/MathLib/classes/Solver/Solver.sc	/^RK4 : RK {$/;"	c
RLPF	SCClassLibrary/Common/Audio/Filter.sc	/^RLPF : Filter {$/;"	c
RadiansPerSample	SCClassLibrary/Common/Audio/InfoUGens.sc	/^RadiansPerSample : InfoUGenBase {}$/;"	c
Ramp	SCClassLibrary/Common/Audio/Filter.sc	/^Ramp : Lag {}$/;"	c
Rand	SCClassLibrary/Common/Audio/Noise.sc	/^Rand : UGen {$/;"	c
RandID	SCClassLibrary/Common/Audio/Noise.sc	/^RandID : WidthFirstUGen {$/;"	c
RandSeed	SCClassLibrary/Common/Audio/Noise.sc	/^RandSeed : WidthFirstUGen {$/;"	c
Range	SCClassLibrary/Common/Collections/Interval.sc	/^Range : Collection {$/;"	c
RangeSlider	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^RangeSlider : ViewRedirect { *key { ^\\rangeSlider }}$/;"	c
Rather	SCClassLibrary/Common/Core/Finalize.sc	/^Rather than having a very complex system where any object can be finalized,$/;"	c
RawArray	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^RawArray : ArrayedCollection {$/;"	c
RawPointer	SCClassLibrary/Common/Core/Kernel.sc	/^RawPointer {$/;"	c
RbjLPF	quarks/cxaudio/RBJeq.sc	/^RbjLPF {$/;"	c
RecordBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^RecordBuf : UGen {$/;"	c
RecordProxyMixer	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^RecordProxyMixer {$/;"	c
Rect	SCClassLibrary/Common/Geometry/Rect.sc	/^Rect {$/;"	c
Ref	SCClassLibrary/Common/Core/Ref.sc	/^Ref : AbstractFunction$/;"	c
RefCopy	SCClassLibrary/Common/Core/Ref.sc	/^RefCopy : Ref$/;"	c
ReplaceOut	SCClassLibrary/Common/Audio/InOut.sc	/^ReplaceOut : Out {}$/;"	c
Resonz	SCClassLibrary/Common/Audio/Filter.sc	/^Resonz : Filter {$/;"	c
Rest	SCClassLibrary/Common/Streams/Rest.sc	/^Rest {$/;"	c
Reverberator3	quarks/cxaudio/cxaudio.sc	/^Reverberator3 {$/;"	c
RingBuffer	SCClassLibrary/Common/Collections/RingBuffer.sc	/^RingBuffer : SequenceableCollection$/;"	c
Ringz	SCClassLibrary/Common/Audio/Filter.sc	/^Ringz : Filter {$/;"	c
RootFinder	quarks/MathLib/classes/various/RootFinder.sc	/^RootFinder {$/;"	c
RootNode	SCClassLibrary/Common/Control/Node.sc	/^RootNode : Group {$/;"	c
Rossler	SCClassLibrary/Common/Audio/Noise.sc	/^Rossler : UGen {$/;"	c
Rotate2	SCClassLibrary/Common/Audio/Pan.sc	/^Rotate2 : MultiOutUGen {$/;"	c
Routine	SCClassLibrary/Common/Core/Thread.sc	/^Routine : Thread {$/;"	c
RunningMax	SCClassLibrary/Common/Audio/Trig.sc	/^RunningMax : Peak {$/;"	c
RunningMin	SCClassLibrary/Common/Audio/Trig.sc	/^RunningMin : Peak {$/;"	c
RunningSum	SCClassLibrary/Common/Audio/FFT2.sc	/^RunningSum : UGen$/;"	c
SC2DSlider	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SC2DSlider : SCSliderBase {$/;"	c
SC2DTabletSlider	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SC2DTabletSlider : SC2DSlider {$/;"	c
SCAbstractModalWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^SCAbstractModalWindow : SCWindow {$/;"	c
SCAutoCompleteTextField	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^SCAutoCompleteTextField : SCTextField {$/;"	c
SCButton	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCButton : SCControlView {$/;"	c
SCButton	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCButton : SCControlView {$/;"	c
SCButtonAdapter	quarks/cruciallib/Gui/ActionButton.sc	/^SCButtonAdapter : SCViewHolder {$/;"	c
SCCompositeView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCCompositeView : SCContainerView {$/;"	c
SCCompositeView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCCompositeView : SCContainerView {$/;"	c
SCConstructionView	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCConstructionView.sc	/^SCConstructionView : SCUserView{$/;"	c
SCContainerView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCContainerView : SCView { \/\/ abstract class$/;"	c
SCContainerView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCContainerView : SCView { \/\/ abstract class$/;"	c
SCControlView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCControlView : SCView { \/\/ abstract class$/;"	c
SCControlView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCControlView : SCView { \/\/ abstract class$/;"	c
SCDoc	SCClassLibrary/SCDoc/SCDoc.sc	/^SCDoc {$/;"	c
SCDocEntry	SCClassLibrary/SCDoc/SCDoc.sc	/^SCDocEntry {$/;"	c
SCDocHTMLRenderer	SCClassLibrary/SCDoc/SCDocRenderer.sc	/^SCDocHTMLRenderer {$/;"	c
SCDocNode	SCClassLibrary/SCDoc/SCDoc.sc	/^SCDocNode {$/;"	c
SCDragBoth	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCDragBoth : SCDragSink {$/;"	c
SCDragSink	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCDragSink : SCDragView {$/;"	c
SCDragSource	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCDragSource : SCDragView {$/;"	c
SCDragView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCDragView : SCStaticTextBase {$/;"	c
SCEnvelopeEdit	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^SCEnvelopeEdit : SCEnvelopeView {$/;"	c
SCEnvelopeView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCEnvelopeView : SCView {$/;"	c
SCFont	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^SCFont {$/;"	c
SCFont	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^SCFont {$/;"	c
SCHLayoutView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCHLayoutView : SCLayoutView {}$/;"	c
SCHLayoutView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCHLayoutView : SCLayoutView {}$/;"	c
SCIBDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^SCIBDrag { }$/;"	c
SCIBMultipleDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^SCIBMultipleDrag : SCIBDrag$/;"	c
SCIBPallatteDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^SCIBPallatteDrag : SCIBDrag$/;"	c
SCImage	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^SCImage {$/;"	c
SCImageFilter	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^SCImageFilter {$/;"	c
SCImageKernel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^SCImageKernel {$/;"	c
SCKnob	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^SCKnob : SCUserView {$/;"	c
SCLayoutView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCLayoutView : SCContainerView {$/;"	c
SCLayoutView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCLayoutView : SCContainerView {$/;"	c
SCLevelIndicator	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^SCLevelIndicator : SCView {$/;"	c
SCListView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCListView : SCControlView {$/;"	c
SCMenuGroup	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^SCMenuGroup : CocoaMenuItem {$/;"	c
SCMenuItem	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^SCMenuItem : CocoaMenuItem {$/;"	c
SCMenuRoot	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^SCMenuRoot {$/;"	c
SCMenuSeparator	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^SCMenuSeparator : CocoaMenuItem {$/;"	c
SCModalSheet	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^SCModalSheet : SCAbstractModalWindow {$/;"	c
SCModalWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^SCModalWindow : SCAbstractModalWindow {$/;"	c
SCMovieView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^SCMovieView : SCView{$/;"	c
SCMultiSliderView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCMultiSliderView : SCView {$/;"	c
SCNSObject	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^SCNSObject : SCNSObjectAbstract{$/;"	c
SCNSObjectAbstract	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^SCNSObjectAbstract {$/;"	c
SCNumberBox	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCNumberBox : SCStaticTextBase {$/;"	c
SCNumberBox	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^SCNumberBox : SCTextField {$/;"	c
SCNumberBoxOld	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCNumberBoxOld : SCStaticTextBase {$/;"	c
SCPen	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCPen.sc	/^SCPen {$/;"	c
SCPopUpMenu	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCPopUpMenu : SCControlView {$/;"	c
SCQuartzComposerView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCQuartzComposerView.sc	/^SCQuartzComposerView : SCView{$/;"	c
SCRangeSlider	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCRangeSlider : SCSliderBase {$/;"	c
SCRangeSlider	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCRangeSlider : SCSliderBase {$/;"	c
SCScope	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^SCScope : SCView {$/;"	c
SCScrollTopView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCScrollTopView : SCTopView {$/;"	c
SCScrollTopView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCScrollTopView : SCTopView {$/;"	c
SCScrollView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCScrollView : SCScrollTopView {$/;"	c
SCScrollView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCScrollView : SCScrollTopView {$/;"	c
SCSlider	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCSlider : SCSliderBase$/;"	c
SCSlider	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCSlider : SCSliderBase {$/;"	c
SCSliderBase	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCSliderBase : SCControlView {$/;"	c
SCSliderBase	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCSliderBase : SCControlView {$/;"	c
SCSoundFileView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^SCSoundFileView : SCScope{$/;"	c
SCStaticText	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCStaticText : SCStaticTextBase {$/;"	c
SCStaticText	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCStaticText : SCStaticTextBase {$/;"	c
SCStaticTextBase	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCStaticTextBase : SCView {$/;"	c
SCStaticTextBase	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCStaticTextBase : SCView {$/;"	c
SCStethoscope	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^SCStethoscope {$/;"	c
SCTabletView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^SCTabletView : SCView {$/;"	c
SCTextField	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^SCTextField : SCStaticTextBase {$/;"	c
SCTextFieldOld	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^SCTextFieldOld : SCNumberBoxOld {$/;"	c
SCTextView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^SCTextView : SCView{$/;"	c
SCTopView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCTopView : SCCompositeView {$/;"	c
SCTopView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCTopView : SCCompositeView {$/;"	c
SCUserView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCUserView : SCView {$/;"	c
SCVLayoutView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCVLayoutView : SCLayoutView {}$/;"	c
SCVLayoutView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCVLayoutView : SCLayoutView {}$/;"	c
SCView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^SCView {  \/\/ abstract class$/;"	c
SCView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^SCView {  \/\/ abstract class$/;"	c
SCViewHolder	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^SCViewHolder {$/;"	c
SCWebView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^SCWebView : SCView{$/;"	c
SCWindow	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^SCWindow {$/;"	c
SCWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^SCWindow {$/;"	c
SFP	quarks/cruciallib/Players/SFP/SFP.sc	/^SFP : AbstractSFP  {$/;"	c
SFPGui	quarks/cruciallib/Players/SFP/SFPGui.sc	/^SFPGui : AbstractSFPGui {$/;"	c
SOS	SCClassLibrary/Common/Audio/Filter.sc	/^SOS : Filter {$/;"	c
Sample	quarks/cruciallib/Sample/Sample.sc	/^Sample : AbstractSample { \/\/ a small sound loaded from disk$/;"	c
SampleDur	SCClassLibrary/Common/Audio/InfoUGens.sc	/^SampleDur : InfoUGenBase {}$/;"	c
SampleGui	quarks/cruciallib/Sample/SampleGui.sc	/^SampleGui : ObjectGui {$/;"	c
SampleRate	SCClassLibrary/Common/Audio/InfoUGens.sc	/^SampleRate : InfoUGenBase {}$/;"	c
SampleSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^SampleSpec : NonControlSpec {$/;"	c
SaveConsole	quarks/cruciallib/Gui/SynthConsole.sc	/^SaveConsole : AbstractConsole {$/;"	c
Saw	SCClassLibrary/Common/Audio/FSinOsc.sc	/^Saw : UGen {$/;"	c
ScIDE	SCClassLibrary/scide_scqt/ScIDE.sc	/^ScIDE {$/;"	c
ScalarPatchIn	quarks/cruciallib/Players/Patching.sc	/^ScalarPatchIn : ControlPatchIn {$/;"	c
ScalarPatchOut	quarks/cruciallib/Players/Patching.sc	/^ScalarPatchOut : PatchOut {$/;"	c
ScalarSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^ScalarSpec : ControlSpec {$/;"	c
Scale	SCClassLibrary/Common/Collections/Scale.sc	/^Scale {$/;"	c
ScaleAD	SCClassLibrary/Common/Collections/Scale.sc	/^ScaleAD : Scale {$/;"	c
ScaleInfo	SCClassLibrary/Common/Collections/Scale.sc	/^ScaleInfo {$/;"	c
ScaleSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^ScaleSpec : NonControlSpec {$/;"	c
ScaleStream	SCClassLibrary/Common/Collections/Scale.sc	/^ScaleStream {$/;"	c
ScatterView	quarks/MathLib/classes/gui/ScatterView.sc	/^ScatterView {$/;"	c
ScatterView2	quarks/MathLib/classes/gui/ScatterView2.sc	/^ScatterView2 {$/;"	c
ScatterView3d	quarks/MathLib/classes/gui/ScatterView.sc	/^ScatterView3d {$/;"	c
Scheduler	SCClassLibrary/Common/Core/Clock.sc	/^Scheduler {$/;"	c
Schmidt	SCClassLibrary/Common/Audio/Trig.sc	/^Schmidt : InRange {}$/;"	c
ScopeBuffer	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^ScopeBuffer {$/;"	c
ScopeOut	SCClassLibrary/Common/Audio/BufIO.sc	/^ScopeOut : UGen {$/;"	c
ScopeOut2	SCClassLibrary/Common/Audio/BufIO.sc	/^ScopeOut2 : UGen {$/;"	c
ScopeView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^ScopeView : ViewRedirect { *key { ^\\scopeView }}$/;"	c
Score	SCClassLibrary/Common/Control/Score.sc	/^Score {$/;"	c
ScoreStreamPlayer	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^ScoreStreamPlayer : Server {$/;"	c
ScrollView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^ScrollView : ViewRedirect { *key { ^\\scrollView }}$/;"	c
ScurryableInstrGateSpawner	quarks/cruciallib/Instr/InstrSpawner.sc	/^ScurryableInstrGateSpawner : InstrGateSpawner {$/;"	c
See	quarks/MathLib/classes/various/Bessel.sc	/^See subroutines comments for additional copyrights.$/;"	c
SeenBefore	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^SeenBefore : AbstractConstraint {$/;"	c
Select	SCClassLibrary/Common/Audio/Osc.sc	/^Select : PureUGen {$/;"	c
SelectButtonSet	quarks/cruciallib/Gui/SelectButtonSet.sc	/^SelectButtonSet  {$/;"	c
SelectX	SCClassLibrary/Common/Audio/Osc.sc	/^SelectX {$/;"	c
SelectXFocus	SCClassLibrary/Common/Audio/Osc.sc	/^SelectXFocus { 	\/\/ does not wrap (yet).$/;"	c
Semaphore	SCClassLibrary/Common/Core/Semaphore.sc	/^Semaphore {$/;"	c
SemiColonFileReader	SCClassLibrary/Common/Streams/TabFileReader.sc	/^SemiColonFileReader : FileReader {$/;"	c
SendPeakRMS	SCClassLibrary/Common/Audio/Trig.sc	/^SendPeakRMS : UGen {$/;"	c
SendReply	SCClassLibrary/Common/Audio/Trig.sc	/^SendReply : SendTrig {$/;"	c
SendTrig	SCClassLibrary/Common/Audio/Trig.sc	/^SendTrig : UGen {$/;"	c
SequenceableCollection	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^SequenceableCollection : Collection {$/;"	c
Server	SCClassLibrary/Common/Control/Server.sc	/^Server {$/;"	c
ServerBoot	SCClassLibrary/Common/Control/SystemActions.sc	/^ServerBoot : AbstractServerAction {$/;"	c
ServerErrorGui	quarks/cruciallib/ServerTools/ServerGui.sc	/^ServerErrorGui : ObjectGui {$/;"	c
ServerGui	quarks/cruciallib/ServerTools/ServerGui.sc	/^ServerGui : ObjectGui {$/;"	c
ServerQuit	SCClassLibrary/Common/Control/SystemActions.sc	/^ServerQuit : AbstractServerAction {$/;"	c
ServerShmInterface	SCClassLibrary/Common/Control/Server.sc	/^ServerShmInterface {$/;"	c
ServerTree	SCClassLibrary/Common/Control/SystemActions.sc	/^ServerTree : AbstractServerAction {$/;"	c
Set	SCClassLibrary/Common/Collections/Set.sc	/^Set : Collection {$/;"	c
SetBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^SetBuf : WidthFirstUGen {$/;"	c
SetResetFF	SCClassLibrary/Common/Audio/Trig.sc	/^SetResetFF : PulseCount {$/;"	c
ShannonFinger	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^ShannonFinger : ShannonMarkovSet {$/;"	c
ShannonMarkovSet	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^ShannonMarkovSet {$/;"	c
Shaper	SCClassLibrary/Common/Audio/Osc.sc	/^Shaper : Index {$/;"	c
SharedBus	quarks/cruciallib/ServerTools/SharedBus.sc	/^SharedBus : Bus {$/;"	c
SharedIn	SCClassLibrary/Common/Audio/InOut.sc	/^SharedIn : AbstractIn {$/;"	c
SharedOut	SCClassLibrary/Common/Audio/InOut.sc	/^SharedOut : AbstractOut {$/;"	c
Sheet	quarks/cruciallib/Gui/Dialogs.sc	/^Sheet {$/;"	c
ShouldNotImplementError	SCClassLibrary/Common/Core/Error.sc	/^ShouldNotImplementError : MethodError {$/;"	c
ShutDown	SCClassLibrary/Common/Control/SystemActions.sc	/^ShutDown : AbstractSystemAction {$/;"	c
Silence	quarks/cruciallib/Players/Silence.sc	/^Silence : SynthlessPlayer {$/;"	c
Silence	quarks/cruciallib/Players/Silence.sc	/^Silence is a player that doesn't have any output at all.$/;"	c
Silent	SCClassLibrary/Common/Audio/Line.sc	/^Silent {$/;"	c
SimpleController	SCClassLibrary/Common/GUI/Model.sc	/^SimpleController {$/;"	c
SimpleKDRUnit	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^SimpleKDRUnit {$/;"	c
SimpleKDRUnitGui	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponderGui.sc	/^SimpleKDRUnitGui : KeyCodeResponderGui {$/;"	c
SimpleLoopBuf	SCClassLibrary/Common/Audio/BufIO.sc	/^SimpleLoopBuf : MultiOutUGen {$/;"	c
SimpleNumber	SCClassLibrary/Common/Math/SimpleNumber.sc	/^SimpleNumber : Number {$/;"	c
SinChorus	quarks/cxaudio/cxaudio.sc	/^SinChorus { \/\/ different if odd or even voices!$/;"	c
SinOsc	SCClassLibrary/Common/Audio/Osc.sc	/^SinOsc : PureUGen {$/;"	c
SinOscFB	SCClassLibrary/Common/Audio/Osc.sc	/^SinOscFB : PureUGen {$/;"	c
SineWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^SineWarp : LinearWarp {$/;"	c
Size	SCClassLibrary/Common/Geometry/Size.sc	/^Size {$/;"	c
SkipJack	SCClassLibrary/Common/Control/SkipJack.sc	/^SkipJack {$/;"	c
Slew	SCClassLibrary/Common/Audio/Filter.sc	/^Slew : Filter {$/;"	c
Slider	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Slider : ViewRedirect { *key { ^\\slider }}$/;"	c
Slider2D	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Slider2D : ViewRedirect { *key { ^\\slider2D }}$/;"	c
Slope	SCClassLibrary/Common/Audio/Filter.sc	/^Slope : Filter {$/;"	c
SlotInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^SlotInspector {$/;"	c
Solver	quarks/MathLib/classes/Solver/Solver.sc	/^Solver : Object {$/;"	c
SortedList	SCClassLibrary/Common/Collections/SortedList.sc	/^SortedList : List {$/;"	c
SoundFile	SCClassLibrary/Common/Files/SoundFile.sc	/^SoundFile {$/;"	c
SoundFileFormats	quarks/cruciallib/Gui/SynthConsole.sc	/^SoundFileFormats { \/\/ an interface$/;"	c
SoundFileView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^SoundFileView : ViewRedirect { *key { ^\\soundFileView }}$/;"	c
SoundIn	SCClassLibrary/Common/Audio/AudioIn.sc	/^SoundIn  {$/;"	c
SparseArray	SCClassLibrary/Common/Collections/SparseArray.sc	/^SparseArray : Order {$/;"	c
Spawner	SCClassLibrary/Common/Streams/Pspawner.sc	/^Spawner : Pattern {$/;"	c
Spec	SCClassLibrary/Common/GUI/ControlModel.sc	/^Spec {$/;"	c
SpecCentroid	SCClassLibrary/Common/Audio/MachineListening.sc	/^SpecCentroid : UGen$/;"	c
SpecFlatness	SCClassLibrary/Common/Audio/MachineListening.sc	/^SpecFlatness : UGen$/;"	c
SpecPcile	SCClassLibrary/Common/Audio/MachineListening.sc	/^SpecPcile : UGen$/;"	c
Speech	SCClassLibrary/Common/osx/Speech.sc	/^Speech {$/;"	c
Spherical	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^Spherical : Number {$/;"	c
Splay	SCClassLibrary/Common/Audio/Splay.sc	/^Splay : UGen {$/;"	c
SplayAz	SCClassLibrary/Common/Audio/Splay.sc	/^SplayAz : UGen {$/;"	c
SplayZ	SCClassLibrary/Common/Audio/Splay.sc	/^SplayZ {$/;"	c
Spring	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^Spring : UGen {$/;"	c
StackLayout	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^StackLayout : GuiRedirect { *key { ^\\stackLayout } }$/;"	c
StandardL	SCClassLibrary/Common/Audio/Chaos.sc	/^StandardL : StandardN {}$/;"	c
StandardN	SCClassLibrary/Common/Audio/Chaos.sc	/^StandardN : ChaosGen {$/;"	c
StartUp	SCClassLibrary/Common/Control/SystemActions.sc	/^StartUp : AbstractSystemAction {$/;"	c
StaticIntegerSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^StaticIntegerSpec : StaticSpec {$/;"	c
StaticSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^StaticSpec : NoLagControlSpec {$/;"	c
StaticText	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^StaticText : ViewRedirect { *key { ^\\staticText }}$/;"	c
Stepper	SCClassLibrary/Common/Audio/Trig.sc	/^Stepper : UGen {$/;"	c
StereoConvolution2L	SCClassLibrary/Common/Audio/FFT2.sc	/^StereoConvolution2L : MultiOutUGen$/;"	c
StereoNoiseChorus	quarks/cxaudio/cxaudio.sc	/^StereoNoiseChorus {$/;"	c
Stethoscope	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Stethoscope : GuiRedirect {$/;"	c
Stream	SCClassLibrary/Common/Streams/Stream.sc	/^Stream : AbstractFunction {$/;"	c
Stream2Trig	quarks/cruciallib/Sequencers/BusDriver.sc	/^Stream2Trig : StreamKrDur { \/\/ outputs just a single pulse trig with the amplitude of the value stream$/;"	c
StreamClutch	SCClassLibrary/Common/Streams/Stream.sc	/^StreamClutch : Stream {$/;"	c
StreamControl	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^StreamControl : AbstractPlayControl {$/;"	c
StreamKr	quarks/cruciallib/Sequencers/BusDriver.sc	/^StreamKr : Kr { \/\/ trigger is a kr rate trigger$/;"	c
StreamKrDur	quarks/cruciallib/Sequencers/BusDriver.sc	/^StreamKrDur : AbstractBusDriver {$/;"	c
StreamKrDurGui	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^StreamKrDurGui : HasSubjectGui {$/;"	c
StreamSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^StreamSpec : HasItemSpec {$/;"	c
StringGui	SCClassLibrary/Common/GUI/guicrucial/StringGui.sc	/^StringGui : ObjectGui {$/;"	c
StringInspector	SCClassLibrary/Common/GUI/Inspector.sc	/^StringInspector : ObjectInspector {$/;"	c
SubclassResponsibilityError	SCClassLibrary/Common/Core/Error.sc	/^SubclassResponsibilityError : MethodError {$/;"	c
SubsampleOffset	SCClassLibrary/Common/Audio/InfoUGens.sc	/^SubsampleOffset : InfoUGenBase {}$/;"	c
Sum3	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^Sum3 : UGen {$/;"	c
Sum4	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^Sum4 : UGen {$/;"	c
Surf	quarks/cxaudio/cxaudio.sc	/^Surf {$/;"	c
Sweep	SCClassLibrary/Common/Audio/Trig.sc	/^Sweep : UGen {$/;"	c
SwitchableKeyDownResponder	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^SwitchableKeyDownResponder : KeyDownResponderGroup {$/;"	c
Symbol	SCClassLibrary/Common/Core/Symbol.sc	/^Symbol {$/;"	c
SymbolSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^SymbolSpec : NonControlSpec {}$/;"	c
SyncSaw	SCClassLibrary/Common/Audio/Osc.sc	/^SyncSaw : PureUGen {$/;"	c
Synth	SCClassLibrary/Common/Control/Node.sc	/^Synth : Node {$/;"	c
SynthConsole	quarks/cruciallib/Gui/SynthConsole.sc	/^SynthConsole : AbstractConsole  {$/;"	c
SynthControl	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^SynthControl : AbstractPlayControl {$/;"	c
SynthDef	SCClassLibrary/Common/Audio/SynthDef.sc	/^SynthDef {$/;"	c
SynthDefControl	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^SynthDefControl : SynthControl {$/;"	c
SynthDefOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^SynthDefOld : SynthDef {$/;"	c
SynthDesc	SCClassLibrary/Common/Audio/SynthDesc.sc	/^SynthDesc {$/;"	c
SynthDescLib	SCClassLibrary/Common/Audio/SynthDesc.sc	/^SynthDescLib {$/;"	c
SynthlessPlayer	quarks/cruciallib/Players/AbstractPlayer.sc	/^SynthlessPlayer : AbstractPlayer {$/;"	c
SystemClock	SCClassLibrary/Common/Core/Clock.sc	/^SystemClock : Clock {$/;"	c
SystemSynthDefs	SCClassLibrary/Common/Audio/SystemSynthDefs.sc	/^SystemSynthDefs {$/;"	c
T2A	SCClassLibrary/Common/Audio/Line.sc	/^T2A : K2A { \/\/ control rate to audio rate trigger converter.$/;"	c
T2K	SCClassLibrary/Common/Audio/Line.sc	/^T2K : A2K { \/\/ audio rate to control rate trigger converter.$/;"	c
TBall	SCClassLibrary/Common/Audio/PhysicalModel.sc	/^TBall : UGen {$/;"	c
TChoose	SCClassLibrary/Common/Audio/Osc.sc	/^TChoose {$/;"	c
TDelay	SCClassLibrary/Common/Audio/Trig.sc	/^TDelay : Trig1 {$/;"	c
TDuty	SCClassLibrary/Common/Audio/Demand.sc	/^TDuty : Duty {$/;"	c
TDuty_old	SCClassLibrary/Common/Audio/Demand.sc	/^TDuty_old  {$/;"	c
TExpRand	SCClassLibrary/Common/Audio/Noise.sc	/^TExpRand : UGen {$/;"	c
TGrains	SCClassLibrary/Common/Audio/BufIO.sc	/^TGrains : MultiOutUGen {$/;"	c
TIRand	SCClassLibrary/Common/Audio/Noise.sc	/^TIRand : UGen {$/;"	c
TRand	SCClassLibrary/Common/Audio/Noise.sc	/^TRand : UGen {$/;"	c
TWChoose	SCClassLibrary/Common/Audio/Osc.sc	/^TWChoose {$/;"	c
TWindex	SCClassLibrary/Common/Audio/Noise.sc	/^TWindex : UGen {$/;"	c
TabFileReader	SCClassLibrary/Common/Streams/TabFileReader.sc	/^TabFileReader : FileReader {$/;"	c
TabletSlider2D	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^TabletSlider2D : ViewRedirect { *key { ^\\tabletSlider2D }}$/;"	c
TabletView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^TabletView : ViewRedirect { *key { ^\\tabletView }}$/;"	c
Tap	SCClassLibrary/Common/Audio/BufIO.sc	/^Tap : UGen {$/;"	c
Task	SCClassLibrary/Common/Streams/Stream.sc	/^Task : PauseStream {$/;"	c
TaskProxy	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^TaskProxy : PatternProxy {$/;"	c
TaskProxyAllGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^TaskProxyAllGui :JITGui {$/;"	c
TaskProxyGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^TaskProxyGui : JITGui {$/;"	c
Tdef	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^Tdef : TaskProxy {$/;"	c
TdefAllGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^TdefAllGui : TaskProxyAllGui {$/;"	c
TdefGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^TdefGui : TaskProxyGui {$/;"	c
Tempo	quarks/cruciallib/Scheduling/Tempo.sc	/^Tempo  {$/;"	c
TempoBus	quarks/cruciallib/Scheduling/TempoBus.sc	/^TempoBus   {$/;"	c
TempoBusClock	SCClassLibrary/JITLib/ProxySpace/TempoBusClock.sc	/^TempoBusClock : TempoClock {$/;"	c
TempoClock	SCClassLibrary/Common/Core/Clock.sc	/^TempoClock : Clock {$/;"	c
TempoGui	quarks/cruciallib/Scheduling/TempoGui.sc	/^TempoGui : ObjectGui {$/;"	c
TempoPlayer	quarks/cruciallib/Players/TempoPlayer.sc	/^TempoPlayer : KrPlayer { \/\/Synthless$/;"	c
TempoSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^TempoSpec : Spec {$/;"	c
TestDependant	SCClassLibrary/Common/GUI/Model.sc	/^TestDependant {$/;"	c
TextArchiveMDPlugin	SCClassLibrary/Common/Audio/SynthDesc.sc	/^TextArchiveMDPlugin : AbstractMDPlugin {$/;"	c
TextField	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^TextField : ViewRedirect  { *key { ^\\textField }}$/;"	c
TextView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^TextView : ViewRedirect  { *key { ^\\textView }}$/;"	c
The	SCClassLibrary/Common/Audio/Chaos.sc	/^The name of the function is followed by one of N, L, or C.  These$/;"	c
The	SCClassLibrary/Common/Streams/NodeEvents.sc	/^The interface to these events is a hybrid of the Pattern and Node control interfaces consisting of$/;"	c
The	quarks/cxaudio/RBJeq.sc	/^The most straight forward implementation would be the Direct I form (using Eq 2):$/;"	c
There	SCClassLibrary/Common/Core/Clock.sc	/^There are several ideas of now:$/;"	c
These	SCClassLibrary/Common/Streams/NodeEvents.sc	/^These event types can be used in patterns, but are probably more useful for more static use$/;"	c
They	SCClassLibrary/Common/Streams/NodeEvents.sc	/^They follow the conventions of patterns, using integers (0,1,2,3) for addActions and$/;"	c
This	SCClassLibrary/Common/Audio/Chaos.sc	/^This is a set of iterative functions and differential equations that$/;"	c
This	SCClassLibrary/Common/Streams/NodeEvents.sc	/^This file defines Group and Synth event types similar to the Group and Synth classes.$/;"	c
This	quarks/MathLib/classes/various/Bessel.sc	/^This program is distributed in the hope that it will be useful,$/;"	c
This	quarks/MathLib/classes/various/Bessel.sc	/^This program is free software; you can redistribute it and\/or modify$/;"	c
Thread	SCClassLibrary/Common/Core/Thread.sc	/^Thread : Stream {$/;"	c
Thunk	SCClassLibrary/Common/Core/Function.sc	/^Thunk : AbstractFunction {$/;"	c
Tile	quarks/cruciallib/Gui/ActionButton.sc	/^Tile : ActionButton { \/\/ the name comes from Squeak$/;"	c
Timer	SCClassLibrary/Common/Audio/Trig.sc	/^Timer : UGen {$/;"	c
ToggleButton	quarks/cruciallib/Gui/ActionButton.sc	/^ToggleButton : SCButtonAdapter {$/;"	c
ToggleFF	SCClassLibrary/Common/Audio/Trig.sc	/^ToggleFF : UGen {$/;"	c
TouchResponder	SCClassLibrary/Common/Control/MIDIResponder.sc	/^TouchResponder : MIDIResponder {$/;"	c
Trafo	quarks/MathLib/classes/various/Trafo.sc	/^Trafo {$/;"	c
TreeView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^TreeView : ViewRedirect { *key { ^\\treeView }}$/;"	c
Trig	SCClassLibrary/Common/Audio/Trig.sc	/^Trig : Trig1 {$/;"	c
Trig1	SCClassLibrary/Common/Audio/Trig.sc	/^Trig1 : UGen {$/;"	c
TrigControl	SCClassLibrary/Common/Audio/InOut.sc	/^TrigControl : Control {}$/;"	c
TrigSpec	quarks/cruciallib/Instr/MoreSpecs.sc	/^TrigSpec : ControlSpec {$/;"	c
True	SCClassLibrary/Common/Core/Boolean.sc	/^True : Boolean {$/;"	c
Try	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^Try it:$/;"	c
Tuning	SCClassLibrary/Common/Collections/Scale.sc	/^Tuning {$/;"	c
TuningInfo	SCClassLibrary/Common/Collections/Scale.sc	/^TuningInfo {$/;"	c
TwoPole	SCClassLibrary/Common/Audio/Filter.sc	/^TwoPole : Filter {$/;"	c
TwoWayIdentityDictionary	SCClassLibrary/Common/Collections/ObjectTable.sc	/^TwoWayIdentityDictionary : Collection$/;"	c
TwoZero	SCClassLibrary/Common/Audio/Filter.sc	/^TwoZero : TwoPole {}$/;"	c
UGen	SCClassLibrary/Common/Audio/UGen.sc	/^UGen : AbstractFunction {$/;"	c
UGenInstr	quarks/cruciallib/Instr/Instr.sc	/^UGenInstr {$/;"	c
UGenInstrGui	quarks/cruciallib/Instr/InstrGui.sc	/^UGenInstrGui : InstrGui {$/;"	c
UGenThunk	SCClassLibrary/Common/Core/Function.sc	/^UGenThunk : Thunk {$/;"	c
URI	SCClassLibrary/SCDoc/SCDoc.sc	/^URI {$/;"	c
UnaryOpFunction	SCClassLibrary/Common/Core/AbstractFunction.sc	/^UnaryOpFunction : AbstractFunction {$/;"	c
UnaryOpFunctionProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^UnaryOpFunctionProxy : UnaryOpFunction {$/;"	c
UnaryOpPlug	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^UnaryOpPlug : AbstractOpPlug {$/;"	c
UnaryOpStream	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^UnaryOpStream : Stream {$/;"	c
UnaryOpUGen	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^UnaryOpUGen : BasicOpUGen {$/;"	c
UnicodeResponder	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^UnicodeResponder {$/;"	c
UniqueID	SCClassLibrary/Common/Collections/ObjectTable.sc	/^UniqueID {$/;"	c
Unix	SCClassLibrary/Common/Unix/Unix.sc	/^Unix {$/;"	c
UnixFILE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^UnixFILE : IOStream {$/;"	c
UnixPlatform	SCClassLibrary/Platform/Platform.sc	/^UnixPlatform : Platform$/;"	c
Unpack1FFT	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^Unpack1FFT : UGen {$/;"	c
UnpackFFT	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^UnpackFFT : MultiOutUGen {$/;"	c
Updater	quarks/cruciallib/Gui/Updater.sc	/^Updater {$/;"	c
UpdatingScalarPatchOut	quarks/cruciallib/Players/Patching.sc	/^UpdatingScalarPatchOut : ScalarPatchOut {$/;"	c
Use	SCClassLibrary/Common/Audio/SynthDesc.sc	/^Use of this synth in Patterns will not detect argument names automatically because of the duplicate name(s).".postln;$/;"	c
UserView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^UserView : ViewRedirect { *key { ^\\userView }}$/;"	c
VDiskIn	SCClassLibrary/Common/Audio/DiskIO.sc	/^VDiskIn : MultiOutUGen {$/;"	c
VLayout	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^VLayout : GuiRedirect { *key { ^\\vLayout }}$/;"	c
VLayoutView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^VLayoutView : ViewRedirect { *key { ^\\vLayoutView }}$/;"	c
VOsc	SCClassLibrary/Common/Audio/Osc.sc	/^VOsc : PureUGen {$/;"	c
VOsc3	SCClassLibrary/Common/Audio/Osc.sc	/^VOsc3 : PureUGen {$/;"	c
VSFP	quarks/cruciallib/Players/SFP/SFP.sc	/^VSFP : SFP {$/;"	c
VagueList	quarks/MathLib/classes/various/VagueList.sc	/^VagueList : List {$/;"	c
VarLag	SCClassLibrary/Common/Audio/Filter.sc	/^VarLag : Filter {$/;"	c
VarSaw	SCClassLibrary/Common/Audio/Osc.sc	/^VarSaw : PureUGen {$/;"	c
Vibrato	SCClassLibrary/Common/Audio/Osc.sc	/^Vibrato : PureUGen {$/;"	c
View	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^View : ViewRedirect { *key { ^\\view }}$/;"	c
ViewRedirect	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^ViewRedirect : GuiRedirect { \/\/ Abstract class$/;"	c
Volume	SCClassLibrary/Common/Control/Volume.sc	/^Volume {$/;"	c
Warp	SCClassLibrary/Common/GUI/ControlModel.sc	/^Warp {$/;"	c
Warp1	SCClassLibrary/Common/Audio/GrainUGens.sc	/^Warp1 : MultiOutUGen {$/;"	c
Watcher	SCClassLibrary/Common/Control/SkipJack.sc	/^Watcher : SkipJack {$/;"	c
WavetableSampleGui	quarks/cruciallib/Sample/SampleGui.sc	/^WavetableSampleGui : SampleGui {$/;"	c
WebView	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^WebView : ViewRedirect { *key { ^\\webView }}$/;"	c
WeighBag	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^WeighBag  { $/;"	c
WeighBag	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^WeighBag works similar to Bag: it contains every kind of element only once $/;"	c
When	SCClassLibrary/Common/Core/Finalize.sc	/^When the garbage collector collects this object it will call the C function you$/;"	c
WhiteNoise	SCClassLibrary/Common/Audio/Noise.sc	/^WhiteNoise : UGen {$/;"	c
WidthFirstUGen	SCClassLibrary/Common/Audio/FFT.sc	/^WidthFirstUGen : UGen$/;"	c
WiiCalibrationInfo	SCClassLibrary/Common/Control/WII.sc	/^WiiCalibrationInfo {$/;"	c
WiiMote	SCClassLibrary/Common/Control/WII.sc	/^WiiMote {$/;"	c
WiiMoteGUI	SCClassLibrary/Common/GUI/PlusGUI/Control/WiiMoteGUI.sc	/^WiiMoteGUI {$/;"	c
Window	SCClassLibrary/Common/GUI/ViewRedirect.sc	/^Window : GuiRedirect {$/;"	c
WindowsPlatform	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^WindowsPlatform : Platform$/;"	c
With	SCClassLibrary/Common/Streams/NodeEvents.sc	/^With the exception of ~server, ~latency, and ~instrument any key in the event can have an array as a value and the standard rules of multi-channel expansion will be followed.$/;"	c
Would	SCClassLibrary/Common/Streams/NodeEvents.sc	/^Would start a group with nodeID = 2 and play a synth within that group.  If the event id is left unspecified, it is automatically allocated when the event is played.$/;"	c
Wrap	SCClassLibrary/Common/Audio/Trig.sc	/^Wrap : InRange {}$/;"	c
WrapIndex	SCClassLibrary/Common/Audio/Osc.sc	/^WrapIndex : Index {$/;"	c
XFade2	SCClassLibrary/Common/Audio/Pan.sc	/^XFade2 : UGen {$/;"	c
XFader	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^XFader  {  \/\/ UNIPOLAR$/;"	c
XFader4	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^XFader4  {$/;"	c
XFaderN	quarks/cruciallib/UncoupledUsefulThings/AudioHelpers.sc	/^XFaderN  {$/;"	c
XIn	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^XIn {$/;"	c
XInFeedback	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^XInFeedback {$/;"	c
XLine	SCClassLibrary/Common/Audio/Line.sc	/^XLine : UGen {$/;"	c
XOut	SCClassLibrary/Common/Audio/InOut.sc	/^XOut : AbstractOut {$/;"	c
Xor	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^Xor : AbstractConstraint { \/\/ both are always evaluated$/;"	c
You	SCClassLibrary/Common/Core/Clock.sc	/^You should only change the tempo 'now'. You can't set the tempo at some beat in the future or past, even though you might think so from the methods.$/;"	c
You	SCClassLibrary/Common/Core/Finalize.sc	/^You should put your C function pointer into cFunction, and the finalizable object into 'object'.$/;"	c
ZeroCrossing	SCClassLibrary/Common/Audio/Trig.sc	/^ZeroCrossing : UGen {$/;"	c
abrevPath	quarks/cruciallib/Sample/Sample.sc	/^	abrevPath { ^this.class.abrevPath(this.soundFilePath) }$/;"	m
abs	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	abs { ^this.performUnaryOp('abs') }$/;"	m
abs	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	abs { ^this.composeUnaryOp('abs') }$/;"	m
abs	SCClassLibrary/Common/Core/Symbol.sc	/^	abs { ^this }$/;"	m
abs	SCClassLibrary/Common/Geometry/Point.sc	/^	abs { ^x.abs @ y.abs }$/;"	m
abs	SCClassLibrary/Common/Math/Complex.sc	/^	abs { ^hypot(real, imag) }$/;"	m
abs	SCClassLibrary/Common/Math/Signal.sc	/^	abs { _Abs; ^this.primitiveFailed }$/;"	m
abs	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	abs { _Abs; ^this.primitiveFailed }$/;"	m
abs	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	abs { ^x.abs @ y.abs @ z.abs }$/;"	m
absdif	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	absdif { arg aNumber, adverb; ^this.performBinaryOp('absdif', aNumber, adverb) }$/;"	m
absdif	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	absdif { arg function, adverb; ^this.composeBinaryOp('absdif', function, adverb) }$/;"	m
absdif	SCClassLibrary/Common/Math/Signal.sc	/^	absdif { arg aNumber; _AbsDif; ^aNumber.performBinaryOpOnSignal('absdif', this) }$/;"	m
absdif	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	absdif { arg aNumber, adverb; _AbsDif; ^aNumber.performBinaryOpOnSimpleNumber('absdif', this, adverb) }$/;"	m
absoluteBounds	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	absoluteBounds {$/;"	m
absoluteBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	absoluteBounds {$/;"	m
absoluteBounds	SCClassLibrary/QtCollider/QView.sc	/^  absoluteBounds {$/;"	m
absolutePath	SCClassLibrary/Common/Collections/String.sc	/^	absolutePath {$/;"	m
absolutePath	SCClassLibrary/Platform/windows/SystemOverwrites/overwrites.sc	/^	absolutePath {$/;"	m
accelerated	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	accelerated {$/;"	m
accelerated_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	accelerated_ {|aBool| \/\/ if yes ensure to use CoreImages$/;"	m
accepts	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	accepts { |obj|$/;"	m
accepts	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	accepts { |obj| ^true	}$/;"	m
accepts	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	accepts { |obj|$/;"	m
accepts	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	accepts { |obj|$/;"	m
accepts	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	accepts { |obj|$/;"	m
accepts	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	accepts { |obj|$/;"	m
accepts	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	accepts { |obj| ^obj.isNil or: { obj.isKindOf(this.class.observedClass) } }$/;"	m
acceptsMouse	SCClassLibrary/QtCollider/QView.sc	/^  acceptsMouse {$/;"	m
acceptsMouseOver	SCClassLibrary/QtCollider/QView.sc	/^  acceptsMouseOver { ^this.getProperty(\\_qc_win_mouse_tracking) == true }$/;"	m
acceptsMouseOver	SCClassLibrary/QtCollider/QWindow.sc	/^  acceptsMouseOver { ^view.acceptsMouseOver }$/;"	m
acceptsMouseOver_	SCClassLibrary/QtCollider/QView.sc	/^  acceptsMouseOver_ { arg flag; this.setProperty(\\_qc_win_mouse_tracking, flag == true) }$/;"	m
acceptsMouseOver_	SCClassLibrary/QtCollider/QWindow.sc	/^  acceptsMouseOver_ { arg flag; view.acceptsMouseOver_(flag) }$/;"	m
acceptsMouse_	SCClassLibrary/QtCollider/QView.sc	/^  acceptsMouse_ { arg bool;$/;"	m
acos	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	acos { ^this.performUnaryOp('acos') }$/;"	m
acos	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	acos { ^this.composeUnaryOp('acos') }$/;"	m
acos	SCClassLibrary/Common/Core/Symbol.sc	/^	acos { ^this }$/;"	m
acos	SCClassLibrary/Common/Math/Signal.sc	/^	acos { _ArcCos; ^this.primitiveFailed }$/;"	m
acos	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	acos { _ArcCos; ^this.primitiveFailed }$/;"	m
action	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	action { ^view.action }$/;"	m
action_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	action_ { arg f; view.action_(f) }$/;"	m
action_	SCClassLibrary/QtCollider/BasicViews.sc	/^  action_ { arg func;$/;"	m
action_	SCClassLibrary/QtCollider/BasicViews.sc	/^  action_ { arg handler;$/;"	m
action_	SCClassLibrary/QtCollider/QUserView.sc	/^  action_ { arg func;$/;"	m
action_	SCClassLibrary/QtCollider/QView.sc	/^  action_ { arg func;$/;"	m
activeHi_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	activeHi_ { arg val;$/;"	m
activeHi_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	activeHi_ { arg val;$/;"	m
activeHi_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  activeHi_ { arg aFloat;$/;"	m
activeLo_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	activeLo_ { arg val;$/;"	m
activeLo_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	activeLo_ { arg val;$/;"	m
activeLo_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  activeLo_ { arg aFloat;$/;"	m
activeProxies	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	activeProxies { ^object !? { object.arProxyNames({ |px, key| px.isPlaying }) } ? [] }$/;"	m
activeProxies	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	activeProxies { ^proxyspace.arProxyNames({ |px, key| px.isPlaying }) }$/;"	m
activeProxies	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	activeProxies { ^this.arProxyNames({ |px, key| px.isPlaying }) }$/;"	m
activeRange_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	activeRange_ { arg val;$/;"	m
activeRange_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	activeRange_ { arg val;$/;"	m
activeRange_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  activeRange_ { arg aFloat;$/;"	m
activeValue_	quarks/cruciallib/Editors/NumberEditor.sc	/^	activeValue_ { arg val;$/;"	m
activeValue_	quarks/cruciallib/Sequencers/BusDriver.sc	/^	activeValue_ { |v|$/;"	m
active_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	active_ { arg activate;$/;"	m
activex_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	activex_ { arg val;$/;"	m
activex_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  activex_ { arg aFloat;$/;"	m
activey_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	activey_ { arg val;$/;"	m
activey_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  activey_ { arg aFloat;$/;"	m
add	SCClassLibrary/Common/Audio/SynthDef.sc	/^	add { arg libname, completionMsg, keepDef = true;$/;"	m
add	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	add { |synthdesc|$/;"	m
add	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	add { arg item;$/;"	m
add	SCClassLibrary/Common/Collections/Bag.sc	/^	add { arg item, count=1;$/;"	m
add	SCClassLibrary/Common/Collections/Collection.sc	/^	add { ^this.subclassResponsibility(thisMethod) }$/;"	m
add	SCClassLibrary/Common/Collections/Dictionary.sc	/^	add { arg anAssociation;$/;"	m
add	SCClassLibrary/Common/Collections/Interval.sc	/^	add { ^this.shouldNotImplement(thisMethod) }$/;"	m
add	SCClassLibrary/Common/Collections/Library.sc	/^	add { arg assn;$/;"	m
add	SCClassLibrary/Common/Collections/LinkedList.sc	/^	add { arg obj;$/;"	m
add	SCClassLibrary/Common/Collections/List.sc	/^	add { arg item; array = array.add(item); }$/;"	m
add	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	add { arg anAssociation;$/;"	m
add	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	add { arg obj;$/;"	m
add	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	add { | value |$/;"	m
add	SCClassLibrary/Common/Collections/Set.sc	/^	add { arg item;$/;"	m
add	SCClassLibrary/Common/Collections/SortedList.sc	/^	add { arg item;$/;"	m
add	SCClassLibrary/Common/Collections/SparseArray.sc	/^	add { arg obj;$/;"	m
add	SCClassLibrary/Common/Control/OSC.sc	/^	add { arg child;$/;"	m
add	SCClassLibrary/Common/Control/OSCBundle.sc	/^	add { arg msg; messages = messages.add(msg) }$/;"	m
add	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	add {$/;"	m
add	SCClassLibrary/Common/Control/OSCresponder.sc	/^	add { this.class.add(this); }$/;"	m
add	SCClassLibrary/Common/Control/OSCresponder.sc	/^	add {$/;"	m
add	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	add {|funcProxy| this.subclassResponsibility(thisMethod) } \/\/ proxies call this to add themselves to this dispatcher; should register this if needed$/;"	m
add	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	add {|funcProxy|$/;"	m
add	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	add {|newFunc| func = func.addFunc(newFunc); this.changed(\\function); }$/;"	m
add	SCClassLibrary/Common/Control/Score.sc	/^	add { arg bundle;$/;"	m
add	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	add { | beats, args|$/;"	m
add	SCClassLibrary/Common/Core/Color.sc	/^	add { arg aColor, opacity=1.0;$/;"	m
add	SCClassLibrary/Common/Core/Nil.sc	/^	add { arg value;$/;"	m
add	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	add { |child|$/;"	m
add	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	add { arg view;$/;"	m
add	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	add { arg aView; view.add(aView) }$/;"	m
add	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	add { arg child;$/;"	m
add	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	add { arg aView; view.add(aView) }$/;"	m
add	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	add { arg child;$/;"	m
add	SCClassLibrary/Common/Geometry/Point.sc	/^	add { arg point;$/;"	m
add	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	add { | obj, channelOffset = 0, extraArgs, now = true |$/;"	m
add	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	add {$/;"	m
add	SCClassLibrary/QtCollider/QLayout.sc	/^  add { arg item, row, column, align;$/;"	m
add	SCClassLibrary/QtCollider/QLayout.sc	/^  add { arg item, stretch = 0, align;$/;"	m
add	SCClassLibrary/QtCollider/QLayout.sc	/^  add { arg view; this.insert(view, -1) }$/;"	m
add	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	add { arg item; array = array.put(size, item); size = size + 1 }$/;"	m
add	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	add { arg item;$/;"	m
add	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	add { arg item, ntimes=1;$/;"	m
add	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	add { arg cart;$/;"	m
add	quarks/cruciallib/Control/CCBank.sc	/^	add { arg key,ccnum;$/;"	m
add	quarks/cruciallib/Gui/CXMenu.sc	/^	add { arg nf;$/;"	m
add	quarks/cruciallib/Instr/Instr.sc	/^	add { arg args, libname, completionMsg, keepDef = true;$/;"	m
add	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	add { arg constraint;$/;"	m
addAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	addAction { arg func, selector=\\action;$/;"	m
addAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	addAction { arg func, selector=\\action;$/;"	m
addAction	SCClassLibrary/QtCollider/QView.sc	/^  addAction { arg func, selector=\\action;$/;"	m
addAction	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	addAction { arg func;$/;"	m
addAfterMsg	SCClassLibrary/Common/Control/Node.sc	/^	addAfterMsg {  arg aNode, args;$/;"	m
addAfterMsg	SCClassLibrary/Common/Control/Node.sc	/^	addAfterMsg {  arg aNode;$/;"	m
addAll	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	addAll { arg aCollection;$/;"	m
addAll	SCClassLibrary/Common/Collections/Collection.sc	/^	addAll { | aCollection | aCollection.asCollection.do { | item | this.add(item) } }$/;"	m
addAll	SCClassLibrary/Common/Collections/SortedList.sc	/^	addAll { arg aCollection;$/;"	m
addAll	SCClassLibrary/Common/Control/OSCBundle.sc	/^	addAll { arg mgs; messages = messages.addAll(mgs) }$/;"	m
addAll	SCClassLibrary/Common/Core/Nil.sc	/^	addAll { arg array; ^array.asArray }$/;"	m
addAll	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	addAll { arg array;$/;"	m
addAr	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addAr { arg name, values;$/;"	m
addBeforeMsg	SCClassLibrary/Common/Control/Node.sc	/^	addBeforeMsg {  arg aNode, args;$/;"	m
addBeforeMsg	SCClassLibrary/Common/Control/Node.sc	/^	addBeforeMsg {  arg aNode;$/;"	m
addCatsToTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	addCatsToTree { |class, fileslist|$/;"	m
addChebyshev	SCClassLibrary/Common/Math/Signal.sc	/^	addChebyshev { arg harmonicNumber = 1, amplitude = 1.0;$/;"	m
addChild	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	addChild { arg responder;$/;"	m
addChild	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	addChild {|child|$/;"	m
addChild	SCClassLibrary/QtCollider/QTreeView.sc	/^  addChild { arg strings;$/;"	m
addCol	quarks/MathLib/classes/various/Matrix.sc	/^	addCol { arg colVals;$/;"	m
addConstant	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addConstant { arg value;$/;"	m
addControlName	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addControlName { arg cn;$/;"	m
addControlsFromArgsOfFunc	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addControlsFromArgsOfFunc { arg func, rates, skipArgs=0;$/;"	m
addDependant	SCClassLibrary/Common/Core/Nil.sc	/^	addDependant {}$/;"	m
addDependant	SCClassLibrary/Common/Core/Object.sc	/^	addDependant { arg dependant;$/;"	m
addDivAfter	SCClassLibrary/SCDoc/SCDoc.sc	/^    addDivAfter {|id, div, title, childs|$/;"	m
addDocument	SCClassLibrary/Common/GUI/PlusGUI/Core/KernelPlusGUI.sc	/^	addDocument {$/;"	m
addDur	SCClassLibrary/Common/Streams/Patterns.sc	/^	addDur { arg x; ^Paddp(\\dur, x, this) }$/;"	m
addExits	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	addExits { arg terminators; $/;"	m
addFilter	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	addFilter {|filter|$/;"	m
addFirst	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	addFirst { arg item; ^this.insert(0, item) }$/;"	m
addFirst	SCClassLibrary/Common/Collections/LinkedList.sc	/^	addFirst { arg obj;$/;"	m
addFirst	SCClassLibrary/Common/Collections/List.sc	/^	addFirst { arg item; array = array.addFirst(item); }$/;"	m
addFlowLayout	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	addFlowLayout { |margin, gap|$/;"	m
addFlowLayout	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	addFlowLayout { |margin, gap|$/;"	m
addFlowLayout	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	addFlowLayout { |margin, gap|$/;"	m
addFlowLayout	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	addFlowLayout { arg margin, gap;$/;"	m
addFlowLayout	SCClassLibrary/QtCollider/QView.sc	/^  addFlowLayout { arg margin, gap;$/;"	m
addFlowLayout	SCClassLibrary/QtCollider/QWindow.sc	/^  addFlowLayout { arg margin, gap; ^view.addFlowLayout( margin, gap ); }$/;"	m
addFunc	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	addFunc { arg ... functions;$/;"	m
addFunc	SCClassLibrary/Common/Core/Nil.sc	/^	addFunc { arg ... functions;$/;"	m
addFunc	SCClassLibrary/Common/Core/Object.sc	/^	addFunc { arg ... functions;$/;"	m
addFuncTo	SCClassLibrary/Common/Core/Object.sc	/^	addFuncTo { arg variableName ... functions;$/;"	m
addFunction	SCClassLibrary/Common/Control/OSCBundle.sc	/^	addFunction { arg func;$/;"	m
addFunction	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	addFunction { |event, function |$/;"	m
addIfNotNil	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	addIfNotNil { arg item; if(item.notNil,{ ^this.add(item) }) }$/;"	m
addInstanceActions	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	addInstanceActions {$/;"	m
addInstrOnlyArg	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	addInstrOnlyArg { arg name,value;$/;"	m
addIr	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addIr { arg name, values;$/;"	m
addItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  addItem { arg strings;$/;"	m
addKDR	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	addKDR { arg newGuy;$/;"	m
addKr	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addKr { arg name, values, lags;$/;"	m
addLine	SCClassLibrary/Common/Streams/History.sc	/^	addLine { |now, authID, lineStr|$/;"	m
addMaskTester	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	addMaskTester { arg requireMask,denyMask,function,description;$/;"	m
addMessage	SCClassLibrary/Common/Control/OSCBundle.sc	/^	addMessage { arg receiver, selector, args;$/;"	m
addMethod	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	addMethod {$/;"	m
addNodeCleanup	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	addNodeCleanup { |event, function |$/;"	m
addNodeMapControlNames	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	addNodeMapControlNames { |objCtlNames, except = #[]|$/;"	m
addNonControl	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addNonControl { arg name, values;$/;"	m
addNumber	quarks/MathLib/classes/various/Matrix.sc	/^	addNumber { arg aNumber;$/;"	m
addOSCRecvFunc	SCClassLibrary/DefaultLibrary/Main.sc	/^	addOSCRecvFunc { |func| prRecvOSCFunc = prRecvOSCFunc.addFunc(func) }$/;"	m
addOnSendMessage	SCClassLibrary/Common/Control/OSCBundle.sc	/^	addOnSendMessage { arg receiver, selector, args;$/;"	m
addOpenFile	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	addOpenFile {$/;"	m
addOpenPort	SCClassLibrary/Common/Control/OSC.sc	/^	addOpenPort {$/;"	m
addParent	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	addParent { "wrong object in NodeProxy.buildControl".error } \/\/ for now.$/;"	m
addParent	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	addParent { | proxy |$/;"	m
addPlayer	quarks/cruciallib/Players/PlayerMixer.sc	/^	addPlayer { arg player;$/;"	m
addPrepare	SCClassLibrary/Common/Control/OSCBundle.sc	/^	addPrepare { arg msg; preparationMessages = preparationMessages.add(msg) }$/;"	m
addReplaceKey	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	addReplaceKey { |replaced, replacer, spec|$/;"	m
addReplaceKey	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	addReplaceKey { |replaced, replacer, spec|$/;"	m
addReplaceMsg	SCClassLibrary/Common/Control/Node.sc	/^	addReplaceMsg { arg nodeToReplace, args;$/;"	m
addReplaceMsg	SCClassLibrary/Common/Control/Node.sc	/^	addReplaceMsg { arg nodeToReplace;$/;"	m
addRow	quarks/MathLib/classes/various/Matrix.sc	/^	addRow { arg rowVals;$/;"	m
addSecretIr	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	addSecretIr { arg object,initialValue,selector;$/;"	m
addSecretKr	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	addSecretKr { arg object,initialValue,selector;$/;"	m
addServer	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	addServer { |server|$/;"	m
addSimple	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	addSimple { arg modifier,function;$/;"	m
addSine	SCClassLibrary/Common/Math/Signal.sc	/^	addSine { arg harmonicNumber = 1, amplitude = 1.0, phase = 0.0;$/;"	m
addSpanning	SCClassLibrary/QtCollider/QLayout.sc	/^  addSpanning { arg item, row, column, rowSpan=1, columnSpan=1, align;$/;"	m
addStatusWatcher	SCClassLibrary/Common/Control/Server.sc	/^	addStatusWatcher {$/;"	m
addToAll	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	addToAll {|argkey| key = argkey; all.put(key, this) }$/;"	m
addToBundle	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	addToBundle { arg bundle, target;$/;"	m
addToChild	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	addToChild {$/;"	m
addToDefName	quarks/cruciallib/Instr/instrSupport.sc	/^	addToDefName { arg stream;$/;"	m
addToDefName	quarks/cruciallib/Instr/instrSupport.sc	/^	addToDefName {$/;"	m
addToEvent	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	addToEvent { arg event;$/;"	m
addToEvent	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	addToEvent { arg event;$/;"	m
addToFreed	SCClassLibrary/Common/Control/Engine.sc	/^	addToFreed { |block|$/;"	m
addToGui	quarks/cruciallib/Gui/CXMenu.sc	/^	addToGui { arg nf,resize=true;$/;"	m
addToHeadMsg	SCClassLibrary/Common/Control/Node.sc	/^	addToHeadMsg { arg aGroup, args;$/;"	m
addToHeadMsg	SCClassLibrary/Common/Control/Node.sc	/^	addToHeadMsg { arg aGroup;$/;"	m
addToLayout	quarks/cruciallib/Gui/SynthConsole.sc	/^	addToLayout { arg moreFunc;$/;"	m
addToOnClose	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	addToOnClose { | function | onClose = onClose.addFunc(function) }$/;"	m
addToOnClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	addToOnClose { | function | onClose = onClose.addFunc(function) }$/;"	m
addToSynth	SCClassLibrary/Common/Audio/FFT.sc	/^	addToSynth {$/;"	m
addToSynth	SCClassLibrary/Common/Audio/UGen.sc	/^	addToSynth {$/;"	m
addToSynthDef	quarks/cruciallib/Control/MIDIPlayer.sc	/^	addToSynthDef {  arg synthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Editors/NumberEditor.sc	/^	addToSynthDef {  arg synthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Editors/NumberEditor.sc	/^	addToSynthDef { arg synthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Players/AbstractPlayer.sc	/^	addToSynthDef {  arg synthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Players/instrSupport.sc	/^	addToSynthDef {  arg instrSynthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Players/instrSupport.sc	/^	addToSynthDef {  arg synthDef,name;$/;"	m
addToSynthDef	quarks/cruciallib/Players/instrSupport.sc	/^	addToSynthDef { arg synthDef, name;$/;"	m
addToSynthDef	quarks/cruciallib/Players/instrSupport.sc	/^	addToSynthDef { arg synthDef,name,defArg;$/;"	m
addToSynthDef	quarks/cruciallib/Scheduling/TempoBus.sc	/^	addToSynthDef {  arg synthDef,name;$/;"	m
addToTailMsg	SCClassLibrary/Common/Control/Node.sc	/^	addToTailMsg { arg aGroup, args;$/;"	m
addToTailMsg	SCClassLibrary/Common/Control/Node.sc	/^	addToTailMsg { arg aGroup;$/;"	m
addTr	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addTr { arg name, values;$/;"	m
addUGen	SCClassLibrary/Common/Audio/SynthDef.sc	/^	addUGen { arg ugen;$/;"	m
addUniqueMethod	SCClassLibrary/Common/Core/Object.sc	/^	addUniqueMethod { arg selector, function;$/;"	m
addValue	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	addValue { arg xval, yval;$/;"	m
address	SCClassLibrary/Common/Control/Engine.sc	/^	address { ^start }$/;"	m
adjoins	SCClassLibrary/Common/Control/Engine.sc	/^	adjoins { |block|$/;"	m
adjoint	quarks/MathLib/classes/various/Matrix.sc	/^	adjoint { \/\/ return the adjoint of the matrix$/;"	m
adjust	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	adjust {$/;"	m
adjustBufferSize	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	adjustBufferSize {$/;"	m
adjustBufferSize	SCClassLibrary/QtCollider/QStethoscope.sc	/^  adjustBufferSize {$/;"	m
adjustWindowSize	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	adjustWindowSize { arg n;$/;"	m
advance	SCClassLibrary/Common/Core/Clock.sc	/^	advance { | delta |$/;"	m
adviceLink	SCClassLibrary/Common/Core/Error.sc	/^	adviceLink {$/;"	m
adviceLinkPage	SCClassLibrary/Common/Core/Error.sc	/^	adviceLinkPage {$/;"	m
after	quarks/cruciallib/Instr/Instr.sc	/^	after { arg anode,args,bundle,atTime,out=0;$/;"	m
align	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	align { arg argQuant;$/;"	m
alignDoc	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	alignDoc {$/;"	m
align_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	align_ { arg align;$/;"	m
align_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	align_ { arg align;$/;"	m
align_	SCClassLibrary/QtCollider/BasicViews.sc	/^  align_ { arg aSymbol;$/;"	m
align_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  align_ { arg alignment;$/;"	m
aliveThreadIsRunning	SCClassLibrary/Common/Control/Server.sc	/^	aliveThreadIsRunning {$/;"	m
all	SCClassLibrary/Common/Streams/Stream.sc	/^	all { arg inval;$/;"	m
all	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	all {$/;"	m
all	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	all {$/;"	m
allChildren	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	allChildren {$/;"	m
allChildren	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	allChildren {$/;"	m
allChildren	quarks/cruciallib/Players/AbstractPlayer.sc	/^	allChildren {$/;"	m
allFolders	SCClassLibrary/Common/Files/PathName.sc	/^	allFolders {$/;"	m
allInstr	quarks/cruciallib/Instr/InstrBrowser.sc	/^    allInstr {$/;"	m
allNotesOff	SCClassLibrary/Common/Control/MIDIOut.sc	/^	allNotesOff { arg chan;$/;"	m
allSubclasses	SCClassLibrary/Common/Core/Kernel.sc	/^	allSubclasses {$/;"	m
allTuples	SCClassLibrary/Common/Collections/Array.sc	/^	allTuples { arg maxTuples = 16384;$/;"	m
alloc	SCClassLibrary/Common/Control/Buffer.sc	/^	alloc { arg completionMessage;$/;"	m
alloc	SCClassLibrary/Common/Control/Bus.sc	/^	alloc {$/;"	m
alloc	SCClassLibrary/Common/Control/Engine.sc	/^	alloc { arg n;$/;"	m
alloc	SCClassLibrary/Common/Control/Engine.sc	/^	alloc { |n = 1|$/;"	m
alloc	SCClassLibrary/Common/Control/Engine.sc	/^	alloc {$/;"	m
alloc	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  alloc { arg frames, channels=1, samplerate=44100;$/;"	m
allocBuffer	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	allocBuffer { arg argbufsize, argbufnum;$/;"	m
allocBuffer	SCClassLibrary/QtCollider/QStethoscope.sc	/^  allocBuffer { arg argbufsize, argbufnum;$/;"	m
allocBuffersAndStart	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	allocBuffersAndStart {$/;"	m
allocBus	quarks/cruciallib/Players/Patching.sc	/^	allocBus { |name,rate,numChannels|$/;"	m
allocMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	allocMsg { arg completionMessage;$/;"	m
allocPerm	SCClassLibrary/Common/Control/Engine.sc	/^	allocPerm {$/;"	m
allocRead	SCClassLibrary/Common/Control/Buffer.sc	/^	allocRead { arg argpath,startFrame = 0,numFrames = -1, completionMessage;$/;"	m
allocReadChannel	SCClassLibrary/Common/Control/Buffer.sc	/^	allocReadChannel { arg argpath,startFrame,numFrames = 0, channels = -1, completionMessage;$/;"	m
allocReadChannelMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	allocReadChannelMsg { arg argpath,startFrame = 0,numFrames = -1, channels, completionMessage;$/;"	m
allocReadMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	allocReadMsg { arg argpath,startFrame = 0,numFrames = -1, completionMessage;$/;"	m
allocSharedControls	SCClassLibrary/Common/Control/Server.sc	/^	allocSharedControls { arg numControls=1024;$/;"	m
allocateRemaining	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	allocateRemaining {$/;"	m
allowsReselection	SCClassLibrary/QtCollider/BasicViews.sc	/^  allowsReselection { ^this.getProperty( \\reactivationEnabled ) }$/;"	m
allowsReselection_	SCClassLibrary/QtCollider/BasicViews.sc	/^  allowsReselection_ { arg flag; ^this.setProperty( \\reactivationEnabled, flag ) }$/;"	m
alpha	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	alpha {$/;"	m
alpha_	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	alpha_ { arg alpha;$/;"	m
alpha_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	alpha_ { arg alpha;$/;"	m
alpha_	SCClassLibrary/QtCollider/QView.sc	/^  alpha_ { arg aFloat;$/;"	m
alpha_	SCClassLibrary/QtCollider/QWindow.sc	/^  alpha_ { arg value; view.alpha_(value); }$/;"	m
alt_scale_	SCClassLibrary/QtCollider/BasicViews.sc	/^  alt_scale_ { arg aFloat;$/;"	m
alwaysOnTop	SCClassLibrary/Common/GUI/Document.sc	/^	alwaysOnTop {$/;"	m
alwaysOnTop	SCClassLibrary/QtCollider/QView.sc	/^  alwaysOnTop {$/;"	m
alwaysOnTop	SCClassLibrary/QtCollider/QWindow.sc	/^  alwaysOnTop { ^view.alwaysOnTop; }$/;"	m
alwaysOnTop_	SCClassLibrary/Common/GUI/Document.sc	/^	alwaysOnTop_ { |boolean=true|$/;"	m
alwaysOnTop_	SCClassLibrary/QtCollider/QView.sc	/^  alwaysOnTop_ { arg boolean;$/;"	m
alwaysOnTop_	SCClassLibrary/QtCollider/QWindow.sc	/^  alwaysOnTop_ { arg boolean; view.alwaysOnTop_(boolean); }$/;"	m
alwaysYield	SCClassLibrary/Common/Core/Object.sc	/^	alwaysYield {$/;"	m
amclip	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	amclip { arg aNumber, adverb; ^this.performBinaryOp('amclip', aNumber, adverb) }$/;"	m
amclip	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	amclip { arg function, adverb; ^this.composeBinaryOp('amclip', function, adverb) }$/;"	m
amclip	SCClassLibrary/Common/Math/Signal.sc	/^	amclip { arg aNumber; _AMClip; ^aNumber.performBinaryOpOnSignal('amclip', this) }$/;"	m
amclip	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	amclip { arg aNumber, adverb; _AMClip; ^aNumber.performBinaryOpOnSimpleNumber('amclip', this, adverb) }$/;"	m
amp_	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	amp_ { arg v;$/;"	m
ampdb	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ampdb { ^this.performUnaryOp('ampdb') }$/;"	m
ampdb	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ampdb { ^this.composeUnaryOp('ampdb') }$/;"	m
ampdb	SCClassLibrary/Common/Core/Symbol.sc	/^	ampdb { ^this }$/;"	m
ampdb	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ampdb { _AmpDb; ^this.primitiveFailed }$/;"	m
amps_	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	amps_ { | values |$/;"	m
and	SCClassLibrary/Common/Core/Boolean.sc	/^	and { ^this.subclassResponsibility(thisMethod) }$/;"	m
and	SCClassLibrary/Common/Core/Boolean.sc	/^	and { arg that; ^that.value }$/;"	m
and	SCClassLibrary/Common/Core/Boolean.sc	/^	and { arg that; ^this }$/;"	m
and	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	and { arg constraint; ^Every([this,constraint]) }$/;"	m
angle	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	angle { ^this.performUnaryOp('angle') }$/;"	m
angle	SCClassLibrary/Common/Math/Complex.sc	/^	angle { ^atan2(imag, real) }$/;"	m
angle	SCClassLibrary/Common/Math/Polar.sc	/^	angle { ^theta }$/;"	m
angle	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	angle { if (this >= 0, {^0.0}, {^pi} ) }$/;"	m
angle	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	angle { ^this.theta }					\/\/ implemented as a projection$/;"	m
angle	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	angle { ^theta }						\/\/ implemented as a projection$/;"	m
angle	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	angle { ^this.theta }$/;"	m
angles	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	angles { ^[ this.theta, this.phi] }$/;"	m
angles	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	angles { ^[theta, phi] }$/;"	m
angles	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	angles { ^[ this.theta, 0.0 ] }$/;"	m
angles	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	angles { ^[ this.theta, 0.0 ] }$/;"	m
animate_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	animate_ { |bool|$/;"	m
animate_	SCClassLibrary/QtCollider/QUserView.sc	/^  animate_ { arg bool; this.invokeMethod( \\animate, bool ); }$/;"	m
annotate	quarks/cruciallib/Players/AbstractPlayer.sc	/^	annotate { arg thing,note;$/;"	m
annotatedInputProxies	quarks/cruciallib/Instr/Patch.sc	/^	annotatedInputProxies { arg offset=0,array; \/\/ [ input , deepOffset, argName, spec ]$/;"	m
any	SCClassLibrary/Common/Collections/Collection.sc	/^	any { | function |$/;"	m
anyChildExceeds	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	anyChildExceeds {$/;"	m
appendStream	SCClassLibrary/Common/Core/Nil.sc	/^	appendStream { arg stream; ^stream }$/;"	m
appendStream	SCClassLibrary/Common/Streams/Stream.sc	/^	appendStream { arg stream;$/;"	m
applicationStart	SCClassLibrary/Platform/osx/extMain.sc	/^	applicationStart {$/;"	m
appliedArgs_	quarks/cruciallib/Instr/Instr.sc	/^	appliedArgs_ { arg args;$/;"	m
apply	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	apply { arg ... args;$/;"	m
applyFilters	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	applyFilters {|filters, crop=0, region|$/;"	m
applyKernel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	applyKernel {|kernel, crop|$/;"	m
applyTo	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	applyTo { arg ... args;$/;"	m
applyTo	SCClassLibrary/Common/Core/Symbol.sc	/^	applyTo { arg firstArg ... args;$/;"	m
ar	SCClassLibrary/Common/Audio/Env.sc	/^	ar { arg doneAction = 0, gate = 1.0, timeScale = 1.0, mul = 1.0, add = 0.0;$/;"	m
ar	SCClassLibrary/Common/Control/Bus.sc	/^	ar { |numChannels=(this.numChannels), offset=0|$/;"	m
ar	SCClassLibrary/Common/Core/Symbol.sc	/^	ar { | val, lag |$/;"	m
ar	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	ar { | numChannels, offset = 0 |$/;"	m
ar	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	ar { arg key=\\out, numChannels, offset=0;$/;"	m
ar	quarks/cruciallib/Instr/Instr.sc	/^	ar { arg ... args; ^this.value(args) }$/;"	m
ar	quarks/cruciallib/Instr/Instr.sc	/^	ar { arg ... args; ^this.valueArray(args) }$/;"	m
ar	quarks/cruciallib/Instr/Instr.sc	/^	ar { arg ... inputs;$/;"	m
ar	quarks/cruciallib/Players/AbstractPlayer.sc	/^	ar {$/;"	m
ar	quarks/cruciallib/Players/AudioInPlayer.sc	/^	ar {$/;"	m
ar	quarks/cruciallib/Players/HasSubject.sc	/^	ar { ^subject.ar }$/;"	m
ar	quarks/cruciallib/Players/KrPlayer.sc	/^	ar { ^K2A.ar(this.kr) }$/;"	m
ar	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	ar {$/;"	m
ar	quarks/cruciallib/Players/Silence.sc	/^	ar { ^Silent.ar }$/;"	m
ar	quarks/cruciallib/Players/Silence.sc	/^	ar { ^Silent.ar(this.numChannels) }$/;"	m
arNames	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	arNames { ^prevState[\\arNames] }$/;"	m
arProxyNames	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	arProxyNames { |func=true| ^this.proxyNames(\\audio, func) }$/;"	m
arch	SCClassLibrary/Platform/Platform.sc	/^	arch {$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Control/Server.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Boolean.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Char.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Clock.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Function.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Kernel.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Nil.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Object.sc	/^	archiveAsCompileString { ^false }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Symbol.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Core/Thread.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Math/Float.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsCompileString	SCClassLibrary/Common/Math/Integer.sc	/^	archiveAsCompileString { ^true }$/;"	m
archiveAsObject	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	archiveAsObject { ^true }$/;"	m
archiveAsObject	SCClassLibrary/Common/Control/Server.sc	/^	archiveAsObject { ^true }$/;"	m
archiveAsObject	SCClassLibrary/Common/Core/Function.sc	/^	archiveAsObject { ^true }$/;"	m
archiveAsObject	SCClassLibrary/Common/Core/Kernel.sc	/^	archiveAsObject { ^true }$/;"	m
archiveAsObject	SCClassLibrary/Common/Core/Object.sc	/^	archiveAsObject { ^this.archiveAsCompileString.not }$/;"	m
argFromName	quarks/cruciallib/Instr/Patch.sc	/^	argFromName { arg argName;$/;"	m
argList	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	argList { arg skipThis = true;$/;"	m
argNameAt	quarks/cruciallib/Instr/Instr.sc	/^	argNameAt { arg i;$/;"	m
argNameAt	quarks/cruciallib/Instr/Patch.sc	/^	argNameAt { arg i; ^instr.argNameAt(i) }$/;"	m
argNameForInputAt	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	argNameForInputAt { arg i;$/;"	m
argNameForInputAt	SCClassLibrary/Common/Audio/UGen.sc	/^	argNameForInputAt { arg i;$/;"	m
argNames	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	argNames { ^def.argNames }$/;"	m
argNames	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	argNames { ^nil }$/;"	m
argNames	quarks/cruciallib/Instr/Instr.sc	/^	argNames { ^(func.def.argNames ? []).asList }$/;"	m
argNames	quarks/cruciallib/Instr/Instr.sc	/^	argNames {$/;"	m
argNames	quarks/cruciallib/Instr/Patch.sc	/^	argNames { ^this.instr.argNames }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/BufIO.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/EnvGen.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/FSinOsc.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/GrainUGens.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/IEnvGen.sc	/^	argNamesInputsOffset { ^2 }$/;"	m
argNamesInputsOffset	SCClassLibrary/Common/Audio/UGen.sc	/^	argNamesInputsOffset { ^1 }$/;"	m
arglist_	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	arglist_ { arg list;$/;"	m
argsSize	quarks/cruciallib/Instr/Instr.sc	/^	argsSize { ^argNames.size }$/;"	m
argsSize	quarks/cruciallib/Instr/Instr.sc	/^	argsSize { ^func.def.argNames.size }$/;"	m
argsSize	quarks/cruciallib/Instr/Instr.sc	/^	argsSize { ^this.funcDef.argNames.size - 1 }$/;"	m
args_	quarks/cruciallib/Instr/Patch.sc	/^	args_ { arg inputs;$/;"	m
argumentString	SCClassLibrary/Common/Core/Kernel.sc	/^	argumentString { arg withDefaultValues=true;$/;"	m
argv	SCClassLibrary/Common/Core/Kernel.sc	/^	argv { ^[] }$/;"	m
argv	SCClassLibrary/DefaultLibrary/Main.sc	/^	argv {$/;"	m
array_	quarks/cruciallib/Sample/Sample.sc	/^	array_ { arg a;$/;"	m
as	SCClassLibrary/Common/Collections/Scale.sc	/^	as { |class|$/;"	m
as	SCClassLibrary/Common/Core/Object.sc	/^	as { arg aSimilarClass; ^aSimilarClass.newFrom(this) }$/;"	m
as32Bits	SCClassLibrary/Common/Math/Float.sc	/^	as32Bits { _As32Bits }$/;"	m
asAbsolutePath	SCClassLibrary/Common/Collections/String.sc	/^	asAbsolutePath {$/;"	m
asAbsolutePath	SCClassLibrary/Common/Files/PathName.sc	/^	asAbsolutePath {$/;"	m
asArchive	SCClassLibrary/Common/Core/Object.sc	/^	asArchive {$/;"	m
asArray	SCClassLibrary/Common/Audio/Env.sc	/^	asArray {$/;"	m
asArray	SCClassLibrary/Common/Collections/Array2D.sc	/^	asArray { ^array }$/;"	m
asArray	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	asArray { ^this }$/;"	m
asArray	SCClassLibrary/Common/Collections/Collection.sc	/^	asArray { ^Array.new(this.size).addAll(this); }$/;"	m
asArray	SCClassLibrary/Common/Collections/List.sc	/^	asArray { ^array.copy }$/;"	m
asArray	SCClassLibrary/Common/Collections/SparseArray.sc	/^	asArray { ^array.copy }$/;"	m
asArray	SCClassLibrary/Common/Collections/SparseArray.sc	/^	asArray { ^this[_] ! this.size }$/;"	m
asArray	SCClassLibrary/Common/Core/Color.sc	/^	asArray { ^[red, green, blue, alpha] }$/;"	m
asArray	SCClassLibrary/Common/Core/Object.sc	/^	asArray { ^this.asCollection.asArray }$/;"	m
asArray	SCClassLibrary/Common/GUI/PlusGUI/Core/NilPlusGUI.sc	/^	asArray { ^[] }$/;"	m
asArray	SCClassLibrary/Common/Geometry/Point.sc	/^	asArray { ^[this.x, this.y] }$/;"	m
asArray	SCClassLibrary/Common/Geometry/Rect.sc	/^	asArray { ^[this.left, this.top, this.width, this.height] }$/;"	m
asArray	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	asArray {arg arrayType;$/;"	m
asArray	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asArray { ^[this.x, this.y, this.z] }$/;"	m
asArray	quarks/MathLib/classes/various/Matrix.sc	/^	asArray { var array; array = Array.new; \/\/ return an array of rows$/;"	m
asArrayForInterpolation	SCClassLibrary/Common/Audio/Env.sc	/^	asArrayForInterpolation {$/;"	m
asAscii	SCClassLibrary/Common/Core/Char.sc	/^	asAscii { ^this }$/;"	m
asAscii	SCClassLibrary/Common/Math/Integer.sc	/^	asAscii {$/;"	m
asAudioRateInput	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asAudioRateInput { |for|$/;"	m
asAudioRateInput	SCClassLibrary/Common/Core/Object.sc	/^	asAudioRateInput { ^if(this.rate != \\audio) { K2A.ar(this) } { this } }$/;"	m
asAudioRateInput	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asAudioRateInput { ^if(this == 0) { Silent.ar } { DC.ar(this) } }$/;"	m
asBag	SCClassLibrary/Common/Collections/Bag.sc	/^	asBag { ^this }$/;"	m
asBag	SCClassLibrary/Common/Collections/Collection.sc	/^	asBag { ^Bag.new(this.size).addAll(this); }$/;"	m
asBinOpString	SCClassLibrary/Common/Core/Symbol.sc	/^	asBinOpString {$/;"	m
asBinaryArchive	SCClassLibrary/Common/Core/Object.sc	/^	asBinaryArchive {$/;"	m
asBinaryDigits	SCClassLibrary/Common/Math/Integer.sc	/^	asBinaryDigits { arg numDigits = 8;$/;"	m
asBinaryString	SCClassLibrary/Common/Math/Integer.sc	/^	asBinaryString { | width=8 |$/;"	m
asBufWithValues	SCClassLibrary/Common/Control/Buffer.sc	/^	asBufWithValues {$/;"	m
asBufWithValues	SCClassLibrary/Common/Core/Ref.sc	/^	asBufWithValues {$/;"	m
asBufWithValues	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asBufWithValues {$/;"	m
asBuffer	SCClassLibrary/Common/Files/SoundFile.sc	/^	asBuffer { |server|$/;"	m
asBufnum	quarks/cruciallib/Players/instrSupport.sc	/^	asBufnum {$/;"	m
asBus	SCClassLibrary/Common/Control/asBus.sc	/^	asBus { ^this }$/;"	m
asBus	SCClassLibrary/Common/Control/asBus.sc	/^	asBus { arg rate = \\control,numChannels=1,server;$/;"	m
asBus	SCClassLibrary/Common/Control/asBus.sc	/^	asBus { arg rate,numChannels=1,server;$/;"	m
asBus	SCClassLibrary/Common/Control/asBus.sc	/^	asBus { arg rate,numChannels=1;$/;"	m
asBus	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	asBus { ^if(this.isNeutral) { nil } { bus } }$/;"	m
asBus	quarks/cruciallib/Scheduling/TempoBus.sc	/^	asBus {}$/;"	m
asBytes	SCClassLibrary/Common/Audio/SynthDef.sc	/^	asBytes {$/;"	m
asBytes	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	asBytes {$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asCartesian { ^this }$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	asCartesian { ^Cartesian.new(this.x, this.y, this.z) }$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	asCartesian { ^Cartesian.new(this.x, this.y, 0) }$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	asCartesian { ^Cartesian.new(this.real, this.imag, 0.0) }$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/extSequenceableCollection.sc	/^	asCartesian { ^Cartesian(this[0] ? 0, this[1] ? 0, this[2] ? 0) }$/;"	m
asCartesian	quarks/MathLib/classes/SpherCoords/extSimpleNumber.sc	/^	asCartesian { ^Cartesian.new(this, this, this) }$/;"	m
asClass	SCClassLibrary/Common/Core/Kernel.sc	/^	asClass { ^this }$/;"	m
asClass	SCClassLibrary/Common/Core/Symbol.sc	/^	asClass {$/;"	m
asCode	SCClassLibrary/JITLib/Patterns/extPostAsCode.sc	/^	asCode {$/;"	m
asCode	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	asCode { | includeSettings = true, includeMonitor = true, envir |$/;"	m
asCode	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	asCode {$/;"	m
asCollection	SCClassLibrary/Common/Collections/Collection.sc	/^	asCollection { ^this }$/;"	m
asCollection	SCClassLibrary/Common/Core/Nil.sc	/^	asCollection { ^[] }$/;"	m
asCollection	SCClassLibrary/Common/Core/Object.sc	/^	asCollection { ^[this] }$/;"	m
asColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	asColor {$/;"	m
asCompileString	SCClassLibrary/Common/Collections/String.sc	/^	asCompileString { _String_AsCompileString; }$/;"	m
asCompileString	SCClassLibrary/Common/Core/Object.sc	/^	asCompileString {$/;"	m
asCompileString	SCClassLibrary/Common/Core/Symbol.sc	/^	asCompileString { ^("'" ++ super.asString.escapeChar($') ++ "'") }$/;"	m
asCompileString	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	asCompileString {$/;"	m
asCompileString	quarks/cruciallib/Players/AbstractPlayer.sc	/^	asCompileString { \/\/ support arg sensitive formatting$/;"	m
asComplex	SCClassLibrary/Common/Audio/UGen.sc	/^	asComplex { ^Complex.new(this, 0.0) }$/;"	m
asComplex	SCClassLibrary/Common/Geometry/Point.sc	/^	asComplex { ^Complex.new(x,y) }$/;"	m
asComplex	SCClassLibrary/Common/Math/Complex.sc	/^	asComplex { ^this }$/;"	m
asComplex	SCClassLibrary/Common/Math/Polar.sc	/^	asComplex { ^Complex.new(this.real, this.imag) }$/;"	m
asComplex	SCClassLibrary/Common/Math/Signal.sc	/^	asComplex { ^Complex.new(this, 0.0) }$/;"	m
asComplex	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asComplex { ^Complex.new(this, 0.0) }$/;"	m
asComplex	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asComplex { ^Complex.new(x,y) }				\/\/ implemented as a projection$/;"	m
asComplex	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	asComplex { ^Complex.new(this.real, this.imag) }	\/\/ implemented as a projection$/;"	m
asControlInput	SCClassLibrary/Common/Audio/UGen.sc	/^	asControlInput { Error("can't set a control to a UGen").throw }$/;"	m
asControlInput	SCClassLibrary/Common/Collections/Array.sc	/^	asControlInput { ^this.collect(_.asControlInput) }$/;"	m
asControlInput	SCClassLibrary/Common/Collections/Event.sc	/^	asControlInput {$/;"	m
asControlInput	SCClassLibrary/Common/Control/Buffer.sc	/^	asControlInput { ^this.bufnum }$/;"	m
asControlInput	SCClassLibrary/Common/Control/Bus.sc	/^	asControlInput { ^this.index }$/;"	m
asControlInput	SCClassLibrary/Common/Control/Node.sc	/^	asControlInput { ^this.nodeID }$/;"	m
asControlInput	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asControlInput { ^this.value }$/;"	m
asControlInput	SCClassLibrary/Common/Core/Object.sc	/^	asControlInput { ^this }$/;"	m
asControlInput	SCClassLibrary/Common/Core/Ref.sc	/^	asControlInput { ^value.asControlInput }$/;"	m
asControlInput	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	asControlInput {$/;"	m
asControlInput	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	asControlInput {$/;"	m
asControlInput	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asControlInput { ^this.asArray }$/;"	m
asControlInput	quarks/cruciallib/Instr/Instr.sc	/^	asControlInput { ^this.value }$/;"	m
asControlName	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	asControlName {$/;"	m
asDefName	SCClassLibrary/Common/Control/asDefName.sc	/^	asDefName {	^name	}$/;"	m
asDefName	SCClassLibrary/Common/Control/asDefName.sc	/^	asDefName { \/\/ won't work immediately for Synth.new$/;"	m
asDefName	SCClassLibrary/Common/Control/asDefName.sc	/^	asDefName { ^this }$/;"	m
asDefName	SCClassLibrary/Common/Control/asDefName.sc	/^	asDefName { ^this.asString }$/;"	m
asDefName	SCClassLibrary/Common/Control/asDefName.sc	/^	asDefName {$/;"	m
asDefName	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	asDefName { ^source }$/;"	m
asDefName	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	asDefName { ^synthDef.name }$/;"	m
asDefName	quarks/cruciallib/Instr/Instr.sc	/^	asDefName { ^instr.asDefName }$/;"	m
asDefName	quarks/cruciallib/Instr/Instr.sc	/^	asDefName { arg args;$/;"	m
asDigit	SCClassLibrary/Common/Math/Integer.sc	/^	asDigit {$/;"	m
asDigits	SCClassLibrary/Common/Math/Integer.sc	/^	asDigits { arg base=10, numDigits;$/;"	m
asEnv	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	asEnv { arg env, minValue, maxValue, duration;$/;"	m
asEvent	SCClassLibrary/Common/Files/SoundFile.sc	/^	asEvent { | type = \\allocRead |$/;"	m
asEvent	SCClassLibrary/Common/Streams/Rest.sc	/^	asEvent { ^Event.silent(this) }$/;"	m
asEvent	SCClassLibrary/Common/Streams/Rest.sc	/^	asEvent {}$/;"	m
asEvent	quarks/cruciallib/Instr/Patch.sc	/^	asEvent {$/;"	m
asEventStreamPlayer	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	asEventStreamPlayer {}$/;"	m
asEventStreamPlayer	SCClassLibrary/Common/Streams/Patterns.sc	/^	asEventStreamPlayer { arg protoEvent;$/;"	m
asEventStreamPlayer	SCClassLibrary/Common/Streams/Stream.sc	/^	asEventStreamPlayer { ^this }$/;"	m
asEventStreamPlayer	SCClassLibrary/Common/Streams/Stream.sc	/^	asEventStreamPlayer { arg protoEvent;$/;"	m
asFileSafeChar	quarks/cruciallib/Players/pathUtilities.sc	/^	asFileSafeChar {$/;"	m
asFileSafeString	quarks/cruciallib/Players/pathUtilities.sc	/^	asFileSafeString { \/\/ this is more for protecting against \/ etc.$/;"	m
asFileSafeString	quarks/cruciallib/Players/pathUtilities.sc	/^	asFileSafeString {$/;"	m
asFloat	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asFloat { ^this.performUnaryOp('asFloat') }$/;"	m
asFloat	SCClassLibrary/Common/Collections/String.sc	/^	asFloat {$/;"	m
asFloat	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asFloat { ^this.composeUnaryOp('asFloat') }$/;"	m
asFloat	SCClassLibrary/Common/Core/Symbol.sc	/^	asFloat {$/;"	m
asFloat	SCClassLibrary/Common/Math/Complex.sc	/^	asFloat { ^real.asFloat }$/;"	m
asFloat	SCClassLibrary/Common/Math/Float.sc	/^	asFloat { ^this }$/;"	m
asFloat	SCClassLibrary/Common/Math/Signal.sc	/^	asFloat { _AsFloat; ^this.primitiveFailed }$/;"	m
asFloat	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asFloat { _AsFloat; ^this.primitiveFailed }$/;"	m
asFlowView	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	asFlowView {}$/;"	m
asFlowView	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	asFlowView { arg bounds;$/;"	m
asFlowView	SCClassLibrary/Common/GUI/guicrucial/gui.sc	/^	asFlowView { arg bounds;$/;"	m
asFlowView	SCClassLibrary/Common/GUI/osx/scide_scapp/flowViewSupportCocoa.sc	/^	asFlowView { arg bounds;$/;"	m
asFlowView	SCClassLibrary/Common/GUI/osx/scide_scapp/flowViewSupportCocoa.sc	/^	asFlowView { |bounds|$/;"	m
asFlowView	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	asFlowView { arg bounds;$/;"	m
asFraction	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asFraction { arg denominator=100, fasterBetter=true;$/;"	m
asFraction	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asFraction {|denominator=100, fasterBetter=true|$/;"	m
asFunction	SCClassLibrary/Common/Core/Kernel.sc	/^	asFunction {$/;"	m
asGetter	SCClassLibrary/Common/Core/Symbol.sc	/^	asGetter {$/;"	m
asGrid	SCClassLibrary/Common/GUI/Grid.sc	/^	asGrid { ^BlankGridLines.new }$/;"	m
asGrid	SCClassLibrary/Common/GUI/Grid.sc	/^	asGrid { ^this }$/;"	m
asGroup	SCClassLibrary/Common/Control/asGroup.sc	/^	asGroup {$/;"	m
asGroup	SCClassLibrary/Common/Control/asGroup.sc	/^	asGroup {}$/;"	m
asGroup	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	asGroup {$/;"	m
asGroup	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	asGroup { ^group.asGroup }$/;"	m
asHSV	SCClassLibrary/Common/Core/Color.sc	/^	asHSV {$/;"	m
asHexString	SCClassLibrary/Common/Math/Integer.sc	/^	asHexString { | width=8 |$/;"	m
asHtml	quarks/MathLib/classes/MarkovSet/extHTML.sc	/^	asHtml {$/;"	m
asIPString	SCClassLibrary/Common/Math/Integer.sc	/^	asIPString {$/;"	m
asInstr	quarks/cruciallib/Instr/Instr.sc	/^	asInstr { ^this }$/;"	m
asInstr	quarks/cruciallib/Instr/instrSupport.sc	/^	asInstr {$/;"	m
asInstr	quarks/cruciallib/Instr/instrSupport.sc	/^	asInstr {}$/;"	m
asInt	SCClassLibrary/Common/Core/Object.sc	/^	asInt { ^this.asInteger }$/;"	m
asInteger	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asInteger { ^this.performUnaryOp('asInteger') }$/;"	m
asInteger	SCClassLibrary/Common/Collections/String.sc	/^	asInteger {$/;"	m
asInteger	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asInteger { ^this.composeUnaryOp('asInteger') }$/;"	m
asInteger	SCClassLibrary/Common/Core/Boolean.sc	/^	asInteger { ^this.subclassResponsibility(thisMethod) }$/;"	m
asInteger	SCClassLibrary/Common/Core/Symbol.sc	/^	asInteger {$/;"	m
asInteger	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	asInteger {$/;"	m
asInteger	SCClassLibrary/Common/Math/Complex.sc	/^	asInteger { ^real.asInteger }$/;"	m
asInteger	SCClassLibrary/Common/Math/Signal.sc	/^	asInteger { _AsInt; ^this.primitiveFailed }$/;"	m
asInteger	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asInteger { _AsInt; ^this.primitiveFailed }$/;"	m
asInterfaceDef	quarks/cruciallib/Instr/instrSupport.sc	/^	asInterfaceDef {$/;"	m
asInterfaceDef	quarks/cruciallib/Instr/instrSupport.sc	/^	asInterfaceDef {}$/;"	m
asKeyValuePairs	SCClassLibrary/Common/Collections/Dictionary.sc	/^	asKeyValuePairs {$/;"	m
asList	SCClassLibrary/Common/Collections/Collection.sc	/^	asList { ^List.new(this.size).addAll(this); }$/;"	m
asList	SCClassLibrary/Common/Collections/List.sc	/^	asList { ^this }$/;"	m
asLocalPath	SCClassLibrary/SCDoc/SCDoc.sc	/^    asLocalPath {$/;"	m
asMIDIInPortUID	SCClassLibrary/Common/Control/asMIDIPort.sc	/^	asMIDIInPortUID {$/;"	m
asMIDIInPortUID	SCClassLibrary/Common/Control/asMIDIPort.sc	/^	asMIDIInPortUID {}$/;"	m
asMap	SCClassLibrary/Common/Control/Bus.sc	/^	asMap {$/;"	m
asMap	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	asMap {$/;"	m
asMultichannelArray	SCClassLibrary/Common/Audio/Env.sc	/^	asMultichannelArray {$/;"	m
asMultichannelSignal	SCClassLibrary/Common/Audio/Env.sc	/^	asMultichannelSignal { arg length = 400, class = (Signal);$/;"	m
asNSObject	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	asNSObject {$/;"	m
asNSObject	SCClassLibrary/Common/osx/objC/scide_scapp/SCWindowPlusCocoa.sc	/^	asNSObject {$/;"	m
asNSWindow	SCClassLibrary/Common/osx/objC/scide_scapp/SCWindowPlusCocoa.sc	/^	asNSWindow {$/;"	m
asNodeArg	SCClassLibrary/Common/Control/asNodeArg.sc	/^	asNodeArg {^this.asUGenInput} \/\/ replaced by asUGenInput$/;"	m
asNodeArg	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	asNodeArg { ^if(this.isNeutral) { nil } { this.busArg } }$/;"	m
asNodeID	SCClassLibrary/Common/Control/asTarget.sc	/^	asNodeID { ^0 }$/;"	m
asNodeID	SCClassLibrary/Common/Control/asTarget.sc	/^	asNodeID { ^nodeID }$/;"	m
asNodeID	SCClassLibrary/Common/Control/asTarget.sc	/^	asNodeID { ^this }$/;"	m
asNodeID	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	asNodeID { ^group.asNodeID }$/;"	m
asOSC	SCClassLibrary/Common/Control/asScore/asScore.sc	/^asOSC {$/;"	m
asOSCArgArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgArray { ^this.asControlInput }$/;"	m
asOSCArgArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgArray {$/;"	m
asOSCArgArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgArray {}$/;"	m
asOSCArgBundle	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgBundle { ^this.asControlInput }$/;"	m
asOSCArgBundle	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgBundle {$/;"	m
asOSCArgEmbeddedArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgEmbeddedArray { | array| ^array.add(this.asControlInput) }$/;"	m
asOSCArgEmbeddedArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgEmbeddedArray { | array| ^this.asArray.asOSCArgEmbeddedArray(array) }$/;"	m
asOSCArgEmbeddedArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgEmbeddedArray { | array| ^value.asOSCArgEmbeddedArray(array) }$/;"	m
asOSCArgEmbeddedArray	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asOSCArgEmbeddedArray { | array|$/;"	m
asOptionsString	SCClassLibrary/Common/Control/Server.sc	/^	asOptionsString { | port = 57110 |$/;"	m
asPageLayout	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	asPageLayout {}$/;"	m
asPageLayout	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	asPageLayout { arg name,bounds;$/;"	m
asPageLayout	SCClassLibrary/Common/GUI/guicrucial/gui.sc	/^	asPageLayout { arg name,bounds;$/;"	m
asPageLayout	SCClassLibrary/Common/GUI/osx/scide_scapp/flowViewSupportCocoa.sc	/^	asPageLayout { arg title,bounds;$/;"	m
asPageLayout	SCClassLibrary/QtCollider/flowViewSupportQt.sc	/^	asPageLayout { arg title,bounds;$/;"	m
asPageLayout	quarks/cruciallib/deprecated-3.5.sc	/^	asPageLayout {$/;"	m
asPoint	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asPoint { ^Point(this[0] ? 0, this[1] ? 0) }$/;"	m
asPoint	SCClassLibrary/Common/Geometry/Point.sc	/^	asPoint { ^this }$/;"	m
asPoint	SCClassLibrary/Common/Geometry/Size.sc	/^	asPoint { ^Point(width,height); }$/;"	m
asPoint	SCClassLibrary/Common/Math/Complex.sc	/^	asPoint { ^Point.new(this.real, this.imag) }$/;"	m
asPoint	SCClassLibrary/Common/Math/Polar.sc	/^	asPoint { ^Point.new(this.real, this.imag) }$/;"	m
asPoint	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asPoint { ^Point.new(this, this) }$/;"	m
asPoint	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asPoint { ^Point.new(x,y) }					\/\/ implemented as a projection$/;"	m
asPoint	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	asPoint { ^Point.new(this.x, this.y) }			\/\/ implemented as a projection$/;"	m
asPolar	SCClassLibrary/Common/Geometry/Point.sc	/^	asPolar { ^Polar.new(this.rho, this.theta) }$/;"	m
asPolar	SCClassLibrary/Common/Math/Complex.sc	/^	asPolar { ^Polar.new(this.rho, this.theta) }$/;"	m
asPolar	SCClassLibrary/Common/Math/Polar.sc	/^	asPolar { ^this }$/;"	m
asPolar	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asPolar { ^Point.new(x,y).asPolar }			\/\/ implemented as a projection$/;"	m
asPolar	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	asPolar { ^this.asPoint.asPolar }				\/\/ implemented as a projection$/;"	m
asProtected	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	asProtected {$/;"	m
asPseg	SCClassLibrary/Common/Audio/Env.sc	/^	asPseg {$/;"	m
asPyrString	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	asPyrString {$/;"	m
asQuant	SCClassLibrary/Common/Collections/Dictionary.sc	/^	asQuant { ^this.copy }$/;"	m
asQuant	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asQuant { ^Quant(*this) }$/;"	m
asQuant	SCClassLibrary/Common/Core/Nil.sc	/^	asQuant { ^Quant.default }  \/\/  { ^Quant.new }$/;"	m
asQuant	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asQuant { ^Quant(this) }$/;"	m
asQuant	SCClassLibrary/Common/Streams/Quant.sc	/^	asQuant { ^this.copy }$/;"	m
asQuark	SCClassLibrary/Common/Quarks/Quark.sc	/^	asQuark { |parentQuarks|$/;"	m
asQuaternion	quarks/MathLib/classes/various/Quaternion.sc	/^	asQuaternion {$/;"	m
asRGBA	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	asRGBA {$/;"	m
asRandomTable	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	asRandomTable { arg size;$/;"	m
asRawOSC	SCClassLibrary/Common/Collections/Array.sc	/^	asRawOSC {$/;"	m
asRect	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asRect { ^Rect(this[0] ? 0, this[1] ? 0, this[2] ? 0, this[3] ? 0) }$/;"	m
asRect	SCClassLibrary/Common/GUI/PlusGUI/Core/NilPlusGUI.sc	/^	asRect { ^Rect.new }$/;"	m
asRect	SCClassLibrary/Common/Geometry/Point.sc	/^	asRect { ^Rect.new(0,0,x,y) }$/;"	m
asRect	SCClassLibrary/Common/Geometry/Rect.sc	/^	asRect { ^this }$/;"	m
asRect	SCClassLibrary/Common/Geometry/Size.sc	/^	asRect { ^Rect(0,0,width,height); }$/;"	m
asRect	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asRect { ^Rect(this, this, this, this) }$/;"	m
asRef	SCClassLibrary/Common/Core/Object.sc	/^	asRef { ^Ref.new(this) }$/;"	m
asRef	SCClassLibrary/Common/Core/Ref.sc	/^	asRef { ^this }$/;"	m
asRelativePath	SCClassLibrary/Common/Collections/String.sc	/^	asRelativePath { |relativeTo|$/;"	m
asRelativePath	SCClassLibrary/Common/Files/PathName.sc	/^	asRelativePath { |relativeTo|$/;"	m
asRewritingRule	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	asRewritingRule { ^this }$/;"	m
asRewritingRule	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	asRewritingRule {$/;"	m
asRoutine	SCClassLibrary/Common/Core/Function.sc	/^	asRoutine {$/;"	m
asSCFont	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	asSCFont {$/;"	m
asSCFont	SCClassLibrary/QtCollider/QFont.sc	/^  asSCFont {$/;"	m
asSCIBCompileString	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/asSCIBCompileString.sc	/^	asSCIBCompileString {$/;"	m
asScale	SCClassLibrary/Common/Core/Symbol.sc	/^	asScale { ^ScaleInfo.at(this) }$/;"	m
asScore	SCClassLibrary/Common/Control/Score.sc	/^	asScore {}$/;"	m
asSecs	SCClassLibrary/Common/Collections/String.sc	/^	asSecs { |maxDays = 365| \/\/ assume a timeString of ddd:hh:mm:ss.sss. see asTimeString.$/;"	m
asSequenceableCollection	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asSequenceableCollection { ^this }$/;"	m
asSequenceableCollection	SCClassLibrary/Common/Core/Object.sc	/^	asSequenceableCollection { ^this.asArray }$/;"	m
asSet	SCClassLibrary/Common/Collections/Collection.sc	/^	asSet { ^Set.new(this.size).addAll(this); }$/;"	m
asSet	SCClassLibrary/Common/Collections/Set.sc	/^	asSet { ^this }$/;"	m
asSetter	SCClassLibrary/Common/Core/Symbol.sc	/^	asSetter {$/;"	m
asSignal	SCClassLibrary/Common/Audio/Env.sc	/^	asSignal { arg length = 400;$/;"	m
asSignal	SCClassLibrary/Common/Math/Signal.sc	/^	asSignal { ^this }$/;"	m
asSignal	SCClassLibrary/Common/Math/Signal.sc	/^	asSignal {$/;"	m
asSignal	quarks/cruciallib/Sample/Sample.sc	/^	asSignal { arg channel; \/\/ nil is stereo interleaved, or 0, 1$/;"	m
asSingleName	quarks/cruciallib/deprecated-3.5.sc	/^	asSingleName {$/;"	m
asSize	SCClassLibrary/Common/Geometry/Point.sc	/^	asSize { ^Size(x,y) }$/;"	m
asSize	SCClassLibrary/Common/Geometry/Size.sc	/^	asSize { ^Size(this, this) }$/;"	m
asSize	SCClassLibrary/Common/Geometry/Size.sc	/^	asSize { ^this }$/;"	m
asSortableString	SCClassLibrary/Common/Math/Date.sc	/^	asSortableString {  \/\/ standard database format, alphabetically sortable$/;"	m
asSortedArray	SCClassLibrary/Common/Collections/Dictionary.sc	/^	asSortedArray {$/;"	m
asSortedList	SCClassLibrary/Common/Collections/Collection.sc	/^	asSortedList { | function | ^SortedList.new(this.size, function).addAll(this); }$/;"	m
asSpec	SCClassLibrary/Common/Collections/Array.sc	/^	asSpec { ^ControlSpec( *this ) }$/;"	m
asSpec	SCClassLibrary/Common/Core/Nil.sc	/^	asSpec {$/;"	m
asSpec	SCClassLibrary/Common/Core/Symbol.sc	/^	asSpec { ^Spec.specs.at(this) }$/;"	m
asSpec	SCClassLibrary/Common/GUI/ControlModel.sc	/^	asSpec { ^this }$/;"	m
asSpecifier	SCClassLibrary/Common/GUI/ControlModel.sc	/^	asSpecifier { ^curve }$/;"	m
asSpecifier	SCClassLibrary/Common/GUI/ControlModel.sc	/^	asSpecifier {$/;"	m
asSpherical	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	asSpherical { ^Spherical.new(this.rho, this.theta, this.phi) }	asRect { ^Rect.new(0,0,x,y) }				\/\/ implemented as a projection$/;"	m
asSpherical	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	asSpherical { ^this }$/;"	m
asSpherical	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	asSpherical { ^Spherical.new(this.rho, this.theta, 0.0) }$/;"	m
asStream	SCClassLibrary/Common/Audio/Env.sc	/^	asStream {$/;"	m
asStream	SCClassLibrary/Common/Collections/Scale.sc	/^	asStream { ^ScaleStream(this, 0) }$/;"	m
asStream	SCClassLibrary/Common/Core/Object.sc	/^	asStream { ^this }$/;"	m
asStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	asStream { | cleanup| ^Routine({ arg inval; this.embedInStream(inval, cleanup) }) }$/;"	m
asStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	asStream {$/;"	m
asStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	asStream { ^Routine({ arg inval; this.embedInStream(inval) }) }$/;"	m
asStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	asStream {$/;"	m
asStream	SCClassLibrary/Common/Streams/Pproto.sc	/^	asStream { | cleanup| ^Routine({ arg inval; this.embedInStream(inval, cleanup) }) }$/;"	m
asStream	SCClassLibrary/Common/Streams/Pspawner.sc	/^	asStream {$/;"	m
asStream	SCClassLibrary/Common/Streams/Rest.sc	/^	asStream {$/;"	m
asStream	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	asStream { | cleanup| ^Routine({ arg inval; this.embedInStream(inval, cleanup) }) }$/;"	m
asStream	quarks/MathLib/classes/LazyLindenmayer/Plsys.sc	/^	asStream {$/;"	m
asStream	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	asStream {$/;"	m
asStream	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	asStream { ^Routine.new { arg inval; this.embedInStream(inval) } }$/;"	m
asStream	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	asStream { arg order=1, repeats=inf;$/;"	m
asStream	quarks/cruciallib/Editors/NumberEditor.sc	/^	asStream { ^FuncStream(this) }$/;"	m
asString	SCClassLibrary/Common/Collections/String.sc	/^	asString { ^this }$/;"	m
asString	SCClassLibrary/Common/Core/Kernel.sc	/^	asString { ^"DebugFrame of " ++ functionDef.asString }$/;"	m
asString	SCClassLibrary/Common/Core/Kernel.sc	/^	asString {$/;"	m
asString	SCClassLibrary/Common/Core/Object.sc	/^	asString { arg limit = 512;$/;"	m
asString	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	asString { ^class.asString }$/;"	m
asString	SCClassLibrary/Common/Geometry/Size.sc	/^	asString {$/;"	m
asString	SCClassLibrary/Common/Math/Date.sc	/^	asString {$/;"	m
asString	SCClassLibrary/SCDoc/SCDoc.sc	/^    asString {$/;"	m
asString	SCClassLibrary/deprecated/deprecated-3.6-help/HelpSearchResult.sc	/^	asString {$/;"	m
asString	quarks/cruciallib/Instr/Instr.sc	/^	asString { ^"%(%)".format(this.class.name, this.defName.asCompileString) }$/;"	m
asString	quarks/cruciallib/Instr/Instr.sc	/^	asString { ^"UGenInstr " ++ ugenClass.name.asString }$/;"	m
asString	quarks/cruciallib/Instr/Instr.sc	/^	asString { ^this.dotNotation }$/;"	m
asString	quarks/cruciallib/Players/AbstractPlayer.sc	/^	asString { ^this.name ?? { super.asString } }$/;"	m
asString	quarks/cruciallib/Sample/Sample.sc	/^	asString { ^(name ?? { super.asString }) }$/;"	m
asStringPrec	SCClassLibrary/Common/Math/Float.sc	/^	asStringPrec { arg precision;$/;"	m
asStringToBase	SCClassLibrary/Common/Math/Integer.sc	/^	asStringToBase { | base=10, width=8 |$/;"	m
asStringff	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	asStringff { | size = 8 |$/;"	m
asSymbol	SCClassLibrary/Common/Collections/String.sc	/^	asSymbol {$/;"	m
asSymbol	SCClassLibrary/Common/Core/Object.sc	/^	asSymbol { ^this.asString.asSymbol }$/;"	m
asSymbol	SCClassLibrary/Common/Core/Symbol.sc	/^	asSymbol { ^this }$/;"	m
asSynthDef	SCClassLibrary/Common/Control/asDefName.sc	/^	asSynthDef { ^this }$/;"	m
asSynthDef	SCClassLibrary/Common/Control/asDefName.sc	/^	asSynthDef { arg rates, prependArgs, outClass=\\Out, fadeTime, name;$/;"	m
asSynthDef	SCClassLibrary/Common/Control/asDefName.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Instr/Instr.sc	/^	asSynthDef { arg args,outClass=\\Out;$/;"	m
asSynthDef	quarks/cruciallib/Instr/InstrSpawner.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Instr/Patch.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/AbstractPlayer.sc	/^	asSynthDef { ^this.source.asSynthDef }$/;"	m
asSynthDef	quarks/cruciallib/Players/AbstractPlayer.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/PlayerMixer.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/SFP/SFP.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	asSynthDef {$/;"	m
asSynthDef	quarks/cruciallib/Players/TempoPlayer.sc	/^	asSynthDef { Error("shouldn't call this" + thisMethod).throw; }$/;"	m
asSynthDesc	SCClassLibrary/Common/Audio/SynthDef.sc	/^	asSynthDesc { |libname=\\global, keepDef = true|$/;"	m
asTarget	SCClassLibrary/Common/Control/asTarget.sc	/^	asTarget { ^Group.basicNew(Server.default, this) }$/;"	m
asTarget	SCClassLibrary/Common/Control/asTarget.sc	/^	asTarget { ^Group.basicNew(this, 1) }$/;"	m
asTarget	SCClassLibrary/Common/Control/asTarget.sc	/^	asTarget { ^Server.default.asTarget }$/;"	m
asTarget	SCClassLibrary/Common/Control/asTarget.sc	/^	asTarget { ^this }$/;"	m
asTarget	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	asTarget { ^group.asGroup }$/;"	m
asTextArchive	SCClassLibrary/Common/Core/Object.sc	/^	asTextArchive {$/;"	m
asTimeString	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asTimeString { arg precision = 0.001, maxDays = 365, dropDaysIfPossible = true;$/;"	m
asTuning	SCClassLibrary/Common/Collections/Scale.sc	/^	asTuning {$/;"	m
asTuning	SCClassLibrary/Common/Core/Symbol.sc	/^	asTuning { ^TuningInfo.at(this) }$/;"	m
asUGenInput	SCClassLibrary/Common/Audio/Demand.sc	/^	asUGenInput {$/;"	m
asUGenInput	SCClassLibrary/Common/Audio/UGen.sc	/^	asUGenInput { ^this }$/;"	m
asUGenInput	SCClassLibrary/Common/Collections/Array.sc	/^	asUGenInput { arg for; ^this.collect(_.asUGenInput(for)) }$/;"	m
asUGenInput	SCClassLibrary/Common/Collections/Event.sc	/^	asUGenInput { ^this.asControlInput }$/;"	m
asUGenInput	SCClassLibrary/Common/Control/Buffer.sc	/^	asUGenInput { ^this.bufnum }$/;"	m
asUGenInput	SCClassLibrary/Common/Control/Bus.sc	/^	asUGenInput { ^this.index }$/;"	m
asUGenInput	SCClassLibrary/Common/Control/Node.sc	/^	asUGenInput { Error("should not use a % inside a SynthDef".format(this.class.name)).throw }$/;"	m
asUGenInput	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asUGenInput { arg for; ^this.value(for) }$/;"	m
asUGenInput	SCClassLibrary/Common/Core/Object.sc	/^	asUGenInput { ^this }$/;"	m
asUGenInput	SCClassLibrary/Common/Core/Ref.sc	/^	asUGenInput { ^this }$/;"	m
asUGenInput	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	asUGenInput {$/;"	m
asUGenInput	quarks/Feedback/Fb.sc	/^	asUGenInput {$/;"	m
asUGenInput	quarks/cruciallib/Instr/Instr.sc	/^	asUGenInput { ^this.ar }$/;"	m
asUgenInput	quarks/cruciallib/Sample/Sample.sc	/^	asUgenInput { ^this.bufnumIr }$/;"	m
asUnicode	SCClassLibrary/Common/Core/Char.sc	/^	asUnicode { ^this.ascii }$/;"	m
asUnicode	SCClassLibrary/Common/Math/Integer.sc	/^	asUnicode { ^this }$/;"	m
asView	SCClassLibrary/Common/GUI/PlusGUI/Core/NilPlusGUI.sc	/^	asView {}$/;"	m
asView	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	asView { ^view }$/;"	m
asView	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	asView { ^this.view.asView }$/;"	m
asView	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	asView { ^view }$/;"	m
asView	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	asView { ^this }$/;"	m
asView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	asView { ^view }$/;"	m
asView	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	asView { ^this }$/;"	m
asView	SCClassLibrary/QtCollider/QView.sc	/^  asView { ^this }$/;"	m
asView	SCClassLibrary/QtCollider/QWindow.sc	/^  asView {$/;"	m
asWarp	SCClassLibrary/Common/Core/Symbol.sc	/^	asWarp { arg spec; ^Warp.warps.at(this).new(spec) }$/;"	m
asWarp	SCClassLibrary/Common/GUI/ControlModel.sc	/^	asWarp { ^this }$/;"	m
asWarp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asWarp { arg spec; ^CurveWarp.new(spec, this) }$/;"	m
asWavetable	SCClassLibrary/Common/Math/Signal.sc	/^	asWavetable {$/;"	m
asWavetableNoWrap	SCClassLibrary/Common/Math/Signal.sc	/^	asWavetableNoWrap {$/;"	m
asWeights	quarks/MathLib/classes/statistics/informationTheory.sc	/^	asWeights {$/;"	m
aschedFunc	quarks/cruciallib/Scheduling/OSCSched.sc	/^	aschedFunc { arg beat,func;$/;"	m
ascii	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ascii { ^this.collect { arg item; item.ascii } }$/;"	m
ascii	SCClassLibrary/Common/Collections/String.sc	/^	ascii {$/;"	m
ascii	SCClassLibrary/Common/Core/Char.sc	/^	ascii {$/;"	m
ascii	SCClassLibrary/Common/Core/Symbol.sc	/^	ascii { ^this.asString.ascii }$/;"	m
ascii	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	ascii {}$/;"	m
asciiPlot	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	asciiPlot {$/;"	m
asctime	SCClassLibrary/Common/Math/Date.sc	/^	asctime {$/;"	m
asin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	asin { ^this.performUnaryOp('asin') }$/;"	m
asin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	asin { ^this.composeUnaryOp('asin') }$/;"	m
asin	SCClassLibrary/Common/Core/Symbol.sc	/^	asin { ^this }$/;"	m
asin	SCClassLibrary/Common/Math/Signal.sc	/^	asin { _ArcSin; ^this.primitiveFailed }$/;"	m
asin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	asin { _ArcSin; ^this.primitiveFailed }$/;"	m
associationAt	SCClassLibrary/Common/Collections/Dictionary.sc	/^	associationAt { arg key;$/;"	m
associationAtFail	SCClassLibrary/Common/Collections/Dictionary.sc	/^	associationAtFail { arg argKey, function;$/;"	m
associationsDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	associationsDo { arg function;$/;"	m
associationsDo	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	associationsDo { arg function;$/;"	m
at	SCClassLibrary/Common/Audio/Env.sc	/^	at { arg time;$/;"	m
at	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	at { arg i; ^synthDescs.at(i) }$/;"	m
at	SCClassLibrary/Common/Collections/Array2D.sc	/^	at { arg row, col;$/;"	m
at	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	at { arg index;$/;"	m
at	SCClassLibrary/Common/Collections/Bag.sc	/^	at { ^this.shouldNotImplement(thisMethod) }$/;"	m
at	SCClassLibrary/Common/Collections/Dictionary.sc	/^	at { arg key;$/;"	m
at	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	at { arg key;$/;"	m
at	SCClassLibrary/Common/Collections/Interval.sc	/^	at { arg index;$/;"	m
at	SCClassLibrary/Common/Collections/Library.sc	/^	at { arg ... path;$/;"	m
at	SCClassLibrary/Common/Collections/LinkedList.sc	/^	at { arg index;$/;"	m
at	SCClassLibrary/Common/Collections/List.sc	/^	at { arg i; ^array.at(i) }$/;"	m
at	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	at { arg id;$/;"	m
at	SCClassLibrary/Common/Collections/Scale.sc	/^	at { |index|$/;"	m
at	SCClassLibrary/Common/Collections/SparseArray.sc	/^	at { arg index;$/;"	m
at	SCClassLibrary/Common/Control/WII.sc	/^	at { | controlName |$/;"	m
at	SCClassLibrary/Common/Core/Ref.sc	/^	at { | key | ^value.at(key) }$/;"	m
at	SCClassLibrary/Common/Files/Directory.sc	/^	at { arg index;$/;"	m
at	SCClassLibrary/Common/GUI/Base/Gradient.sc	/^	at { |pos|$/;"	m
at	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	at { arg key; ^proxymixer.proxyspace.envir.at(key) }$/;"	m
at	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	at { arg key; var i; i = this.find(key); ^if(i.notNil) { pairs[i+1] } { nil } }$/;"	m
at	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	at { arg key;$/;"	m
at	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	at { | index |$/;"	m
at	SCClassLibrary/Platform/linux/LID.sc	/^	at { | controlName |$/;"	m
at	quarks/Feedback/Fb.sc	/^	at {$/;"	m
at	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	at { arg index;  ^items.at(index) }$/;"	m
at	quarks/MathLib/classes/various/Matrix.sc	/^	at { arg row, col; $/;"	m
at	quarks/MathLib/classes/various/VagueList.sc	/^	at { |index| $/;"	m
at	quarks/cruciallib/Control/CCBank.sc	/^	at { arg key;$/;"	m
at	quarks/cruciallib/Sample/Sample.sc	/^	at { arg i; ^array.at(i) }$/;"	m
at	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	at { arg key; ^dict.at(key) }$/;"	m
at	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	at { arg key; ^dict.at(key) }$/;"	m
atAll	SCClassLibrary/Common/Collections/Collection.sc	/^	atAll { arg keys;$/;"	m
atAr	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	atAr { |index| ^prevState[\\krNames][index] }$/;"	m
atDec	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	atDec { arg index, dec=1; this.put(index, this.at(index)-dec); }$/;"	m
atFail	SCClassLibrary/Common/Collections/Bag.sc	/^	atFail { ^this.shouldNotImplement(thisMethod) }$/;"	m
atFail	SCClassLibrary/Common/Collections/Dictionary.sc	/^	atFail { arg key, function;$/;"	m
atIdentityHash	SCClassLibrary/Common/Collections/Array.sc	/^	atIdentityHash { arg argKey;$/;"	m
atIdentityHashInPairs	SCClassLibrary/Common/Collections/Array.sc	/^	atIdentityHashInPairs { arg argKey;$/;"	m
atInc	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	atInc { arg index, inc=1; this.put(index, this.at(index)+inc); }$/;"	m
atKr	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	atKr { |index| ^prevState[\\arNames][index] }$/;"	m
atLimit	SCClassLibrary/Common/Core/Object.sc	/^	atLimit { ^false }$/;"	m
atLimit	SCClassLibrary/Common/Streams/IOStream.sc	/^	atLimit { ^pos >= limit }$/;"	m
atModify	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	atModify { arg index, function; this.put(index, function.value(this.at(index), index)) }$/;"	m
atPath	SCClassLibrary/Common/Collections/Library.sc	/^	atPath { arg path;$/;"	m
atPathFail	SCClassLibrary/Common/Collections/Library.sc	/^	atPathFail { arg path, function;$/;"	m
atPercent	quarks/MathLib/classes/statistics/extStatistics.sc	/^	atPercent { |index=0.5, interpol=true| $/;"	m
atSeries	SCClassLibrary/Common/Collections/SparseArray.sc	/^	atSeries { arg first, second, last;$/;"	m
atan	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	atan { ^this.performUnaryOp('atan') }$/;"	m
atan	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	atan { ^this.composeUnaryOp('atan') }$/;"	m
atan	SCClassLibrary/Common/Core/Symbol.sc	/^	atan { ^this }$/;"	m
atan	SCClassLibrary/Common/Math/Signal.sc	/^	atan { _ArcTan; ^this.primitiveFailed }$/;"	m
atan	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	atan { _ArcTan; ^this.primitiveFailed }$/;"	m
atan2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	atan2 { arg aNumber, adverb; ^this.performBinaryOp('atan2', aNumber, adverb) }$/;"	m
atan2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	atan2 { arg function, adverb; ^this.composeBinaryOp('atan2', function, adverb) }$/;"	m
atan2	SCClassLibrary/Common/Core/Symbol.sc	/^	atan2 { ^this }$/;"	m
atan2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	atan2 { arg aNumber, adverb; _Atan2; ^aNumber.performBinaryOpOnSimpleNumber('atan2', this, adverb) }$/;"	m
attributeRange	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	attributeRange { |attributeName|$/;"	m
attributes_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	attributes_ {|array|$/;"	m
audio	quarks/cruciallib/Players/Patching.sc	/^	audio { arg audioPatchIn,needsValueSetNow;$/;"	m
audio	quarks/cruciallib/Players/Patching.sc	/^	audio { arg audioPatchIn,needsValueSetNow=false;$/;"	m
audio	quarks/cruciallib/Players/Patching.sc	/^	audio { arg audioPatchIn;$/;"	m
autoComplete	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	autoComplete {	\/\/ enable ide for this document$/;"	m
autoScrolls_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	autoScrolls_ {|bool|$/;"	m
autoScrolls_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	autoScrolls_ { |bool|$/;"	m
autocorr	quarks/MathLib/classes/statistics/extStatistics.sc	/^	autocorr { |num, mean, sd|$/;"	m
autohidesScrollers_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	autohidesScrollers_ { |bool|$/;"	m
autohidesScrollers_	SCClassLibrary/QtCollider/BasicViews.sc	/^  autohidesScrollers_ { arg aBool;$/;"	m
awake	SCClassLibrary/Common/Core/Function.sc	/^	awake { arg beats, seconds, clock;$/;"	m
awake	SCClassLibrary/Common/Core/Nil.sc	/^	awake { arg inBeats, inSeconds, inClock;$/;"	m
awake	SCClassLibrary/Common/Core/Object.sc	/^	awake { arg beats, seconds, clock;$/;"	m
awake	SCClassLibrary/Common/Core/Thread.sc	/^	awake { arg inBeats, inSeconds, inClock;$/;"	m
awake	SCClassLibrary/Common/Streams/Stream.sc	/^	awake { arg beats, seconds, inClock;$/;"	m
awake_	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	awake_ { arg flag;$/;"	m
back	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	back { this.setProperty(\\back);}$/;"	m
back	SCClassLibrary/QtCollider/QWebView.sc	/^  back { this.invokeMethod( 'back' ); }$/;"	m
backColor_	SCClassLibrary/QtCollider/QView.sc	/^  backColor_ { arg color;$/;"	m
backColor_	SCClassLibrary/backwards_compatibility/osx/scide_scapp/views.sc	/^	backColor_ { arg color;$/;"	m
background	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	background { ^view.background }$/;"	m
background	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	background { ^Color.clear }$/;"	m
background	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	background {$/;"	m
background	SCClassLibrary/QtCollider/BasicViews.sc	/^  background { ^canvas.background }$/;"	m
background	SCClassLibrary/QtCollider/BasicViews.sc	/^  background { ^this.getProperty(\\background); }$/;"	m
background	SCClassLibrary/QtCollider/BasicViews.sc	/^  background { ^this.palette.button; }$/;"	m
background	SCClassLibrary/QtCollider/BasicViews.sc	/^  background {$/;"	m
background	SCClassLibrary/QtCollider/QKnob.sc	/^  background { ^this.palette.button; }$/;"	m
background	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  background { ^this.getProperty(\\grooveColor) }$/;"	m
background	SCClassLibrary/QtCollider/QListView.sc	/^  background { ^this.palette.base; }$/;"	m
background	SCClassLibrary/QtCollider/QNumberBox.sc	/^  background {$/;"	m
background	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  background { ^this.getProperty(\\grooveColor) }$/;"	m
background	SCClassLibrary/QtCollider/QSlider.sc	/^  background { ^this.getProperty(\\grooveColor) }$/;"	m
background	SCClassLibrary/QtCollider/QSlider2D.sc	/^  background { ^this.getProperty(\\grooveColor) }$/;"	m
background	SCClassLibrary/QtCollider/QTextView.sc	/^  background { ^this.palette.base }$/;"	m
background	SCClassLibrary/QtCollider/QTreeView.sc	/^  background { ^this.palette.base; }$/;"	m
background	SCClassLibrary/QtCollider/QView.sc	/^  background { ^this.getProperty(\\background); }$/;"	m
background	SCClassLibrary/QtCollider/QWindow.sc	/^  background { ^view.background; }$/;"	m
background	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	background { ^Color(0.0,0.2,0.2,0.2) }$/;"	m
background	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	background { ^Color(0.0,0.3,0.0,0.2) }$/;"	m
background	quarks/cruciallib/Gui/ActionButton.sc	/^	background {$/;"	m
background	quarks/cruciallib/Instr/instrSupport.sc	/^	background { ^Color.white }$/;"	m
background	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	background { ^Color.yellow(0.3,alpha:0.1) }$/;"	m
backgroundImage_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	backgroundImage_ { arg image, tileMode=1, alpha=1.0, fromRect;$/;"	m
background_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	background_ { arg b; view.background_(b) }$/;"	m
background_	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	background_ { arg c; this.view.background_(c) }$/;"	m
background_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	background_ { arg color;$/;"	m
background_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	background_ { arg color;$/;"	m
background_	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	background_ { | color |$/;"	m
background_	SCClassLibrary/QtCollider/BasicViews.sc	/^  background_ { arg color; canvas.background = color }$/;"	m
background_	SCClassLibrary/QtCollider/BasicViews.sc	/^  background_ { arg color; this.palette = this.palette.button_(color); }$/;"	m
background_	SCClassLibrary/QtCollider/BasicViews.sc	/^  background_ { arg color; this.setProperty(\\background, color); }$/;"	m
background_	SCClassLibrary/QtCollider/BasicViews.sc	/^  background_ { arg color;$/;"	m
background_	SCClassLibrary/QtCollider/QKnob.sc	/^  background_ { arg color; this.palette = this.palette.button_(color); }$/;"	m
background_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  background_ { arg color; this.setProperty(\\grooveColor, color) }$/;"	m
background_	SCClassLibrary/QtCollider/QListView.sc	/^  background_ { arg color; this.palette = this.palette.base_(color); }$/;"	m
background_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  background_ { arg color;$/;"	m
background_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  background_ { arg color; this.setProperty(\\grooveColor, color) }$/;"	m
background_	SCClassLibrary/QtCollider/QSlider.sc	/^  background_ { arg color; this.setProperty(\\grooveColor, color) }$/;"	m
background_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  background_ { arg color; this.setProperty(\\grooveColor, color) }$/;"	m
background_	SCClassLibrary/QtCollider/QTextView.sc	/^  background_ { arg color; this.palette = this.palette.base_(color); }$/;"	m
background_	SCClassLibrary/QtCollider/QTreeView.sc	/^  background_ { arg color; this.palette = this.palette.base_(color) }$/;"	m
background_	SCClassLibrary/QtCollider/QView.sc	/^  background_ { arg color; this.setProperty(\\background, color); }$/;"	m
background_	SCClassLibrary/QtCollider/QWindow.sc	/^  background_ { arg aColor; view.background = aColor; }$/;"	m
background_	quarks/MathLib/classes/gui/ScatterView.sc	/^	background_ {|color|$/;"	m
background_	quarks/cruciallib/Gui/ActionButton.sc	/^	background_ { arg color;$/;"	m
balanceParens	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	balanceParens { arg levels = 1;$/;"	m
bar	SCClassLibrary/Common/Core/Clock.sc	/^	bar {$/;"	m
bars2beats	SCClassLibrary/Common/Core/Clock.sc	/^	bars2beats { arg bars;$/;"	m
bars2secs	quarks/cruciallib/Scheduling/Tempo.sc	/^	bars2secs { arg bars; ^tempor * (bars * beatsPerBar) }$/;"	m
base	SCClassLibrary/QtCollider/QPalette.sc	/^  base { ^this.color( \\base ) }$/;"	m
baseText	SCClassLibrary/QtCollider/QPalette.sc	/^  baseText { ^this.color( \\baseText ) }$/;"	m
baseText_	SCClassLibrary/QtCollider/QPalette.sc	/^  baseText_ { arg color; this.setColor( color, \\baseText ) }$/;"	m
base_	SCClassLibrary/QtCollider/QPalette.sc	/^  base_ { arg color; this.setColor( color, \\base ) }$/;"	m
basename	SCClassLibrary/Common/Collections/String.sc	/^	basename {$/;"	m
basicHash	SCClassLibrary/Common/Core/Object.sc	/^	basicHash { _ObjectHash; ^this.primitiveFailed }$/;"	m
basis	quarks/MathLib/classes/various/Trafo.sc	/^	basis {$/;"	m
beat	quarks/cruciallib/Players/SFP/SFP.sc	/^	beat { ^sched.beat }$/;"	m
beat	quarks/cruciallib/Scheduling/OSCSched.sc	/^	beat {$/;"	m
beatDur	SCClassLibrary/Common/Core/Clock.sc	/^	beatDur {$/;"	m
beatDuration	quarks/cruciallib/Players/AbstractPlayer.sc	/^	beatDuration { ^nil } \/\/ nil means inf$/;"	m
beatDuration	quarks/cruciallib/Players/PlayerMixer.sc	/^	beatDuration {  ^players.maxItem({ arg pl; pl.beatDuration ? inf }).beatDuration }$/;"	m
beatDuration	quarks/cruciallib/Players/SFP/SFP.sc	/^	beatDuration { ^this.timeDuration * this.tempo }$/;"	m
beatInBar	SCClassLibrary/Common/Core/Clock.sc	/^	beatInBar {$/;"	m
beat_	quarks/cruciallib/Scheduling/OSCSched.sc	/^	beat_ { arg beat;$/;"	m
beats	SCClassLibrary/Common/Core/Clock.sc	/^	beats {$/;"	m
beats2bars	SCClassLibrary/Common/Core/Clock.sc	/^	beats2bars { arg beats;$/;"	m
beats2frames	quarks/cruciallib/Players/SFP/SFP.sc	/^	beats2frames { arg beats; ^beats * this.tempo.reciprocal  * this.sampleRate + this.firstBeatIsAt }$/;"	m
beats2secs	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	beats2secs { | beats | ^beats }$/;"	m
beats2secs	SCClassLibrary/Common/Core/Clock.sc	/^	beats2secs { arg beats;$/;"	m
beats2secs	quarks/cruciallib/Players/SFP/SFP.sc	/^	beats2secs { arg beats;$/;"	m
beats2secs	quarks/cruciallib/Scheduling/Tempo.sc	/^	beats2secs { arg beats; ^tempor * beats }$/;"	m
beatsPerBar_	SCClassLibrary/Common/Core/Clock.sc	/^	beatsPerBar_ { arg newBeatsPerBar;$/;"	m
beatsPerBar_	quarks/cruciallib/Scheduling/Tempo.sc	/^	beatsPerBar_ { arg b;$/;"	m
beats_	SCClassLibrary/Common/Core/Object.sc	/^	beats_ {  } \/\/ for PauseStream$/;"	m
beats_	SCClassLibrary/Common/Core/Thread.sc	/^	beats_ { arg inBeats; beats = inBeats; seconds = clock.beats2secs(inBeats); }$/;"	m
beats_	quarks/cruciallib/Sample/Sample.sc	/^	beats_ { arg bt;$/;"	m
beatsizeIr	quarks/cruciallib/Sample/Sample.sc	/^	beatsizeIr {$/;"	m
before	quarks/cruciallib/Instr/Instr.sc	/^	before { arg anode,args,bundle,atTime,out=0;$/;"	m
beginDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	beginDrag {$/;"	m
beginDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	beginDrag {$/;"	m
beginDrag	SCClassLibrary/QtCollider/QView.sc	/^  beginDrag { arg x, y;$/;"	m
beginDragAction_	SCClassLibrary/QtCollider/QView.sc	/^  beginDragAction_ { arg handler;$/;"	m
beginsWith	SCClassLibrary/Common/Collections/String.sc	/^	beginsWith { arg string;$/;"	m
bench	SCClassLibrary/Common/Core/Function.sc	/^	bench { arg print = true;$/;"	m
bend	SCClassLibrary/Common/Control/MIDIOut.sc	/^	bend { arg chan, val=8192;$/;"	m
biexp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	biexp { arg ... args; ^this.multiChannelPerform('biexp', *args) }$/;"	m
biexp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	biexp { arg inCenter, inMin, inMax, outCenter, outMin, outMax, clip=\\minmax;$/;"	m
biexp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	biexp { arg inCenter, inMin, inMax, outCenter, outMin, outMax, clip=\\minmax;$/;"	m
bilin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bilin { arg ... args; ^this.multiChannelPerform('bilin', *args) }$/;"	m
bilin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bilin { arg inCenter, inMin, inMax, outCenter, outMin, outMax, clip=\\minmax;$/;"	m
bilin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bilin { arg inCenter, inMin, inMax, outCenter, outMin, outMax, clip=\\minmax;$/;"	m
bilinrand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bilinrand { ^this.performUnaryOp('bilinrand') }$/;"	m
bilinrand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bilinrand { ^this.composeUnaryOp('bilinrand') }$/;"	m
bilinrand	SCClassLibrary/Common/Core/Symbol.sc	/^	bilinrand { ^this }$/;"	m
bilinrand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bilinrand { _BiLinRand; ^this.primitiveFailed }$/;"	m
binPow	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	binPow { arg n; var l = this.offLow, m = this.degree, ins, result = Polynomial.new;$/;"	m
binPowFrac	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	binPowFrac { arg alpha; var x = 0.01, prev, curr, yn, i, delta, m = this.degree, 	ins, result = Polynomial.new, maxIter = 20;$/;"	m
binaryValue	SCClassLibrary/Common/Core/Boolean.sc	/^	binaryValue { ^0 } \/\/ TODO in the long-run, deprecate for asInteger$/;"	m
binaryValue	SCClassLibrary/Common/Core/Boolean.sc	/^	binaryValue { ^1 } \/\/ TODO in the long-run, deprecate for asInteger$/;"	m
binaryValue	SCClassLibrary/Common/Core/Boolean.sc	/^	binaryValue { ^this.subclassResponsibility(thisMethod) } \/\/ TODO: deprecate for asInteger$/;"	m
binaryValue	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	binaryValue { ^this.sign.max(0) } \/\/ TODO in the long-run, deprecate for asInteger$/;"	m
bind	SCClassLibrary/Common/Control/Server.sc	/^	bind { arg func;$/;"	m
binomial	quarks/MathLib/classes/statistics/extStatistics.sc	/^	binomial { |numcorrect, numtrials|$/;"	m
bipolar	SCClassLibrary/Common/Audio/UGen.sc	/^ 	bipolar { arg mul = 1;$/;"	m
bipolar	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bipolar { arg ... args; ^this.multiChannelPerform('bipolar', *args) }$/;"	m
bitAnd	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bitAnd { arg aNumber, adverb; ^this.performBinaryOp('bitAnd', aNumber, adverb) }$/;"	m
bitAnd	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bitAnd { arg function, adverb; ^this.composeBinaryOp('bitAnd', function, adverb) }$/;"	m
bitAnd	SCClassLibrary/Common/Core/Symbol.sc	/^	bitAnd { ^this }$/;"	m
bitAnd	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitAnd { arg aNumber, adverb; _BitAnd; ^aNumber.performBinaryOpOnSimpleNumber('bitAnd', this, adverb) }$/;"	m
bitHammingDistance	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bitHammingDistance { arg aNumber, adverb;$/;"	m
bitHammingDistance	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bitHammingDistance { arg function, adverb; ^this.composeBinaryOp('hammingDistance', function, adverb) }$/;"	m
bitHammingDistance	SCClassLibrary/Common/Core/Symbol.sc	/^	bitHammingDistance { ^this }$/;"	m
bitHammingDistance	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitHammingDistance { arg aNumber, adverb; _HammingDistance  ^aNumber.performBinaryOpOnSimpleNumber('hammingDistance', this, adverb) }$/;"	m
bitNot	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bitNot { ^this.performUnaryOp('bitNot') }$/;"	m
bitNot	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bitNot { ^this.composeUnaryOp('bitNot') }$/;"	m
bitNot	SCClassLibrary/Common/Core/Symbol.sc	/^	bitNot { ^this }$/;"	m
bitNot	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitNot { _BitNot; ^this.primitiveFailed }$/;"	m
bitOr	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bitOr { arg aNumber, adverb; ^this.performBinaryOp('bitOr', aNumber, adverb) }$/;"	m
bitOr	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bitOr { arg function, adverb; ^this.composeBinaryOp('bitOr', function, adverb) }$/;"	m
bitOr	SCClassLibrary/Common/Core/Symbol.sc	/^	bitOr { ^this }$/;"	m
bitOr	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitOr { arg aNumber, adverb; _BitOr; ^aNumber.performBinaryOpOnSimpleNumber('bitOr', this, adverb) }$/;"	m
bitTest	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitTest { arg bit; ^( (this & 1.leftShift(bit)) != 0) }$/;"	m
bitXor	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	bitXor { arg aNumber, adverb; ^this.performBinaryOp('bitXor', aNumber, adverb) }$/;"	m
bitXor	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	bitXor { arg function, adverb; ^this.composeBinaryOp('bitXor', function, adverb) }$/;"	m
bitXor	SCClassLibrary/Common/Core/Symbol.sc	/^	bitXor { ^this }$/;"	m
bitXor	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	bitXor { arg aNumber, adverb; _BitXor; ^aNumber.performBinaryOpOnSimpleNumber('bitXor', this, adverb) }$/;"	m
blend	SCClassLibrary/Common/Audio/Env.sc	/^	blend { arg argAnotherEnv, argBlendFrac=0.5;$/;"	m
blend	SCClassLibrary/Common/Audio/UGen.sc	/^	blend { arg that, blendFrac = 0.5;$/;"	m
blend	SCClassLibrary/Common/Collections/Dictionary.sc	/^	blend { |that, blend = 0.5, fill = true, specs|$/;"	m
blend	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	blend { arg ... args; ^this.multiChannelPerform('blend', *args) }$/;"	m
blend	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	blend { arg that, blendFrac = 0.5;$/;"	m
blend	SCClassLibrary/Common/Core/Color.sc	/^	blend { arg that, blend = 0.5;$/;"	m
blend	SCClassLibrary/Common/Core/Object.sc	/^	blend { arg that, blendFrac = 0.5;$/;"	m
blend	SCClassLibrary/Common/Core/Symbol.sc	/^	blend { \/\/ Envelopes may call this on the curves inst var.$/;"	m
blend	SCClassLibrary/Common/Math/Signal.sc	/^	blend { arg anotherWavetable, blendFrac=0.5;$/;"	m
blend	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	blend { arg another, frac;$/;"	m
blend	quarks/cxaudio/cxaudio.sc	/^    blend { arg that, blendFrac = 0.5;$/;"	m
blendAt	SCClassLibrary/Common/Core/Object.sc	/^	blendAt { arg index, method='clipAt';$/;"	m
blendPut	SCClassLibrary/Common/Core/Object.sc	/^	blendPut { arg index, val, method='wrapPut';$/;"	m
block	SCClassLibrary/Common/Core/Function.sc	/^	block {$/;"	m
block	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^				block {|break|$/;"	m
block	SCClassLibrary/SCDoc/SCDoc.sc	/^                block {|break|$/;"	m
block	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^					block { |continue| $/;"	m
block	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^				block { |break| $/;"	m
blocks	SCClassLibrary/Common/Control/Engine.sc	/^	blocks {$/;"	m
blue	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	blue {$/;"	m
bold	quarks/cruciallib/Gui/CXLabel.sc	/^	bold { arg fontSize=11;$/;"	m
boldVariant	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	boldVariant {$/;"	m
boldVariant	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	boldVariant {$/;"	m
boldVariant	SCClassLibrary/QtCollider/QFont.sc	/^  boldVariant {$/;"	m
booleanValue	SCClassLibrary/Common/Core/Boolean.sc	/^	booleanValue { ^this } \/\/ TODO in the long-run, deprecate for asBoolean$/;"	m
booleanValue	SCClassLibrary/Common/Core/Nil.sc	/^	booleanValue { ^false } \/\/ TODO in the long-run, deprecate for asBoolean$/;"	m
booleanValue	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	booleanValue { ^this > 0 } \/\/ TODO in the long-run, deprecate for asBoolean$/;"	m
boot	SCClassLibrary/Common/Control/Server.sc	/^	boot { arg startAliveThread=true, recover=false, onFailure;$/;"	m
bootInProcess	SCClassLibrary/Common/Control/Server.sc	/^	bootInProcess {$/;"	m
bootServerApp	SCClassLibrary/Common/Control/Server.sc	/^	bootServerApp {$/;"	m
bootSync	SCClassLibrary/Common/Control/Server.sc	/^	bootSync { arg condition;$/;"	m
bottom	SCClassLibrary/Common/Geometry/Rect.sc	/^	bottom { ^top + height }$/;"	m
bottom_	SCClassLibrary/Common/Geometry/Rect.sc	/^	bottom_ { |b| top = top - (this.bottom - b) }$/;"	m
bounds	SCClassLibrary/Common/GUI/Document.sc	/^	bounds {$/;"	m
bounds	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	bounds { this.subclassResponsibility(\\bounds); }$/;"	m
bounds	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	bounds { arg font;$/;"	m
bounds	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	bounds { ^view.bounds }$/;"	m
bounds	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	bounds { ^this.view.bounds }$/;"	m
bounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	bounds {$/;"	m
bounds	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	bounds {$/;"	m
bounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	bounds {$/;"	m
bounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	bounds {$/;"	m
bounds	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	bounds { \/\/ helper$/;"	m
bounds	SCClassLibrary/Common/Geometry/Rect.sc	/^	bounds { ^Rect.new(left, top, width, height) }$/;"	m
bounds	SCClassLibrary/QtCollider/QView.sc	/^  bounds {$/;"	m
bounds	SCClassLibrary/QtCollider/QWindow.sc	/^  bounds {$/;"	m
bounds_	SCClassLibrary/Common/GUI/Document.sc	/^	bounds_ { | argBounds |$/;"	m
bounds_	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	bounds_ { arg b;$/;"	m
bounds_	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	bounds_ { arg bounds; this.subclassResponsibility(\\bounds_); }$/;"	m
bounds_	SCClassLibrary/Common/GUI/Grid.sc	/^	bounds_ { arg b;$/;"	m
bounds_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	bounds_ { |rect|$/;"	m
bounds_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	bounds_ { arg b, reflow = true;$/;"	m
bounds_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	bounds_ { arg b; view.bounds_(b) }$/;"	m
bounds_	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	bounds_ { arg argBounds;$/;"	m
bounds_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	bounds_ { arg rect;$/;"	m
bounds_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	bounds_ { arg argBounds;$/;"	m
bounds_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	bounds_ { arg rect;$/;"	m
bounds_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	bounds_ { arg rect;$/;"	m
bounds_	SCClassLibrary/QtCollider/QView.sc	/^  bounds_ { arg rect;$/;"	m
bounds_	SCClassLibrary/QtCollider/QWindow.sc	/^  bounds_ { arg aRect;$/;"	m
bounds_	SCClassLibrary/QtCollider/QWindow.sc	/^  bounds_ { arg rect;$/;"	m
box	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	box { arg layout,bounds;$/;"	m
boxColor	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	boxColor {$/;"	m
boxColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	boxColor {$/;"	m
boxColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	boxColor {$/;"	m
boxColor_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	boxColor_ { arg color;$/;"	m
boxColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	boxColor_ { arg color;$/;"	m
boxColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	boxColor_ { arg color;$/;"	m
bpm	quarks/cruciallib/Sample/Sample.sc	/^	bpm { ^tempo * 60.0; }$/;"	m
bpm	quarks/cruciallib/Scheduling/Tempo.sc	/^	bpm { ^tempo * 60.0 }$/;"	m
bpm_	quarks/cruciallib/Players/SFP/SFP.sc	/^	bpm_ { arg b; this.tempo = b \/ 60.0 }$/;"	m
bpm_	quarks/cruciallib/Sample/Sample.sc	/^	bpm_ { arg bpm; this.tempo_(bpm \/ 60.0); }$/;"	m
bpm_	quarks/cruciallib/Scheduling/Tempo.sc	/^	bpm_ { arg bpm; this.tempo = bpm \/ 60.0; }$/;"	m
bracket	quarks/MathLib/classes/various/Minimization.sc	/^	bracket { arg a, b; var golden = 0.3819660, xl = a, xr = b, xc, fl = this.value(a), fr = 	this.value(b), fc, nbEval = 0, maxEval = 100, sqrtDblEps = 1.4901161193847656e-08;$/;"	m
brent	quarks/MathLib/classes/various/Minimization.sc	/^	brent { arg xlow, xup, xmin, fxlow, fxup, fxmin; var golden = 0.3819660, xl, xr, z, fz, d = 0, 	e = 0, u, fu, v = xlow + (golden * (xup - xlow)), w = v, fv = this.value(v), fw = fv, wlow, 	wup, tol, p, q, r, mid, iter = 0, maxIter = 100, t2, epsAbs = 0.001, epsRel = 0.001, absMin, 	continue = true;$/;"	m
browse	SCClassLibrary/Common/GUI/PlusGUI/Control/SynthDescLibPlusGUI.sc	/^	browse {$/;"	m
browse	SCClassLibrary/Common/GUI/PlusGUI/Core/KernelPlusGUI.sc	/^	browse {$/;"	m
bubble	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	bubble { arg depth=0, levels=1;$/;"	m
bubble	SCClassLibrary/Common/Core/Object.sc	/^	bubble { arg depth=0, levels=1;$/;"	m
bufChannelsIr	quarks/cruciallib/Sample/Sample.sc	/^	bufChannelsIr {$/;"	m
bufChannelsKr	quarks/cruciallib/Sample/Sample.sc	/^	bufChannelsKr {$/;"	m
bufDurIr	quarks/cruciallib/Sample/Sample.sc	/^	bufDurIr {$/;"	m
bufDurKr	quarks/cruciallib/Sample/Sample.sc	/^	bufDurKr {$/;"	m
bufFramesIr	quarks/cruciallib/Sample/Sample.sc	/^	bufFramesIr {$/;"	m
bufFramesKr	quarks/cruciallib/Sample/Sample.sc	/^	bufFramesKr {$/;"	m
bufRateScaleIr	quarks/cruciallib/Sample/Sample.sc	/^	bufRateScaleIr {$/;"	m
bufRateScaleKr	quarks/cruciallib/Sample/Sample.sc	/^	bufRateScaleKr {$/;"	m
bufSamplesIr	quarks/cruciallib/Sample/Sample.sc	/^	bufSamplesIr {$/;"	m
bufSamplesKr	quarks/cruciallib/Sample/Sample.sc	/^	bufSamplesKr {$/;"	m
bufferAndThen	quarks/cruciallib/Players/PlayerRecorder.sc	/^	bufferAndThen { arg path,then;$/;"	m
bufferIndex	SCClassLibrary/QtCollider/QStethoscope2.sc	/^	bufferIndex { ^ buffer !? { buffer.index } }$/;"	m
bufnum	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	bufnum {$/;"	m
bufnum	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	bufnum {$/;"	m
bufnum	quarks/cruciallib/Sample/Sample.sc	/^	bufnum {$/;"	m
bufnumIr	quarks/cruciallib/Sample/Sample.sc	/^	bufnumIr {$/;"	m
bufnumKr	quarks/cruciallib/Sample/Sample.sc	/^	bufnumKr {$/;"	m
bufnum_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	bufnum_ { arg num;$/;"	m
bufnum_	SCClassLibrary/QtCollider/QScope.sc	/^  bufnum_ { arg anInt;$/;"	m
bufnum_	SCClassLibrary/QtCollider/QScope2.sc	/^  bufnum_ { arg anInt;$/;"	m
bufsize	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  bufsize { ^maxBufSize }$/;"	m
build	SCClassLibrary/Common/Audio/SynthDef.sc	/^	build { arg ugenGraphFunc, rates, prependArgs;$/;"	m
build	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	build { ^true }$/;"	m
build	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	build { | proxy | 	\/\/ assumes audio rate proxy if not initialized$/;"	m
build	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	build { | proxy, orderIndex = 0 |$/;"	m
build	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	build { arg instr,args,outClass= \\Out;$/;"	m
build	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	build { arg argProxy;$/;"	m
buildControls	SCClassLibrary/Common/Audio/SynthDef.sc	/^	buildControls {$/;"	m
buildControlsWithObjects	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	buildControlsWithObjects { arg instr,objects;$/;"	m
buildErrorString	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	buildErrorString {$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy {  arg proxy, channelOffset=0;$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy { "a numerical pattern does not make sense here.".error; ^nil }$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy { ^PauseStream.new(this) }$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy { ^this }$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy { arg proxy, channelOffset=0, index;$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy { arg proxy, channelOffset=0;$/;"	m
buildForProxy	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	buildForProxy {}$/;"	m
buildUgenGraph	SCClassLibrary/Common/Audio/SynthDef.sc	/^	buildUgenGraph { arg func, rates, prependArgs;$/;"	m
buildUgenGraph	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	buildUgenGraph { arg argInstr,args,outClass;$/;"	m
bundleSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	bundleSize {$/;"	m
bus	quarks/cruciallib/Players/AbstractPlayer.sc	/^	bus {$/;"	m
busArg	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	busArg { ^busArg ?? { this.makeBusArg } }$/;"	m
busIndex	quarks/cruciallib/Players/AbstractPlayer.sc	/^	busIndex {$/;"	m
bus_	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	bus_ { | inBus |$/;"	m
bus_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	bus_ { | inBus |$/;"	m
bus_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  bus_ { arg b;$/;"	m
bus_	quarks/cruciallib/Players/AbstractPlayer.sc	/^	bus_ { arg b;$/;"	m
bus_	quarks/cruciallib/Players/Patching.sc	/^	bus_ { arg b;$/;"	m
busses	quarks/cruciallib/Players/Patching.sc	/^	busses { ^(busses ?? {busses = Dictionary.new}) }$/;"	m
button	SCClassLibrary/QtCollider/QPalette.sc	/^  button { ^this.color( \\button ) }$/;"	m
buttonHeight	SCClassLibrary/Common/GUI/Inspector.sc	/^	buttonHeight { ^this.lineHeight - 4 }$/;"	m
buttonText	SCClassLibrary/QtCollider/QPalette.sc	/^  buttonText { ^this.color( \\buttonText ) }$/;"	m
buttonText_	SCClassLibrary/QtCollider/QPalette.sc	/^  buttonText_ { arg color; this.setColor( color, \\buttonText ) }$/;"	m
button_	SCClassLibrary/QtCollider/QPalette.sc	/^  button_ { arg color; this.setColor( color, \\button ) }$/;"	m
buttonsVisible_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  buttonsVisible_ { arg aBool;$/;"	m
cache	SCClassLibrary/Common/Control/Buffer.sc	/^	cache {$/;"	m
cachePath	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	cachePath { ^cachePath }$/;"	m
cachedBufferAt	SCClassLibrary/Common/Control/Server.sc	/^	cachedBufferAt { |bufnum| ^Buffer.cachedBufferAt(this, bufnum) }$/;"	m
cachedBuffersDo	SCClassLibrary/Common/Control/Server.sc	/^	cachedBuffersDo { |func| Buffer.cachedBuffersDo(this, func) }$/;"	m
calc	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	calc { arg x; var alphaOneMx, l0, l1, ln; $/;"	m
calcBounds	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	calcBounds {$/;"	m
calcConsts	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	calcConsts { arg rect;$/;"	m
calcDomainSpecs	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	calcDomainSpecs {$/;"	m
calcNext	SCClassLibrary/Common/Streams/Patterns.sc	/^	calcNext { arg cur, step;$/;"	m
calcRange	SCClassLibrary/Common/GUI/ControlModel.sc	/^	calcRange { |data, defaultRange = 1.0|$/;"	m
calcSpecs	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	calcSpecs { |separately = true|$/;"	m
calcValue	quarks/MathLib/classes/patterns/P3n1.sc	/^	calcValue { arg x;$/;"	m
calculate	quarks/cruciallib/Sample/Sample.sc	/^	calculate {$/;"	m
calculateViewBounds	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^	calculateViewBounds {$/;"	m
call	SCClassLibrary/Common/Control/OSC.sc	/^	call { arg rcvPort ... args;$/;"	m
callDrawFunc	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	callDrawFunc {$/;"	m
callDrawFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	callDrawFunc {$/;"	m
canAccept	quarks/cruciallib/Instr/MoreSpecs.sc	/^	canAccept { arg thing;$/;"	m
canAccept	quarks/cruciallib/Instr/MoreSpecs.sc	/^	canAccept { arg ting; ^ting.isKindOf(Sample) }$/;"	m
canAccept	quarks/cruciallib/Instr/MoreSpecs.sc	/^	canAccept { arg ting;$/;"	m
canAccept	quarks/cruciallib/Players/instrSupport.sc	/^	canAccept { ^false } \/\/ for canReceiveDragHandler or other uses$/;"	m
canAccept	quarks/cruciallib/Players/instrSupport.sc	/^	canAccept { arg thing;$/;"	m
canCallOS	SCClassLibrary/Common/Core/Object.sc	/^	canCallOS { _CanCallOS }$/;"	m
canDoSpec	quarks/cruciallib/Editors/NumberEditor.sc	/^ 	canDoSpec { arg aspec; ^aspec.isKindOf(ControlSpec) }$/;"	m
canFocus	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	canFocus {$/;"	m
canFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	canFocus {$/;"	m
canFocus	SCClassLibrary/QtCollider/QView.sc	/^  canFocus {$/;"	m
canFocus	quarks/MathLib/classes/gui/ScatterView.sc	/^	canFocus {$/;"	m
canFocus	quarks/MathLib/classes/gui/ScatterView2.sc	/^	canFocus {$/;"	m
canFocus_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	canFocus_ { arg bool;$/;"	m
canFocus_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	canFocus_ { arg bool;$/;"	m
canFocus_	SCClassLibrary/QtCollider/QView.sc	/^  canFocus_ { arg bool;$/;"	m
canFocus_	quarks/MathLib/classes/gui/ScatterView.sc	/^	canFocus_ { arg state = false;$/;"	m
canFocus_	quarks/MathLib/classes/gui/ScatterView2.sc	/^	canFocus_ { arg state = false;$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^children.canFreeSynth }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^inputs.at(2).isNumber.not or: { inputs.at(2) > 1 }  }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^inputs.at(3).isNumber.not or: { inputs.at(3) > 1 }  }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^inputs.at(3).isNumber.not or: { inputs.at(3) > 1 } }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^inputs.at(9).isNumber.not or: { inputs.at(9) > 1 }  }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth { ^true }$/;"	m
canFreeSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canFreeSynth {$/;"	m
canKr	quarks/cruciallib/Instr/MoreSpecs.sc	/^	canKr { ^false }$/;"	m
canKr	quarks/cruciallib/Instr/MoreSpecs.sc	/^ 	canKr { ^static.not }$/;"	m
canPause	SCClassLibrary/Common/Streams/Stream.sc	/^	canPause { ^this.streamHasEnded.not and: { cleanup.functions.isEmpty } }$/;"	m
canPause	SCClassLibrary/Common/Streams/Stream.sc	/^	canPause { ^this.streamHasEnded.not }$/;"	m
canPause	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	canPause { ^player.notNil and: { player.canPause } }$/;"	m
canReceiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	canReceiveDrag { ^currentDrag.isKindOf(Class)}$/;"	m
canReceiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	canReceiveDrag {$/;"	m
canReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	canReceiveDrag { ^currentDrag.isKindOf(Class)}$/;"	m
canReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	canReceiveDrag {$/;"	m
canReceiveDrag	SCClassLibrary/QtCollider/QView.sc	/^  canReceiveDrag { arg x, y;$/;"	m
canReceiveDragHandler_	SCClassLibrary/QtCollider/QView.sc	/^  canReceiveDragHandler_ { arg handler;$/;"	m
canReleaseSynth	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	canReleaseSynth { ^this.hasGateControl and: { this.canFreeSynth } }$/;"	m
canSort	SCClassLibrary/QtCollider/QTreeView.sc	/^  canSort { ^this.getProperty( \\sortingEnabled ) }$/;"	m
canSort_	SCClassLibrary/QtCollider/QTreeView.sc	/^  canSort_ { arg bool; this.setProperty( \\sortingEnabled, bool ) }$/;"	m
canvas_	SCClassLibrary/QtCollider/BasicViews.sc	/^  canvas_ { arg view;$/;"	m
case	SCClassLibrary/Common/Audio/SynthDef.sc	/^			case { (lag == \\ir) or: { c == $i and: { c2 == $_ }}}$/;"	m
case	SCClassLibrary/Common/Collections/Collection.sc	/^	case { | default |$/;"	m
case	SCClassLibrary/Common/Core/Function.sc	/^	case { arg ... cases;$/;"	m
case	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^		case { selectedText[0] == $* }$/;"	m
case	quarks/cruciallib/Players/instrSupport.sc	/^		case { (this == \\ir) }$/;"	m
catArgs	SCClassLibrary/Common/Collections/String.sc	/^	catArgs { arg ... items; ^this.catList(items) }$/;"	m
catList	SCClassLibrary/Common/Collections/String.sc	/^	catList { arg list;$/;"	m
catchRecursion	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	catchRecursion { arg func;$/;"	m
ccatArgs	SCClassLibrary/Common/Collections/String.sc	/^	ccatArgs { arg ... items; ^this.ccatList(items) }$/;"	m
ccatList	SCClassLibrary/Common/Collections/String.sc	/^	ccatList { arg list;$/;"	m
ceil	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ceil { ^this.performUnaryOp('ceil') }$/;"	m
ceil	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ceil { ^this.composeUnaryOp('ceil') }$/;"	m
ceil	SCClassLibrary/Common/Core/Symbol.sc	/^	ceil { ^this }$/;"	m
ceil	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ceil { _Ceil; ^this.primitiveFailed }$/;"	m
center	SCClassLibrary/Common/Geometry/Rect.sc	/^	center { ^Point.new(left + (width * 0.5), top + (height * 0.5)) }$/;"	m
center	quarks/MathLib/classes/various/Matrix.sc	/^	center { |mean|$/;"	m
centerIn	SCClassLibrary/Common/Geometry/Rect.sc	/^	centerIn { arg inRect;$/;"	m
centerSquare	SCClassLibrary/Common/Geometry/Rect.sc	/^	centerSquare {$/;"	m
center_	SCClassLibrary/Common/Geometry/Rect.sc	/^	center_ { arg center; ^this.class.aboutPoint(center, width * 0.5, height * 0.5) }$/;"	m
centered	SCClassLibrary/QtCollider/QKnob.sc	/^  centered { ^this.getProperty( \\centered ); }$/;"	m
centered_	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	centered_ { arg bool; knobView.centered_(bool) }$/;"	m
centered_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	centered_ { arg bool;$/;"	m
centered_	SCClassLibrary/QtCollider/QKnob.sc	/^  centered_ { arg bool; this.setProperty( \\centered, bool ); }$/;"	m
cents	SCClassLibrary/Common/Collections/Scale.sc	/^	cents {$/;"	m
changed	SCClassLibrary/Common/Core/Nil.sc	/^	changed {}$/;"	m
changed	SCClassLibrary/Common/Core/Object.sc	/^	changed { arg what ... moreArgs;$/;"	m
changed	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		changed { arg ... args;$/;"	m
changed	quarks/cruciallib/Players/AbstractPlayer.sc	/^	changed { arg what ... moreArgs;$/;"	m
channelPeaks	SCClassLibrary/Common/Files/SoundFile.sc	/^	channelPeaks { |startFrame = 0, numFrames, chunkSize = 1048576, threaded = false|$/;"	m
cheby	SCClassLibrary/Common/Control/Buffer.sc	/^	cheby { arg amplitudes,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
chebyFill	SCClassLibrary/Common/Math/Signal.sc	/^	chebyFill { arg amplitudes, normalize=true;$/;"	m
chebyFill_old	SCClassLibrary/Common/Math/Signal.sc	/^	chebyFill_old { arg amplitudes;$/;"	m
chebyMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	chebyMsg { arg amplitudes,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
checkBadValues	SCClassLibrary/Common/Audio/UGen.sc	/^	checkBadValues { arg id = 0, post = 2;$/;"	m
checkBadValues	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	checkBadValues { arg ... args; ^this.multiChannelPerform('checkBadValues', *args) }$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Function.sc	/^	checkCanArchive { if (def.sourceCode.isNil) { "cannot archive open Functions".warn } }$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Kernel.sc	/^	checkCanArchive { "cannot archive Frames".warn }$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Kernel.sc	/^	checkCanArchive { "cannot archive FunctionDefs".warn }$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Kernel.sc	/^	checkCanArchive {}$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Object.sc	/^	checkCanArchive {}$/;"	m
checkCanArchive	SCClassLibrary/Common/Core/Thread.sc	/^	checkCanArchive { "cannot archive Threads".warn }$/;"	m
checkDir	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	checkDir {$/;"	m
checkDir	SCClassLibrary/Common/Quarks/Quarks.sc	/^	checkDir {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/BufIO.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/CheckBadValues.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Demand.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Demand.sc	/^ 	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/DiskIO.sc	/^ 	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Filter.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Filter.sc	/^ 	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/FreeVerb.sc	/^	checkInputs { ^this.checkNInputs(2); }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/GVerb.sc	/^	checkInputs { ^this.checkNInputs(1); }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/InOut.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/InOut.sc	/^ 	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Line.sc	/^	checkInputs { ^if(rate === \\audio) { this.checkSameRateAsFirstInput } }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Line.sc	/^	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Line.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Osc.sc	/^ 	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Pan.sc	/^	checkInputs { ^this.checkNInputs(1) }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Pan.sc	/^	checkInputs { ^this.checkNInputs(2) }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Pan.sc	/^	checkInputs { ^this.checkNInputs(3) }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/PitchShift.sc	/^ 	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Poll.sc	/^ 	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/SynthDef.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Trig.sc	/^	checkInputs {$/;"	m
checkInputs	SCClassLibrary/Common/Audio/Trig.sc	/^ 	checkInputs { ^this.checkSameRateAsFirstInput }$/;"	m
checkInputs	SCClassLibrary/Common/Audio/UGen.sc	/^	checkInputs { ^this.checkValidInputs }$/;"	m
checkInputs	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	checkInputs {$/;"	m
checkKind	quarks/cruciallib/deprecated-3.5.sc	/^	checkKind { arg shouldBeKindOf;$/;"	m
checkNInputs	SCClassLibrary/Common/Audio/UGen.sc	/^	checkNInputs { arg n;$/;"	m
checkNotClosed	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	checkNotClosed { ^isClosed.not }$/;"	m
checkSameRateAsFirstInput	SCClassLibrary/Common/Audio/UGen.sc	/^	checkSameRateAsFirstInput {$/;"	m
checkTooMany	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	checkTooMany {$/;"	m
checkTuningForMismatch	SCClassLibrary/Common/Collections/Scale.sc	/^	checkTuningForMismatch { |aTuning|$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	checkUpdate { |doFull = false|$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	checkUpdate {$/;"	m
checkUpdate	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	checkUpdate {$/;"	m
checkValidInputs	SCClassLibrary/Common/Audio/UGen.sc	/^	checkValidInputs {$/;"	m
checkedOut	SCClassLibrary/Common/Quarks/Quarks.sc	/^	checkedOut {$/;"	m
checkout	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	checkout { | q, localRoot, sync = false |$/;"	m
checkout	SCClassLibrary/Common/Quarks/Quarks.sc	/^	checkout { |name, version, sync=false|$/;"	m
checkoutAll	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	checkoutAll { |localRoot|$/;"	m
checkoutAll	SCClassLibrary/Common/Quarks/Quarks.sc	/^	checkoutAll { repos.checkoutAll(local.path) }$/;"	m
checkoutDirectory	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	checkoutDirectory {|forceSync=false|$/;"	m
checkoutDirectory	SCClassLibrary/Common/Quarks/Quarks.sc	/^	checkoutDirectory {$/;"	m
childAt	SCClassLibrary/QtCollider/QTreeView.sc	/^  childAt { arg index;$/;"	m
children	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	children { ^view.children }$/;"	m
children	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	children { ^[view] }$/;"	m
children	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	children { ^nil }$/;"	m
children	SCClassLibrary/QtCollider/BasicViews.sc	/^  children { arg class = QView;$/;"	m
children	SCClassLibrary/QtCollider/QObject.sc	/^  children { arg class;$/;"	m
children	SCClassLibrary/QtCollider/QView.sc	/^  children { arg class = QView;$/;"	m
children	quarks/cruciallib/Instr/InstrSpawner.sc	/^	children { ^args ++ [deltaPattern] }$/;"	m
children	quarks/cruciallib/Instr/Patch.sc	/^	children { ^args }$/;"	m
children	quarks/cruciallib/Players/AbstractPlayer.sc	/^	children { ^#[] }$/;"	m
children	quarks/cruciallib/Players/AbstractPlayer.sc	/^	children { ^this.voices }$/;"	m
children	quarks/cruciallib/Players/AbstractPlayer.sc	/^	children {$/;"	m
children	quarks/cruciallib/Players/HasSubject.sc	/^	children { ^this.inputs }$/;"	m
children	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	children { ^[a] }$/;"	m
children	quarks/cruciallib/Players/PlayerMixer.sc	/^	children { ^this.players }$/;"	m
children	quarks/cruciallib/Players/SFP/SFP.sc	/^	children { ^[] }$/;"	m
children	quarks/cruciallib/Players/SFP/SFP.sc	/^	children { ^[file] }$/;"	m
children	quarks/cruciallib/Sequencers/BusDriver.sc	/^	children { ^[subject,trigger,lag] }$/;"	m
children	quarks/cruciallib/Sequencers/BusDriver.sc	/^	children { ^[values,durations] }$/;"	m
choleski	quarks/MathLib/classes/various/LinearSystem.sc	/^	choleski { var lu = this.deepCopy, n = this.cols, i, k, p, rcpr;$/;"	m
choleskiSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	choleskiSolve { arg b; var x;$/;"	m
choose	SCClassLibrary/Common/Collections/Bag.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Collections/Dictionary.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Collections/Library.sc	/^	choose { arg ... start;$/;"	m
choose	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Collections/Set.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Collections/SparseArray.sc	/^	choose {$/;"	m
choose	SCClassLibrary/Common/Core/Function.sc	/^	choose { ^this.value }$/;"	m
choose	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	choose {$/;"	m
choose	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	choose { 		$/;"	m
chooseIndex	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	chooseIndex {$/;"	m
chooseScale	SCClassLibrary/Common/Collections/Scale.sc	/^	chooseScale { |scaleDegree |$/;"	m
circle	SCClassLibrary/Common/Audio/Env.sc	/^	circle { arg timeFromLastToFirst = 0.0, curve = \\lin;$/;"	m
class	SCClassLibrary/Common/Core/Object.sc	/^	class { _ObjectClass; ^this.primitiveFailed }$/;"	m
classVars	SCClassLibrary/Common/Core/Kernel.sc	/^	classVars {$/;"	m
clean	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	clean { arg excluding;$/;"	m
cleanNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	cleanNodeMap {$/;"	m
cleanupTopoSort	SCClassLibrary/Common/Audio/SynthDef.sc	/^	cleanupTopoSort {$/;"	m
clear	SCClassLibrary/Common/Audio/BufIO.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     clear { envir.clear }$/;"	m
clear	SCClassLibrary/Common/Collections/List.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Collections/Set.sc	/^	clear { array.fill; size=0 }$/;"	m
clear	SCClassLibrary/Common/Collections/Set.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Collections/SparseArray.sc	/^	clear { arg size;$/;"	m
clear	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	clear {}$/;"	m
clear	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	clear { this.prFunc_(nil) }$/;"	m
clear	SCClassLibrary/Common/Core/Clock.sc	/^	clear { | releaseNodes = true |$/;"	m
clear	SCClassLibrary/Common/Core/Clock.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Core/Object.sc	/^	clear { ^this }$/;"	m
clear	SCClassLibrary/Common/Core/Semaphore.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	clear { this.reset; }$/;"	m
clear	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	clear { this.subclassResponsibility(\\clear); }$/;"	m
clear	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	clear {$/;"	m
clear	SCClassLibrary/Common/Streams/History.sc	/^	clear {$/;"	m
clear	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	clear {$/;"	m
clear	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^	clear { proxy = nil }$/;"	m
clear	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	clear { object = nil; this.checkUpdate }$/;"	m
clear	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	clear { value = nil }$/;"	m
clear	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	clear {$/;"	m
clear	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	clear {$/;"	m
clear	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		clear {$/;"	m
clear	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	clear {$/;"	m
clear	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	clear { | fadeTime = 0 |$/;"	m
clear	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	clear { arg fadeTime=0.0;$/;"	m
clear	SCClassLibrary/QtCollider/BasicViews.sc	/^  clear {$/;"	m
clear	SCClassLibrary/QtCollider/QTreeView.sc	/^  clear { this.invokeMethod(\\clear); }$/;"	m
clear	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	clear { arg size;$/;"	m
clear	quarks/cruciallib/Scheduling/OSCSched.sc	/^	clear {$/;"	m
clear	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	clear { dict = IdentityDictionary.new }$/;"	m
clear	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^	clear {$/;"	m
clear	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	clear { dict = IdentityDictionary.new }$/;"	m
clearAll	SCClassLibrary/Common/Core/Kernel.sc	/^	clearAll {$/;"	m
clearCache	SCClassLibrary/Common/GUI/Grid.sc	/^	clearCache { cacheKey = nil; }$/;"	m
clearCache	SCClassLibrary/Common/GUI/Grid.sc	/^	clearCache {$/;"	m
clearCache	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	clearCache {$/;"	m
clearClocks	quarks/cruciallib/Scheduling/Tempo.sc	/^	clearClocks {$/;"	m
clearDrawing	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	clearDrawing {$/;"	m
clearDrawing	SCClassLibrary/QtCollider/QUserView.sc	/^  clearDrawing { this.invokeMethod( \\clear ); }$/;"	m
clearField	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	clearField { |index|$/;"	m
clearField	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	clearField { |index|$/;"	m
clearFields	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	clearFields { |from = 0| (numItems - 1 .. from).do(this.clearField(_)) }$/;"	m
clearMetadata	SCClassLibrary/Platform/Platform.sc	/^	clearMetadata { |path| ^this.subclassResponsibility }$/;"	m
clearMetadata	SCClassLibrary/Platform/Platform.sc	/^	clearMetadata { |path|$/;"	m
clearMetadata	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	clearMetadata { |path|$/;"	m
clearOnRefresh	SCClassLibrary/QtCollider/QUserView.sc	/^  clearOnRefresh { ^this.getProperty( \\clearOnRefresh ); }$/;"	m
clearOnRefresh_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	clearOnRefresh_ { |bool|$/;"	m
clearOnRefresh_	SCClassLibrary/QtCollider/QUserView.sc	/^  clearOnRefresh_ { arg boolean; this.setProperty( \\clearOnRefresh, boolean ); }$/;"	m
clip	SCClassLibrary/Common/Audio/UGen.sc	/^ 	clip { arg lo = 0.0, hi = 1.0;$/;"	m
clip	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	clip { arg ... args; ^this.multiChannelPerform('clip', *args) }$/;"	m
clip	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	clip { arg lo, hi; ^this.composeNAryOp('clip', [lo,hi])  }$/;"	m
clip	SCClassLibrary/Common/Math/Float.sc	/^	clip { arg lo, hi; _ClipFloat; ^this.primitiveFailed }$/;"	m
clip	SCClassLibrary/Common/Math/Integer.sc	/^	clip { arg lo, hi; _ClipInt; ^this.primitiveFailed }$/;"	m
clip	SCClassLibrary/Common/Math/Magnitude.sc	/^	clip { arg lo, hi;$/;"	m
clip	SCClassLibrary/Common/Math/Signal.sc	/^	clip { arg lo, hi; _ClipSignal; ^this.primitiveFailed }$/;"	m
clip2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	clip2 { arg aNumber=1, adverb; ^this.performBinaryOp('clip2', aNumber, adverb) }$/;"	m
clip2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	clip2 { arg function=1, adverb; ^this.composeBinaryOp('clip2', function, adverb) }$/;"	m
clip2	SCClassLibrary/Common/Math/Signal.sc	/^	clip2 { arg aNumber=1; _Clip2; ^aNumber.performBinaryOpOnSignal('clip2', this) }$/;"	m
clip2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	clip2 { arg aNumber, adverb; _Clip2; ^aNumber.performBinaryOpOnSimpleNumber('clip2', this, adverb) }$/;"	m
clipAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	clipAt { arg index;$/;"	m
clipAt	SCClassLibrary/Common/Collections/Interval.sc	/^	clipAt { arg index;$/;"	m
clipAt	SCClassLibrary/Common/Collections/List.sc	/^	clipAt { arg i; i = i.asInteger.clip(0, this.size - 1); ^array.at(i) }$/;"	m
clipExtend	SCClassLibrary/Common/Collections/Array.sc	/^	clipExtend { arg length;$/;"	m
clipExtend	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	clipExtend { arg length;$/;"	m
clipHi	SCClassLibrary/QtCollider/QNumberBox.sc	/^  clipHi { ^this.getProperty(\\maximum) }$/;"	m
clipHi	quarks/cruciallib/Instr/MoreSpecs.sc	/^	clipHi { ^itemSpec.clipHi }$/;"	m
clipHi_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  clipHi_ { arg aFloat; this.setProperty( \\maximum, aFloat ) }$/;"	m
clipLo	SCClassLibrary/QtCollider/QNumberBox.sc	/^  clipLo { ^this.getProperty(\\minimum) }$/;"	m
clipLo	quarks/cruciallib/Instr/MoreSpecs.sc	/^	clipLo { ^itemSpec.clipLo }$/;"	m
clipLo_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  clipLo_ { arg aFloat; this.setProperty( \\minimum, aFloat ) }$/;"	m
clipPut	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	clipPut { arg index, item;$/;"	m
clipPut	SCClassLibrary/Common/Collections/List.sc	/^	clipPut { arg i, item; i = i.asInteger.clip(0, this.size - 1); ^array.put(i, item) }$/;"	m
clock	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	clock { ^clock ? TempoClock.default }$/;"	m
clock	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	clock { ^nil  }$/;"	m
clockDidClear	quarks/cruciallib/Scheduling/Tempo.sc	/^	clockDidClear {}$/;"	m
clock_	SCClassLibrary/Common/Core/Object.sc	/^	clock_ {  } \/\/ for Clock$/;"	m
clock_	SCClassLibrary/Common/Core/Thread.sc	/^	clock_ { arg inClock;$/;"	m
clock_	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	clock_ { arg aClock;$/;"	m
close	SCClassLibrary/Common/Control/Buffer.sc	/^	close { arg completionMessage;$/;"	m
close	SCClassLibrary/Common/Control/OSC.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Control/SerialPort.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Control/Volume.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Control/WII.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Files/File.sc	/^	close {	\/\/ close the file$/;"	m
close	SCClassLibrary/Common/Files/File.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Files/SoundFile.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/GUI/Document.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	close { \/\/ called when the GUI.window closes$/;"	m
close	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	close {$/;"	m
close	SCClassLibrary/Common/Streams/IOStream.sc	/^	close { out.close; }$/;"	m
close	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	close { stream.close }$/;"	m
close	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	close {$/;"	m
close	SCClassLibrary/Platform/linux/LID.sc	/^	close {$/;"	m
close	SCClassLibrary/QtCollider/QView.sc	/^  close {$/;"	m
close	SCClassLibrary/QtCollider/QWindow.sc	/^  close { view.close; }$/;"	m
closeBundle	SCClassLibrary/Common/Control/NetAddr.sc	/^	closeBundle { arg time;$/;"	m
closeBundle	SCClassLibrary/Common/Control/Server.sc	/^	closeBundle { arg time; \/\/ set time to false if you don't want to send.$/;"	m
closeMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	closeMsg { arg completionMessage;$/;"	m
closed	SCClassLibrary/Common/GUI/Document.sc	/^	closed {$/;"	m
closed	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	closed {$/;"	m
closed	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	closed { current = nil; super.closed }$/;"	m
closed	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	closed { parentWindow.setCurrentSheet(nil); super.closed }$/;"	m
closed	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	closed {$/;"	m
clump	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	clump { arg groupSize;$/;"	m
clump	SCClassLibrary/Common/Streams/Patterns.sc	/^	clump { arg n; ^Pclump(n, this) }$/;"	m
clumpBundles	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	clumpBundles {$/;"	m
clumps	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	clumps { arg groupSizeList;$/;"	m
cmdName_	SCClassLibrary/Common/Control/OSCresponder.sc	/^	cmdName_ { arg string;$/;"	m
cmdPeriod	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	cmdPeriod { this.free }$/;"	m
cmdPeriod	SCClassLibrary/Common/Control/Server.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	SCClassLibrary/Common/Control/SkipJack.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	SCClassLibrary/Common/Core/Function.sc	/^	cmdPeriod { this.value }$/;"	m
cmdPeriod	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	cmdPeriod { rout.play(AppClock) }$/;"	m
cmdPeriod	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	cmdPeriod { clock = nil }$/;"	m
cmdPeriod	quarks/cruciallib/Control/MIDIClock.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	quarks/cruciallib/Control/MIDIPlayer.sc	/^	cmdPeriod { this.free; CmdPeriod.remove(this); }$/;"	m
cmdPeriod	quarks/cruciallib/Instr/InstrSpawner.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	quarks/cruciallib/Players/AbstractPlayer.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	quarks/cruciallib/Players/PlayerRecorder.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	quarks/cruciallib/Scheduling/Tempo.sc	/^	cmdPeriod {$/;"	m
cmdPeriod	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	cmdPeriod {$/;"	m
cmds	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	cmds {  ^#["\/n_go", "\/n_end"] }$/;"	m
cmds	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	cmds { ^#["\/n_go", "\/n_end", "\/n_off", "\/n_on"] }$/;"	m
cmds	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	cmds { ^nil }$/;"	m
cocoaPrSetFill	SCClassLibrary/Common/GUI/osx/PlusGUI/Core/ColorPlusGUI.sc	/^	cocoaPrSetFill {$/;"	m
cocoaPrSetStroke	SCClassLibrary/Common/GUI/osx/PlusGUI/Core/ColorPlusGUI.sc	/^	cocoaPrSetStroke {$/;"	m
codegen_UGenCtorArg	SCClassLibrary/Common/Collections/String.sc	/^	codegen_UGenCtorArg { arg stream;$/;"	m
codegen_UGenCtorArg	SCClassLibrary/Common/Core/Symbol.sc	/^	codegen_UGenCtorArg { arg stream;$/;"	m
coerce	SCClassLibrary/Common/Math/Complex.sc	/^	coerce { arg aNumber; ^aNumber.asComplex }$/;"	m
cofactor	quarks/MathLib/classes/various/Matrix.sc	/^	cofactor { arg row, col; \/\/ return the cofactor to element (row, col)$/;"	m
coin	SCClassLibrary/Common/Collections/Harmonics.sc	/^	coin { arg prob = 0.5;$/;"	m
coin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	coin { ^this.performUnaryOp('coin') }$/;"	m
coin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	coin { ^this.composeUnaryOp('coin') }$/;"	m
coin	SCClassLibrary/Common/Core/Symbol.sc	/^	coin { ^this }$/;"	m
coin	SCClassLibrary/Common/Math/Float.sc	/^	coin { ^1.0.rand < this }$/;"	m
coin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	coin { _Coin; ^this.primitiveFailed }$/;"	m
colAt	SCClassLibrary/Common/Collections/Array2D.sc	/^	colAt { arg ci;$/;"	m
collate	SCClassLibrary/Common/Streams/Stream.sc	/^	collate { arg stream;$/;"	m
collect	SCClassLibrary/Common/Collections/Collection.sc	/^	collect { | function |$/;"	m
collect	SCClassLibrary/Common/Collections/Dictionary.sc	/^	collect { arg function;$/;"	m
collect	SCClassLibrary/Common/Collections/SparseArray.sc	/^	collect { arg function;$/;"	m
collect	SCClassLibrary/Common/Core/Nil.sc	/^	collect {}$/;"	m
collect	SCClassLibrary/Common/Math/Integer.sc	/^	collect { arg function;$/;"	m
collect	SCClassLibrary/Common/Streams/Patterns.sc	/^	collect { arg function;$/;"	m
collect	SCClassLibrary/Common/Streams/Stream.sc	/^	collect { arg argCollectFunc;$/;"	m
collect	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	collect { arg func; $/;"	m
collect	quarks/MathLib/classes/various/Matrix.sc	/^	collect { arg func;$/;"	m
collectAs	SCClassLibrary/Common/Collections/Collection.sc	/^	collectAs { | function, class |$/;"	m
collectAs	SCClassLibrary/Common/Core/Nil.sc	/^	collectAs {}$/;"	m
collectAs	SCClassLibrary/Common/Math/Integer.sc	/^	collectAs { arg function, class;$/;"	m
collectConstants	SCClassLibrary/Common/Audio/SynthDef.sc	/^	collectConstants {$/;"	m
collectConstants	SCClassLibrary/Common/Audio/UGen.sc	/^	collectConstants {$/;"	m
collectMethods	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	collectMethods { arg list;$/;"	m
collectMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	collectMsg { | selector ... args |$/;"	m
colonIndices	SCClassLibrary/Common/Files/PathName.sc	/^	colonIndices {$/;"	m
color	SCClassLibrary/QtCollider/QKnob.sc	/^  color {$/;"	m
color	SCClassLibrary/QtCollider/QPalette.sc	/^  color { arg role, group;$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color( 0.47843137254902, 0.72941176470588, 0.50196078431373  ) }$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color(0.17647058823529, 0.89803921568627, 0.027450980392157) }$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color.green }$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color.grey }$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color.new255(125, 255, 205) }$/;"	m
color	quarks/cruciallib/Instr/instrSupport.sc	/^	color { ^Color.yellow(alpha:0.3) }$/;"	m
colorNormal	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	colorNormal { arg i;$/;"	m
colorSelected	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	colorSelected { arg i;$/;"	m
color_	SCClassLibrary/QtCollider/QKnob.sc	/^  color_ { arg colors;$/;"	m
colorizeArea	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	colorizeArea { |area, hilite = true|$/;"	m
colors	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	colors {$/;"	m
colors_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	colors_ { arg incolors;$/;"	m
colors_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	colors_ { arg strokec, fillc;$/;"	m
colors_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  colors_ { arg strokeColor, fillColor;$/;"	m
colors_	SCClassLibrary/QtCollider/QListView.sc	/^  colors_ { arg colorArray;$/;"	m
colors_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  colors_ { arg colorStroke, colorFill;$/;"	m
colors_	SCClassLibrary/QtCollider/QTreeView.sc	/^  colors_ { arg colors;$/;"	m
cols	quarks/MathLib/classes/various/Matrix.sc	/^	cols {$/;"	m
colsDo	SCClassLibrary/Common/Collections/Array2D.sc	/^	colsDo { arg func;$/;"	m
columns	SCClassLibrary/QtCollider/QTreeView.sc	/^  columns { ^this.getProperty( \\columns ); }$/;"	m
columns_	SCClassLibrary/QtCollider/QTreeView.sc	/^  columns_ { arg labels; this.setProperty( \\columns, labels ); }$/;"	m
comma	SCClassLibrary/Common/Streams/IOStream.sc	/^	comma { this.put(Char.comma);}$/;"	m
commands	SCClassLibrary/Common/GUI/Grid.sc	/^	commands {$/;"	m
commit	SCClassLibrary/Common/Quarks/Quarks.sc	/^	commit { |name,message|$/;"	m
comp	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	comp { arg func,bounds;$/;"	m
comp	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	comp { arg func,bounds;$/;"	m
comp	SCClassLibrary/Common/GUI/viewExtensions.sc	/^	comp { arg func,bounds;$/;"	m
comp	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	comp { arg func,bounds;$/;"	m
compare	SCClassLibrary/Common/Collections/String.sc	/^	compare { arg aString, ignoreCase=false; _StringCompare }$/;"	m
compareObject	SCClassLibrary/Common/Core/Object.sc	/^	compareObject { arg that, instVarNames;$/;"	m
compile	SCClassLibrary/Common/Collections/String.sc	/^	compile { ^thisProcess.interpreter.compile(this); }$/;"	m
compile	SCClassLibrary/Common/Core/Kernel.sc	/^	compile { arg string;$/;"	m
compile	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	compile {$/;"	m
compileFile	SCClassLibrary/Common/Core/Kernel.sc	/^	compileFile { arg pathName;$/;"	m
complementary	SCClassLibrary/Common/Core/Color.sc	/^	complementary {$/;"	m
complex	SCClassLibrary/Common/Math/Number.sc	/^	complex { arg imaginaryPart; ^Complex.new(this, imaginaryPart) }$/;"	m
composeBinaryOp	SCClassLibrary/Common/Audio/UGen.sc	/^	composeBinaryOp { arg aSelector, anInput;$/;"	m
composeBinaryOp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	composeBinaryOp { arg aSelector, something, adverb;$/;"	m
composeBinaryOp	SCClassLibrary/Common/Streams/Patterns.sc	/^	composeBinaryOp { arg operator, pattern, adverb;$/;"	m
composeBinaryOp	SCClassLibrary/Common/Streams/Stream.sc	/^	composeBinaryOp { arg argSelector, argStream, adverb;$/;"	m
composeBinaryOp	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	composeBinaryOp { arg aSelector, something, adverb;$/;"	m
composeBinaryOp	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	composeBinaryOp { arg aSelector, something, adverb;$/;"	m
composeBinaryOp	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	composeBinaryOp { | aSelector, something |$/;"	m
composeBinaryOp	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	composeBinaryOp { arg aSelector, something;$/;"	m
composeBinaryOp	quarks/cruciallib/Players/AbstractPlayer.sc	/^	composeBinaryOp { arg operator, pattern;$/;"	m
composeEvents	SCClassLibrary/Common/Collections/Environment.sc	/^	composeEvents { arg event; ^this.copy.putAll(event) }$/;"	m
composeEvents	SCClassLibrary/Common/Core/Object.sc	/^	composeEvents { arg event; ^event.copy }$/;"	m
composeNAryOp	SCClassLibrary/Common/Audio/UGen.sc	/^	composeNAryOp { arg aSelector, anArgList;$/;"	m
composeNAryOp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	composeNAryOp { arg aSelector, anArgList;$/;"	m
composeNAryOp	SCClassLibrary/Common/Streams/Patterns.sc	/^	composeNAryOp { arg selector, argList;$/;"	m
composeNAryOp	SCClassLibrary/Common/Streams/Stream.sc	/^	composeNAryOp { arg argSelector, anArgList;$/;"	m
composeNAryOp	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	composeNAryOp { arg aSelector, anArgList;$/;"	m
composeNAryOp	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	composeNAryOp { arg aSelector, anArgList;$/;"	m
composeNAryOp	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	composeNAryOp { |aSelector, anArgList|$/;"	m
composeNAryOp	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	composeNAryOp { arg aSelector, anArgList;$/;"	m
composeUnaryOp	SCClassLibrary/Common/Audio/UGen.sc	/^	composeUnaryOp { arg aSelector;$/;"	m
composeUnaryOp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	composeUnaryOp { arg aSelector;$/;"	m
composeUnaryOp	SCClassLibrary/Common/Streams/Patterns.sc	/^	composeUnaryOp { arg operator;$/;"	m
composeUnaryOp	SCClassLibrary/Common/Streams/Stream.sc	/^	composeUnaryOp { arg argSelector;$/;"	m
composeUnaryOp	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	composeUnaryOp { arg aSelector;$/;"	m
composeUnaryOp	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	composeUnaryOp { arg aSelector;$/;"	m
composeUnaryOp	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	composeUnaryOp { | aSelector |$/;"	m
composeUnaryOp	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	composeUnaryOp { arg aSelector;$/;"	m
composeUnaryOp	quarks/cruciallib/Players/AbstractPlayer.sc	/^	composeUnaryOp { arg operator;$/;"	m
compress	SCClassLibrary/Common/Collections/SparseArray.sc	/^	compress {$/;"	m
conjugate	SCClassLibrary/Common/Math/Complex.sc	/^	conjugate { ^Complex.new(real, imag.neg) }$/;"	m
conjugate	SCClassLibrary/DefaultLibrary/extNumber.sc	/^	conjugate {$/;"	m
conjugate	quarks/MathLib/classes/various/Quaternion.sc	/^	conjugate {$/;"	m
connect	SCClassLibrary/Common/Control/NetAddr.sc	/^	connect { | disconnectHandler |$/;"	m
connect	SCClassLibrary/Common/Control/Server.sc	/^	connect {$/;"	m
connect	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	connect { arg from, aconnections;$/;"	m
connect	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	connect {}$/;"	m
connect	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	connect {}$/;"	m
connect	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  connect { arg source, targets;$/;"	m
connectFunction	SCClassLibrary/QtCollider/QObject.sc	/^  connectFunction { arg signal, object, synchronous = false;$/;"	m
connectMethod	SCClassLibrary/QtCollider/QObject.sc	/^  connectMethod { arg signal, handler, direct=false;$/;"	m
connectPatchIns	quarks/cruciallib/Instr/Patch.sc	/^	connectPatchIns {$/;"	m
connectSlot	SCClassLibrary/QtCollider/QObject.sc	/^  connectSlot { arg signal, receiver, slot;$/;"	m
connectTo	quarks/cruciallib/Players/AbstractPlayer.sc	/^	connectTo { arg hasInput;$/;"	m
connectTo	quarks/cruciallib/Players/Patching.sc	/^	connectTo { arg patchIn,needsValueSetNow=true;$/;"	m
connectToInputAt	quarks/cruciallib/Players/AbstractPlayer.sc	/^	connectToInputAt { arg player,inputIndex=0;$/;"	m
connectToPatchIn	quarks/cruciallib/Editors/NumberEditor.sc	/^	connectToPatchIn { arg patchIn,needsValueSetNow = true;$/;"	m
connectToPatchIn	quarks/cruciallib/Editors/NumberEditor.sc	/^	connectToPatchIn { } \/\/ nothing doing.  we are ir only$/;"	m
connectToPatchIn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	connectToPatchIn { arg patchIn, needsValueSetNow=true;$/;"	m
connectToPatchIn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	connectToPatchIn { arg patchIn,needsValueSetNow = true;$/;"	m
connectToPatchIn	quarks/cruciallib/Players/instrSupport.sc	/^	connectToPatchIn {}$/;"	m
constantFolding	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	constantFolding {$/;"	m
constrain	SCClassLibrary/Common/GUI/ControlModel.sc	/^	constrain { arg value;$/;"	m
constrain	quarks/cruciallib/Instr/MoreSpecs.sc	/^	constrain { arg ... args;$/;"	m
constrain	quarks/cruciallib/Instr/MoreSpecs.sc	/^	constrain { arg instr; ^instr }$/;"	m
constrain	quarks/cruciallib/Instr/MoreSpecs.sc	/^	constrain { arg val;$/;"	m
constrain	quarks/cruciallib/Instr/MoreSpecs.sc	/^	constrain { arg value; ^itemSpec.constrain(value) }$/;"	m
constrain	quarks/cruciallib/Instr/MoreSpecs.sc	/^	constrain { arg value;$/;"	m
constrainStream	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	constrainStream { arg str, inval, cleanup;$/;"	m
constrainStream	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	constrainStream { arg str;$/;"	m
constrainStream	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	constrainStream { arg stream;$/;"	m
constructionGrid	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	constructionGrid {$/;"	m
constructionGrid	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	constructionGrid {$/;"	m
constructionGrid_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	constructionGrid_ { arg point;$/;"	m
contains	SCClassLibrary/Common/Collections/String.sc	/^	contains { arg string, offset = 0;$/;"	m
containsPoint	SCClassLibrary/Common/Geometry/Rect.sc	/^	containsPoint { arg aPoint;$/;"	m
containsRect	SCClassLibrary/Common/Geometry/Rect.sc	/^	containsRect { arg aRect;$/;"	m
containsSeqColl	SCClassLibrary/Common/Collections/Array.sc	/^	containsSeqColl {$/;"	m
containsSeqColl	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	containsSeqColl { ^this.any(_.isSequenceableCollection) }$/;"	m
containsSeqColl	SCClassLibrary/Common/Core/Object.sc	/^	containsSeqColl { ^false }$/;"	m
containsStringAt	SCClassLibrary/Common/Collections/String.sc	/^	containsStringAt { arg index, string;$/;"	m
containsi	SCClassLibrary/Common/Collections/String.sc	/^	containsi { arg string, offset = 0;$/;"	m
contents	SCClassLibrary/Common/Streams/IOStream.sc	/^	contents {$/;"	m
contents	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	contents {$/;"	m
contentsCopy	SCClassLibrary/Common/Core/Object.sc	/^	contentsCopy { ^this.shallowCopy }$/;"	m
contextTrimmed	SCClassLibrary/deprecated/deprecated-3.6-help/HelpSearchResult.sc	/^	contextTrimmed {$/;"	m
continue	SCClassLibrary/Common/Control/MIDIOut.sc	/^	continue {$/;"	m
control	SCClassLibrary/Common/Control/MIDIOut.sc	/^	control { arg chan, ctlNum=7, val=64;$/;"	m
control	quarks/cruciallib/Players/Patching.sc	/^	control { arg controlPatchIn,needsValueSetNow;$/;"	m
control	quarks/cruciallib/Players/Patching.sc	/^	control { arg controlPatchIn,needsValueSetNow=false;$/;"	m
control	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	control { arg ... associations;$/;"	m
control	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	control { arg ... assns;$/;"	m
controlKeys	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	controlKeys { | except, noInternalKeys = true |$/;"	m
controlKeysValues	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	controlKeysValues { | keys, except |$/;"	m
controlNames	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	controlNames {$/;"	m
controlNames	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	controlNames { | except, addNodeMap = true |$/;"	m
controlNames	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	controlNames { ^nil }$/;"	m
controlNames	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	controlNames { ^synthDef.allControlNames }$/;"	m
controlNames	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	controlNames {$/;"	m
convertArg	quarks/cruciallib/Instr/Instr.sc	/^	convertArg { arg a,i;$/;"	m
convertArgs	quarks/cruciallib/Instr/Instr.sc	/^	convertArgs { arg args;$/;"	m
convertDigits	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	convertDigits { arg base=10;$/;"	m
convertFunction	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	convertFunction { arg func;$/;"	m
convertOneRhythm	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	convertOneRhythm { arg list, tie = 0.0, stretch = 1.0;$/;"	m
convertRhythm	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	convertRhythm {$/;"	m
coordinates	quarks/MathLib/classes/various/Quaternion.sc	/^	coordinates {$/;"	m
copy	SCClassLibrary/Common/Audio/UGen.sc	/^ 	copy {$/;"	m
copy	SCClassLibrary/Common/Collections/LinkedList.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/Collections/List.sc	/^	copy { ^this.class.copyInstance(this) }$/;"	m
copy	SCClassLibrary/Common/Collections/Set.sc	/^	copy { ^this.shallowCopy.array_( array.copy ) }$/;"	m
copy	SCClassLibrary/Common/Collections/Set.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/Collections/SparseArray.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/Control/Server.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/Core/Object.sc	/^	copy { ^this.shallowCopy }$/;"	m
copy	SCClassLibrary/Common/Core/Thread.sc	/^	copy { ^this } \/\/ sorry cannot copy$/;"	m
copy	SCClassLibrary/Common/GUI/ControlModel.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/GUI/Grid.sc	/^	copy { ^super.copy.clearCache }$/;"	m
copy	SCClassLibrary/Common/GUI/Grid.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	copy {$/;"	m
copy	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	copy {$/;"	m
copy	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	copy {$/;"	m
copy	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	copy {$/;"	m
copy	quarks/cruciallib/Editors/EnvEditor.sc	/^	copy { ^this.class.new(value.deepCopy,levelSpec) }$/;"	m
copy	quarks/cruciallib/Editors/NumberEditor.sc	/^	copy { ^this.class.new(value,spec) }$/;"	m
copy	quarks/cruciallib/Editors/NumberEditor.sc	/^	copy { ^this.class.new(value,spec).lag_(lag) }$/;"	m
copy	quarks/cruciallib/Editors/NumberEditor.sc	/^	copy { ^this.class.new.value_(value.copy) }$/;"	m
copy	quarks/cruciallib/Instr/Instr.sc	/^	copy { ^this } \/\/ unless you change the address its the same instr$/;"	m
copy	quarks/cruciallib/Players/AbstractPlayer.sc	/^	copy {$/;"	m
copyData	SCClassLibrary/Common/Control/Buffer.sc	/^	copyData { arg buf, dstStartAt = 0, srcStartAt = 0, numSamples = -1;$/;"	m
copyFromStart	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	copyFromStart { arg end;$/;"	m
copyImmutable	SCClassLibrary/Common/Core/Object.sc	/^	copyImmutable {$/;"	m
copyMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	copyMsg { arg buf, dstStartAt = 0, srcStartAt = 0, numSamples = -1;$/;"	m
copyRange	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	copyRange { arg start, end;$/;"	m
copyRange	SCClassLibrary/Common/Collections/List.sc	/^	copyRange { arg start, end; ^this.class.newUsing(array.copyRange(start, end)) }$/;"	m
copyRange	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	copyRange { arg start, end;$/;"	m
copyRange	SCClassLibrary/Common/Collections/SortedList.sc	/^	copyRange { arg start, end; ^this.class.newUsing(array.copyRange(start, end)).function_(function) }$/;"	m
copySeries	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	copySeries { arg first, second, last;$/;"	m
copySeries	SCClassLibrary/Common/Collections/List.sc	/^	copySeries { arg first, second, last;$/;"	m
copySeries	SCClassLibrary/Common/Collections/SortedList.sc	/^	copySeries { arg first, second, last;$/;"	m
copyToEnd	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	copyToEnd { arg start;$/;"	m
corr	quarks/MathLib/classes/statistics/extStatistics.sc	/^	corr { arg that; $/;"	m
corr2	quarks/MathLib/classes/statistics/extStatistics.sc	/^	corr2 { |that|$/;"	m
cos	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	cos { ^this.performUnaryOp('cos') }$/;"	m
cos	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	cos { ^this.composeUnaryOp('cos') }$/;"	m
cos	SCClassLibrary/Common/Core/Symbol.sc	/^	cos { ^this }$/;"	m
cos	SCClassLibrary/Common/Math/Signal.sc	/^	cos { _Cos; ^this.primitiveFailed }$/;"	m
cos	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	cos { _Cos; ^this.primitiveFailed }$/;"	m
cosh	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	cosh { ^this.performUnaryOp('cosh') }$/;"	m
cosh	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	cosh { ^this.composeUnaryOp('cosh') }$/;"	m
cosh	SCClassLibrary/Common/Core/Symbol.sc	/^	cosh { ^this }$/;"	m
cosh	SCClassLibrary/Common/Math/Signal.sc	/^	cosh { _CosH; ^this.primitiveFailed }$/;"	m
cosh	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	cosh { _CosH; ^this.primitiveFailed }$/;"	m
count	SCClassLibrary/Common/Collections/Collection.sc	/^	count { | function |$/;"	m
count	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	count { arg n=1;$/;"	m
count	SCClassLibrary/QtCollider/QLayout.sc	/^  count { ^this.getProperty(\\count) }$/;"	m
count	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	count { arg sum;$/;"	m
countsDo	SCClassLibrary/Common/Collections/Bag.sc	/^	countsDo { arg function;$/;"	m
cov	quarks/MathLib/classes/various/Matrix.sc	/^	cov { |mean|$/;"	m
covML	quarks/MathLib/classes/various/Matrix.sc	/^	covML { |mean|$/;"	m
cpsmidi	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	cpsmidi { ^this.performUnaryOp('cpsmidi') }$/;"	m
cpsmidi	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	cpsmidi { ^this.composeUnaryOp('cpsmidi') }$/;"	m
cpsmidi	SCClassLibrary/Common/Core/Symbol.sc	/^	cpsmidi { ^this }$/;"	m
cpsmidi	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	cpsmidi { _CPSMIDI; ^this.primitiveFailed }$/;"	m
cpsoct	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	cpsoct { ^this.performUnaryOp('cpsoct') }$/;"	m
cpsoct	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	cpsoct { ^this.composeUnaryOp('cpsoct') }$/;"	m
cpsoct	SCClassLibrary/Common/Core/Symbol.sc	/^	cpsoct { ^this }$/;"	m
cpsoct	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	cpsoct { _CPSOct; ^this.primitiveFailed }$/;"	m
crash	SCClassLibrary/Common/Core/Object.sc	/^	crash { _HostDebugger } \/\/ for serious problems..$/;"	m
create	SCClassLibrary/Common/Collections/Library.sc	/^	create { arg ... args;$/;"	m
createArgs	quarks/cruciallib/Instr/Interface.sc	/^	createArgs { arg argargs;$/;"	m
createArgs	quarks/cruciallib/Instr/Patch.sc	/^	createArgs { arg argargs;$/;"	m
createCache	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	createCache { \/\/ only for Filters$/;"	m
critical_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	critical_ {arg val;$/;"	m
critical_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  critical_ {arg val;$/;"	m
crop	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	crop {|aRect|$/;"	m
crout	quarks/MathLib/classes/various/LinearSystem.sc	/^	crout { var lu = this.deepCopy, n = this.cols, row, i, j, k, p;$/;"	m
croutPivot	quarks/MathLib/classes/various/LinearSystem.sc	/^	croutPivot { var lu = this.deepCopy, n = this.cols, i, j, k, p, max, pcol, pivot = $/;"	m
croutPivotSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	croutPivotSolve { arg b, pivot; var n = this.cols, i, k, dum, x = Array.newClear(n);$/;"	m
croutSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	croutSolve { arg b; var x;$/;"	m
cs	SCClassLibrary/Common/Core/Object.sc	/^	cs { ^this.asCompileString }$/;"	m
ctlnum	SCClassLibrary/Common/Control/MIDIOut.sc	/^	ctlnum { ^b }$/;"	m
ctlval	SCClassLibrary/Common/Control/MIDIOut.sc	/^	ctlval { ^c }$/;"	m
ctranspose	SCClassLibrary/Common/Streams/Patterns.sc	/^	ctranspose { arg n; ^Paddp(\\ctranspose, n, this) }$/;"	m
ctrl_scale_	SCClassLibrary/QtCollider/BasicViews.sc	/^  ctrl_scale_ { arg aFloat;$/;"	m
cubed	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	cubed { ^this.performUnaryOp('cubed') }$/;"	m
cubed	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	cubed { ^this.composeUnaryOp('cubed') }$/;"	m
cubed	SCClassLibrary/Common/Math/Complex.sc	/^	cubed { ^this * this * this }$/;"	m
cubed	SCClassLibrary/Common/Math/Signal.sc	/^	cubed { _Cubed; ^this.primitiveFailed }$/;"	m
cubed	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	cubed { _Cubed; ^this.primitiveFailed }$/;"	m
cue	SCClassLibrary/Common/Files/SoundFile.sc	/^	cue { | ev, playNow = false, closeWhenDone = false |$/;"	m
cueSoundFile	SCClassLibrary/Common/Control/Buffer.sc	/^	cueSoundFile { arg path,startFrame,completionMessage;$/;"	m
cueSoundFileMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	cueSoundFileMsg { arg path,startFrame = 0,completionMessage;$/;"	m
curdle	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	curdle { arg probability;$/;"	m
current	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	current { ^currentState }$/;"	m
currentBounds	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	currentBounds {$/;"	m
currentClass	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	currentClass { ^currentState.currentClass }$/;"	m
currentFrame	quarks/cruciallib/Players/SFP/SFP.sc	/^	currentFrame {$/;"	m
currentItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  currentItem {$/;"	m
currentItem_	SCClassLibrary/QtCollider/QTreeView.sc	/^  currentItem_ { arg item;$/;"	m
currentLine	SCClassLibrary/Common/GUI/Document.sc	/^	currentLine {$/;"	m
currentLine	SCClassLibrary/QtCollider/QTextView.sc	/^  currentLine {$/;"	m
currentMethod	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	currentMethod { ^currentState.currentMethod }$/;"	m
currentSelection	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  currentSelection { ^this.getProperty( \\currentSelection ); }$/;"	m
currentSelection_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  currentSelection_ { arg index; this.setProperty( \\currentSelection, index ); }$/;"	m
currentvalue	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	currentvalue { \/\/returns value of selected index$/;"	m
currentvalue	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  currentvalue { ^this.y }$/;"	m
currentvalue	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  currentvalue {$/;"	m
currentvalue_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	currentvalue_ { arg iny;$/;"	m
currentvalue_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  currentvalue_ { arg aFloat;$/;"	m
currentvalue_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  currentvalue_ { arg aFloat;$/;"	m
curveValue	SCClassLibrary/Common/Audio/Env.sc	/^	curveValue { arg curve;$/;"	m
curvelin	SCClassLibrary/Common/Audio/UGen.sc	/^	curvelin { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
curvelin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	curvelin { arg ... args; ^this.multiChannelPerform('curvelin', *args) }$/;"	m
curvelin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	curvelin { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
curvelin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	curvelin { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
curves	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  curves { this.nonimpl( "curves" ); }$/;"	m
curves	quarks/cruciallib/Editors/EnvEditor.sc	/^	curves { ^value.curves }$/;"	m
curves_	SCClassLibrary/Common/Audio/Env.sc	/^	curves_ { arg z;$/;"	m
curves_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	curves_ { arg inCurves;$/;"	m
curves_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  curves_ { arg curves;$/;"	m
cutoff	SCClassLibrary/Common/Collections/Harmonics.sc	/^	cutoff { arg n;$/;"	m
cyc	SCClassLibrary/Common/Core/Object.sc	/^	cyc { arg n = inf;$/;"	m
cycle_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  cycle_ { arg val;$/;"	m
darken	SCClassLibrary/Common/Core/Color.sc	/^	darken { arg aColor, opacity=1.0;$/;"	m
dataCoordinates	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	dataCoordinates {$/;"	m
data_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  data_ { arg data;$/;"	m
data_	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	data_ { arg array;$/;"	m
dayStamp	SCClassLibrary/Common/Math/Date.sc	/^	dayStamp {$/;"	m
db	SCClassLibrary/Common/Streams/Patterns.sc	/^	db { arg db; ^Paddp(\\db, db, this) }$/;"	m
dbRange_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	dbRange_ { arg db;$/;"	m
db_	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	db_ { arg db;$/;"	m
dbamp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	dbamp { ^this.performUnaryOp('dbamp') }$/;"	m
dbamp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	dbamp { ^this.composeUnaryOp('dbamp') }$/;"	m
dbamp	SCClassLibrary/Common/Core/Symbol.sc	/^	dbamp { ^this }$/;"	m
dbamp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	dbamp { _DbAmp; ^this.primitiveFailed }$/;"	m
debug	SCClassLibrary/Common/Control/Engine.sc	/^	debug { |text|$/;"	m
debug	SCClassLibrary/Common/Core/debug.sc	/^	debug { arg caller;$/;"	m
decay	SCClassLibrary/Common/Collections/Harmonics.sc	/^	decay { arg k = 1;$/;"	m
decimals	SCClassLibrary/QtCollider/QNumberBox.sc	/^  decimals { ^this.getProperty(\\decimals); }$/;"	m
decimals_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  decimals_ {  arg decimals; this.setProperty( \\decimals, decimals ); }$/;"	m
declareFeature	SCClassLibrary/Platform/Platform.sc	/^	declareFeature { | aFeature |$/;"	m
decorator	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	decorator { ^view.decorator }$/;"	m
decorator_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	decorator_ { |dec| view.decorator = dec }$/;"	m
decorator_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	decorator_ {|decor|$/;"	m
decorator_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decorator_ { arg decor;$/;"	m
decorator_	SCClassLibrary/QtCollider/QView.sc	/^  decorator_ { arg decor;$/;"	m
decrement	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	decrement { this.valueAction = this.value + this.spec.step }$/;"	m
decrement	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	decrement { this.valueAction = this.value - step; }$/;"	m
decrement	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	decrement { |zoom=1| ^this.valueAction = this.value - (max(this.step, this.pixelStep) * zoom) }$/;"	m
decrement	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	decrement { |zoom=1|$/;"	m
decrement	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	decrement { |zoom=1| ^this.valueAction = (this.value - (keystep * zoom)).max(0) }$/;"	m
decrement	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	decrement {arg mul=1; this.valueAction = this.value - (step*mul); }$/;"	m
decrement	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decrement { arg mul=1; this.valueAction = this.value - (step*mul); }$/;"	m
decrement	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decrement { |zoom=1| ^this.valueAction = this.value - (max(this.step, this.pixelStep) * zoom) }$/;"	m
decrement	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decrement { |zoom=1|$/;"	m
decrement	SCClassLibrary/QtCollider/BasicViews.sc	/^  decrement { arg factor = 1.0; this.invokeMethod( \\decrement, factor.asFloat ); }$/;"	m
decrement	SCClassLibrary/QtCollider/QKnob.sc	/^  decrement { |zoom=1| ^this.valueAction = (this.value - (keystep * zoom)) }$/;"	m
decrementX	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decrementX { |zoom=1| ^this.x = this.x - (this.pixelStepX * zoom) }$/;"	m
decrementX	SCClassLibrary/QtCollider/QSlider2D.sc	/^  decrementX { arg factor=1.0; this.invokeMethod( \\decrementX, factor.asFloat ); }$/;"	m
decrementY	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	decrementY { |zoom=1| ^this.y = this.y - (this.pixelStepY * zoom) }$/;"	m
decrementY	SCClassLibrary/QtCollider/QSlider2D.sc	/^  decrementY { arg factor=1.0; this.invokeMethod( \\decrementY, factor.asFloat ); }$/;"	m
deepCollect	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	deepCollect { arg depth = 1, function, index = 0, rank = 0;$/;"	m
deepCollect	SCClassLibrary/Common/Collections/Collection.sc	/^	deepCollect { | depth = 1, function, index = 0, rank = 0 |$/;"	m
deepCollect	SCClassLibrary/Common/Core/Object.sc	/^	deepCollect { arg depth, function, index = 0, rank = 0; ^function.value(this, index, rank) }$/;"	m
deepCopy	SCClassLibrary/Common/Core/Object.sc	/^	deepCopy {$/;"	m
deepDo	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	deepDo { arg depth = 1, function, index = 0, rank = 0;$/;"	m
deepDo	SCClassLibrary/Common/Collections/Collection.sc	/^	deepDo { | depth = 1, function, index = 0, rank = 0 |$/;"	m
deepDo	SCClassLibrary/Common/Core/Object.sc	/^	deepDo { arg depth, function, index = 0, rank = 0; function.value(this, index, rank) }$/;"	m
deepDo	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	deepDo { arg function;$/;"	m
deepDo	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	deepDo { arg function;$/;"	m
deepDo	quarks/cruciallib/Players/AbstractPlayer.sc	/^	deepDo { arg function;\/\/ includes self$/;"	m
deepFiles	SCClassLibrary/Common/Files/PathName.sc	/^	deepFiles {$/;"	m
deepFree	SCClassLibrary/Common/Control/Node.sc	/^	deepFree {$/;"	m
deepFreeMsg	SCClassLibrary/Common/Control/Node.sc	/^	deepFreeMsg {$/;"	m
deepScan	SCClassLibrary/Common/Files/Directory.sc	/^	deepScan { arg func;$/;"	m
deepSpecAt	quarks/cruciallib/Instr/Patch.sc	/^	deepSpecAt { arg argi,offset=0;$/;"	m
deepWakeUp	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	deepWakeUp {$/;"	m
defArgAt	quarks/cruciallib/Instr/Instr.sc	/^	defArgAt { arg i;$/;"	m
defArgAt	quarks/cruciallib/Instr/Instr.sc	/^	defArgAt {$/;"	m
defArgs	quarks/cruciallib/Instr/Instr.sc	/^	defArgs { ^(func.def.prototypeFrame ? []).asList }$/;"	m
defArgs	quarks/cruciallib/Instr/Instr.sc	/^	defArgs {$/;"	m
defName	quarks/cruciallib/Instr/Instr.sc	/^	defName { ^this.class.symbolizeName(name).collect(_.asString).join($.) }$/;"	m
defName	quarks/cruciallib/Instr/Patch.sc	/^	defName {$/;"	m
defName	quarks/cruciallib/Players/AbstractPlayer.sc	/^	defName { ^this.source.defName }$/;"	m
defName	quarks/cruciallib/Players/AbstractPlayer.sc	/^	defName {$/;"	m
defName	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	defName {$/;"	m
defName	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	defName { ^(this.class.name.asString ++ operator.asString$/;"	m
defName	quarks/cruciallib/Players/PlayerMixer.sc	/^	defName { ^this.class.asString ++ this.players.size.asString ++ this.numChannels.asString }$/;"	m
defName	quarks/cruciallib/Players/SFP/SFP.sc	/^	defName { ^this.class.name.asString ++ this.numChannels }$/;"	m
defName	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	defName { ^"%%%".format(this.class.name,this.numChannels,subject.numChannels) }$/;"	m
defName	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	defName { ^this.class.name.asString ++ numChannels.asString ++ limit.binaryValue.asString ++$/;"	m
defName	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	defName { ^this.class.name.asString ++ this.numChannels.asString }$/;"	m
default	quarks/cruciallib/Instr/MoreSpecs.sc	/^	default { ^Array.fill(size,{itemSpec.default}) }$/;"	m
default	quarks/cruciallib/Instr/MoreSpecs.sc	/^	default { ^itemSpec.default }$/;"	m
default	quarks/cruciallib/Instr/MoreSpecs.sc	/^	default { ^prototype }$/;"	m
default	quarks/cruciallib/Instr/MoreSpecs.sc	/^	default { ^prototype.copy }$/;"	m
default	quarks/cruciallib/Instr/MoreSpecs.sc	/^	default { ^this.defaultControl }$/;"	m
defaultArgs	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	defaultArgs { ^def.prototypeFrame }$/;"	m
defaultArgs	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	defaultArgs { ^nil }$/;"	m
defaultAtTime	quarks/cruciallib/Players/AbstractPlayer.sc	/^	defaultAtTime { ^nil } \/\/ immediate$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultCanReceiveDrag { ^false }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultCanReceiveDrag {$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	defaultCanReceiveDrag {$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultCanReceiveDrag {	^true; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultCanReceiveDrag { ^false }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultCanReceiveDrag { ^true;	}$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultCanReceiveDrag {$/;"	m
defaultCanReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	defaultCanReceiveDrag {$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultCanReceiveDrag { ^((QView.currentDrag == true) || (QView.currentDrag == false)); }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultCanReceiveDrag { ^QView.currentDrag.isNumber; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultCanReceiveDrag { ^true; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  defaultCanReceiveDrag { ^true; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QKnob.sc	/^  defaultCanReceiveDrag { ^QView.currentDrag.isNumber }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QListView.sc	/^  defaultCanReceiveDrag { ^QView.currentDrag.isNumber; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  defaultCanReceiveDrag { ^true; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QNumberBox.sc	/^  defaultCanReceiveDrag { ^QView.currentDrag.isNumber; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  defaultCanReceiveDrag { ^(QView.currentDrag.class === Point); }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QSlider.sc	/^  defaultCanReceiveDrag { ^QView.currentDrag.isNumber; }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/QSlider2D.sc	/^  defaultCanReceiveDrag { ^(QView.currentDrag.class === Point); }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultCanReceiveDrag { ^false }$/;"	m
defaultCanReceiveDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultCanReceiveDrag { ^true }$/;"	m
defaultControl	SCClassLibrary/Common/GUI/ControlModel.sc	/^	defaultControl {$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl {  arg val;$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^BeatClockPlayer.new(4.0) }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^BufferProxy(numFrames,numChannels,sampleRate) }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^Pbind.new }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^Sample.new } \/\/ silent sample$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^TempoPlayer.new }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^itemSpec.defaultControl }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { ^this.default }$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { arg env;$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl { arg val;$/;"	m
defaultControl	quarks/cruciallib/Instr/MoreSpecs.sc	/^	defaultControl {$/;"	m
defaultControl	quarks/cruciallib/Instr/instrSupport.sc	/^	defaultControl { arg val;$/;"	m
defaultEvent	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	defaultEvent {$/;"	m
defaultGUIScheme	SCClassLibrary/Platform/Platform.sc	/^	defaultGUIScheme { if (GUI.get(\\qt).notNil) {^\\qt} {^\\swing} }$/;"	m
defaultGUIScheme	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	defaultGUIScheme { ^\\iphone }$/;"	m
defaultGUIScheme	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	defaultGUIScheme { if (GUI.get(\\qt).notNil) {^\\qt} {^\\cocoa} }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultGetDrag { ^Point(this.lo, this.hi) }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultGetDrag { ^nil }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultGetDrag { ^Point(this.lo, this.hi) }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultGetDrag { ^nil }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultGetDrag { ^object }$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultGetDrag { ^this.string; }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultGetDrag { ^this.value; }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QKnob.sc	/^  defaultGetDrag { ^this.value }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QListView.sc	/^  defaultGetDrag { ^this.value; }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QNumberBox.sc	/^  defaultGetDrag { ^this.value; }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  defaultGetDrag { ^Point(this.lo,this.hi); }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QSlider.sc	/^  defaultGetDrag { ^this.value; }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QSlider2D.sc	/^  defaultGetDrag { ^Point(this.x,this.y); }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/QTextView.sc	/^  defaultGetDrag {$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultGetDrag { ^nil }$/;"	m
defaultGetDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultGetDrag { ^object }$/;"	m
defaultGroup	SCClassLibrary/Common/Control/Server.sc	/^	defaultGroup { ^Group.basicNew(this, 1) }$/;"	m
defaultGroupID	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	defaultGroupID { ^server.nextNodeID }$/;"	m
defaultHIDScheme	SCClassLibrary/Platform/Platform.sc	/^	defaultHIDScheme { ^\\none }$/;"	m
defaultHIDScheme	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	defaultHIDScheme { ^\\osx_hid }$/;"	m
defaultHIDScheme	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^	defaultHIDScheme { ^\\linux_hid }$/;"	m
defaultHIDScheme	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	defaultHIDScheme { ^\\osx_hid }$/;"	m
defaultHIDScheme	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	defaultHIDScheme { ^nil }$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultKeyDownAction { ^nil }$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode,keycode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode,keycode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultKeyDownAction { ^nil }$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode, keycode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultKeyDownAction { arg char, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultKeyDownAction { arg key, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^    defaultKeyDownAction { arg key, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	defaultKeyDownAction { arg key, modifiers, unicode;$/;"	m
defaultKeyDownAction	SCClassLibrary/QtCollider/QKnob.sc	/^  defaultKeyDownAction { arg char, modifiers, unicode, keycode, key;$/;"	m
defaultKeyDownAction	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  defaultKeyDownAction { arg char, mod, uni, keycode, key;$/;"	m
defaultKeyDownAction	SCClassLibrary/QtCollider/QSlider.sc	/^  defaultKeyDownAction {  arg char, modifiers, unicode, keycode, key;$/;"	m
defaultKeyDownAction	SCClassLibrary/QtCollider/QView.sc	/^  defaultKeyDownAction { arg char, modifiers, unicode, keycode, key; }$/;"	m
defaultKeyUpAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultKeyUpAction { ^nil }$/;"	m
defaultKeyUpAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultKeyUpAction { ^nil }$/;"	m
defaultKeyUpAction	SCClassLibrary/QtCollider/QView.sc	/^  defaultKeyUpAction { arg char, modifiers, unicode, keycode, key; }$/;"	m
defaultReceiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultReceiveDrag { |x, y|$/;"	m
defaultReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/BasicViews.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QKnob.sc	/^  defaultReceiveDrag { this.valueAction = QView.currentDrag }$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QListView.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QNumberBox.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QSlider.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/QSlider2D.sc	/^  defaultReceiveDrag {$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultReceiveDrag { this.object = QView.currentDrag; action.value(this); }$/;"	m
defaultReceiveDrag	SCClassLibrary/QtCollider/dnd_views.sc	/^  defaultReceiveDrag { }$/;"	m
defaultTempDir	SCClassLibrary/Platform/Platform.sc	/^	defaultTempDir { ^this.subclassResponsibility() }$/;"	m
defaultTempDir	SCClassLibrary/Platform/Platform.sc	/^	defaultTempDir {$/;"	m
defaultTempDir	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	defaultTempDir {$/;"	m
defaults	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	defaults {$/;"	m
defer	SCClassLibrary/Common/Core/Function.sc	/^	defer { arg delta;$/;"	m
defer	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^				defer {window.close};$/;"	m
defer	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^			defer {$/;"	m
defer	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^		defer {$/;"	m
defer	SCClassLibrary/scide_scqt/ScIDE.sc	/^		defer {$/;"	m
defer	quarks/cruciallib/Gui/gui.sc	/^	defer { arg function;$/;"	m
defer	quarks/cruciallib/Instr/Interface.sc	/^	defer { arg function;$/;"	m
defineBus	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	defineBus { | rate = \\audio, numChannels |$/;"	m
defineBus	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	defineBus { | rate = \\audio, numChannels |$/;"	m
definesClasses	SCClassLibrary/Common/Quarks/packages.sc	/^	definesClasses {$/;"	m
definesExtensionMethods	SCClassLibrary/Common/Quarks/packages.sc	/^	definesExtensionMethods {$/;"	m
degrad	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	degrad { ^this.performUnaryOp('degrad') }$/;"	m
degrad	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	degrad { ^this.composeUnaryOp('degrad') }$/;"	m
degrad	SCClassLibrary/Common/Core/Symbol.sc	/^	degrad { ^this }$/;"	m
degrad	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	degrad { ^this*pi\/180 }$/;"	m
degree	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	degree { var d = this.size-1;$/;"	m
degreeToFreq	SCClassLibrary/Common/Collections/Scale.sc	/^	degreeToFreq { |degree, rootFreq, octave|$/;"	m
degreeToKey	SCClassLibrary/Common/Audio/UGen.sc	/^	degreeToKey { arg scale, stepsPerOctave=12;$/;"	m
degreeToKey	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	degreeToKey { arg scale, stepsPerOctave=12;$/;"	m
degreeToKey	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	degreeToKey { arg scale, stepsPerOctave=12;$/;"	m
degreeToKey	SCClassLibrary/Common/Core/Symbol.sc	/^	degreeToKey { ^this }$/;"	m
degreeToKey	SCClassLibrary/Common/Math/Integer.sc	/^	degreeToKey { arg scale, stepsPerOctave = 12;$/;"	m
degreeToKey	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	degreeToKey { arg scale, stepsPerOctave = 12;$/;"	m
degreeToRatio	SCClassLibrary/Common/Collections/Scale.sc	/^	degreeToRatio { |degree, octave = 0|$/;"	m
deinterlace	SCClassLibrary/Common/Collections/Array.sc	/^	deinterlace { arg clumpSize=2, numChan=1;$/;"	m
delay	SCClassLibrary/Common/Audio/Env.sc	/^	delay { arg delay;$/;"	m
delay	quarks/Feedback/Fb.sc	/^	delay {$/;"	m
delimit	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	delimit { arg function;$/;"	m
delta	SCClassLibrary/Common/Collections/Event.sc	/^	delta {$/;"	m
delta	SCClassLibrary/Common/Streams/Rest.sc	/^	delta {}$/;"	m
delta	SCClassLibrary/Platform/linux/LID.sc	/^	delta { ^delta }$/;"	m
delta	SCClassLibrary/Platform/osx/MXHID.sc	/^	delta { ^delta }$/;"	m
delta	quarks/cruciallib/Players/AbstractPlayer.sc	/^	delta { 	^this.beatDuration	}$/;"	m
deltaTillNext	quarks/cruciallib/Scheduling/OSCSched.sc	/^	deltaTillNext { arg quantize; $/;"	m
dependants	SCClassLibrary/Common/Core/Nil.sc	/^	dependants {$/;"	m
dependants	SCClassLibrary/Common/Core/Object.sc	/^	dependants {$/;"	m
dependencies	SCClassLibrary/Common/Quarks/Quark.sc	/^	dependencies { |recursive = false, knownList|$/;"	m
deprecated	SCClassLibrary/Common/Core/Object.sc	/^	deprecated { arg method, alternateMethod;$/;"	m
depth	SCClassLibrary/Common/Collections/Pair.sc	/^	depth { var i = 0, link;$/;"	m
depthFirstPostOrderTraversal	SCClassLibrary/Common/Collections/Pair.sc	/^	depthFirstPostOrderTraversal { arg function;$/;"	m
depthFirstPreOrderTraversal	SCClassLibrary/Common/Collections/Pair.sc	/^	depthFirstPreOrderTraversal { arg function;$/;"	m
dereference	SCClassLibrary/Common/Core/Object.sc	/^	dereference { ^this } \/\/ see Ref::dereference$/;"	m
dereference	SCClassLibrary/Common/Core/Ref.sc	/^	dereference { ^value }$/;"	m
dereference	quarks/cruciallib/Editors/NumberEditor.sc	/^	dereference { ^this.value }$/;"	m
dereference	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	dereference {$/;"	m
deselect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	deselect {$/;"	m
deselect	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	deselect { this.colorNormal(selected) }$/;"	m
deselectIndex	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  deselectIndex { arg index;$/;"	m
destPath	SCClassLibrary/SCDoc/SCDoc.sc	/^    destPath {$/;"	m
destroy	SCClassLibrary/QtCollider/QObject.sc	/^  destroy {$/;"	m
destroy	quarks/cruciallib/Control/MIDIClock.sc	/^	destroy {$/;"	m
destroy	quarks/cruciallib/Scheduling/Tempo.sc	/^	destroy {$/;"	m
det	quarks/MathLib/classes/various/Matrix.sc	/^	det { \/\/ return the determinant as float$/;"	m
detect	SCClassLibrary/Common/Collections/Collection.sc	/^	detect { | function |$/;"	m
detect	SCClassLibrary/Common/Core/Nil.sc	/^	detect {}$/;"	m
detectIndex	SCClassLibrary/Common/Collections/Collection.sc	/^	detectIndex { | function |$/;"	m
detectIndexMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	detectIndexMsg { | selector ... args |$/;"	m
detectMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	detectMsg { | selector ... args |$/;"	m
determineRate	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	determineRate { arg a, b;$/;"	m
detune	SCClassLibrary/Common/Streams/Patterns.sc	/^	detune { arg n; ^Paddp(\\detune, n, this) }$/;"	m
device	SCClassLibrary/Common/Control/Server.sc	/^	device {$/;"	m
deviceSpec	SCClassLibrary/Common/Control/WII.sc	/^	deviceSpec {$/;"	m
device_	SCClassLibrary/Common/Control/Server.sc	/^	device_ {$/;"	m
didBecomeKey	SCClassLibrary/Common/GUI/Document.sc	/^	didBecomeKey {$/;"	m
didBecomeKey	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	didBecomeKey {$/;"	m
didBecomeKey	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	didBecomeKey {$/;"	m
didClose	SCClassLibrary/Common/GUI/Inspector.sc	/^	didClose {$/;"	m
didFail	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	didFail { onLoadFailed.value(this); }$/;"	m
didFree	quarks/cruciallib/Instr/InstrSpawner.sc	/^	didFree {$/;"	m
didFree	quarks/cruciallib/Instr/Patch.sc	/^	didFree {$/;"	m
didFree	quarks/cruciallib/Players/AbstractPlayer.sc	/^	didFree {$/;"	m
didFree	quarks/cruciallib/Players/PlayerSocket.sc	/^	didFree {$/;"	m
didLoad	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	didLoad { onLoadFinished.value(this); }$/;"	m
didLoadFromPath	quarks/cruciallib/Players/pathUtilities.sc	/^	didLoadFromPath { arg argpath;$/;"	m
didLoadFromPath	quarks/cruciallib/Players/pathUtilities.sc	/^	didLoadFromPath {}$/;"	m
didResignKey	SCClassLibrary/Common/GUI/Document.sc	/^	didResignKey {$/;"	m
didResignKey	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	didResignKey {$/;"	m
didResignKey	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	didResignKey {$/;"	m
didSaveAs	quarks/cruciallib/Players/AbstractPlayer.sc	/^	didSaveAs { arg apath;$/;"	m
didSpawn	quarks/cruciallib/Control/MIDIPlayer.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Instr/InstrSpawner.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	didSpawn { |synth|$/;"	m
didSpawn	quarks/cruciallib/Instr/Interface.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Instr/Patch.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Instr/instrSupport.sc	/^	didSpawn {}$/;"	m
didSpawn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Players/SFP/SFP.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	didSpawn {$/;"	m
didSpawn	quarks/cruciallib/Sequencers/BusDriver.sc	/^	didSpawn {$/;"	m
didStop	quarks/cruciallib/Instr/InstrSpawner.sc	/^	didStop {$/;"	m
didStop	quarks/cruciallib/Instr/Interface.sc	/^	didStop {$/;"	m
didStop	quarks/cruciallib/Players/AbstractPlayer.sc	/^	didStop {$/;"	m
didStop	quarks/cruciallib/Players/SFP/SFP.sc	/^	didStop {$/;"	m
didStop	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	didStop {$/;"	m
didStop	quarks/cruciallib/Sequencers/BusDriver.sc	/^	didStop { this.stopRoutine }$/;"	m
didUseAllocated	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	didUseAllocated { arg vbounds;$/;"	m
die	SCClassLibrary/Common/Collections/String.sc	/^	die { arg ... culprits;$/;"	m
die	quarks/cruciallib/deprecated-3.5.sc	/^	die { arg ... culprits;$/;"	m
difference	SCClassLibrary/Common/Collections/Collection.sc	/^	difference { | that |$/;"	m
difference	SCClassLibrary/Common/Collections/Set.sc	/^	difference { arg that;$/;"	m
differentiate	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	differentiate {$/;"	m
differentiate	SCClassLibrary/Common/Streams/Patterns.sc	/^	differentiate { ^Pdiff(this) }$/;"	m
difsqr	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	difsqr { arg aNumber, adverb; ^this.performBinaryOp('difsqr', aNumber, adverb) }$/;"	m
difsqr	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	difsqr { arg function, adverb; ^this.composeBinaryOp('difsqr', function, adverb) }$/;"	m
difsqr	SCClassLibrary/Common/Math/Signal.sc	/^	difsqr { arg aNumber; _DifSqr; ^aNumber.performBinaryOpOnSignal('difsqr', this) }$/;"	m
difsqr	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	difsqr { arg aNumber, adverb; _DifSqr; ^aNumber.performBinaryOpOnSimpleNumber('difsqr', this, adverb) }$/;"	m
digit	SCClassLibrary/Common/Core/Char.sc	/^	digit {$/;"	m
dir	SCClassLibrary/Common/GUI/Document.sc	/^	dir {$/;"	m
dirname	SCClassLibrary/Common/Collections/String.sc	/^	dirname {$/;"	m
disable	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	disable {$/;"	m
disconnect	SCClassLibrary/Common/Control/NetAddr.sc	/^	disconnect {$/;"	m
disconnect	SCClassLibrary/Common/Control/Server.sc	/^	disconnect {$/;"	m
disconnect	SCClassLibrary/Platform/osx/extMIDIOut.sc	/^	disconnect {}$/;"	m
disconnect	SCClassLibrary/Platform/windows/extMIDIOut.sc	/^	disconnect {}$/;"	m
disconnect	quarks/cruciallib/Players/AbstractPlayer.sc	/^	disconnect {$/;"	m
disconnect	quarks/cruciallib/Players/Patching.sc	/^	disconnect {$/;"	m
disconnectFrom	quarks/cruciallib/Players/Patching.sc	/^	disconnectFrom { |patchOut|$/;"	m
disconnectFunction	SCClassLibrary/QtCollider/QObject.sc	/^  disconnectFunction { arg signal, object;$/;"	m
disconnectMethod	SCClassLibrary/QtCollider/QObject.sc	/^  disconnectMethod { arg signal, method;$/;"	m
discretize	SCClassLibrary/Common/Audio/Env.sc	/^	discretize { arg n = 1024;$/;"	m
diskName	SCClassLibrary/Common/Files/PathName.sc	/^	diskName {  ^fullPath.copyRange(0, this.colonIndices.first - 1) }$/;"	m
dispatch_	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     dispatch_ { arg disp;$/;"	m
displayString_	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	displayString_ { arg str;$/;"	m
dist	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	dist { arg function; ^this.composeBinaryOp('dist', function) }$/;"	m
dist	SCClassLibrary/Common/Geometry/Point.sc	/^	dist { arg aPoint;$/;"	m
dist	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	dist { arg aCart;$/;"	m
distance	quarks/MathLib/classes/various/Quaternion.sc	/^	distance { |other|$/;"	m
distort	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	distort { ^this.performUnaryOp('distort') }$/;"	m
distort	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	distort { ^this.composeUnaryOp('distort') }$/;"	m
distort	SCClassLibrary/Common/Core/Symbol.sc	/^	distort { ^this }$/;"	m
distort	SCClassLibrary/Common/Math/Signal.sc	/^	distort { _Distort; ^this.primitiveFailed }$/;"	m
distort	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	distort { _Distort; ^this.primitiveFailed }$/;"	m
distributable	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	distributable { ^canReleaseSynth } \/\/ n_free not implemented in shared node proxy$/;"	m
distributable	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	distributable { ^false } \/\/ shared proxy support$/;"	m
distribution_	SCClassLibrary/Common/Streams/Patterns.sc	/^	distribution_ { arg list;$/;"	m
div	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	div { arg aNumber, adverb; ^this.performBinaryOp('div', aNumber, adverb) }$/;"	m
div	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	div { arg function, adverb; ^this.composeBinaryOp('div', function, adverb) }$/;"	m
div	SCClassLibrary/Common/Geometry/Point.sc	/^	div { arg scale;$/;"	m
div	SCClassLibrary/Common/Math/Number.sc	/^	div { arg aNumber; ^this.subclassResponsibility(thisMethod) }$/;"	m
div	SCClassLibrary/Common/Math/Signal.sc	/^	div { arg aNumber; _IDiv; ^aNumber.performBinaryOpOnSignal('div', this) }$/;"	m
div	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	div { arg aNumber, adverb; _IDiv; ^aNumber.performBinaryOpOnSimpleNumber('div', this, adverb) }$/;"	m
div	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	div { arg scale;$/;"	m
divide	SCClassLibrary/Common/Core/Color.sc	/^	divide { arg aColor, opacity=1.0;$/;"	m
do	SCClassLibrary/Common/Collections/Array2D.sc	/^	do { arg func;$/;"	m
do	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/Bag.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/Collection.sc	/^	do { ^this.subclassResponsibility(thisMethod) }$/;"	m
do	SCClassLibrary/Common/Collections/Dictionary.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/Interval.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/Library.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/LinkedList.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/List.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/Pair.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	do {|func|$/;"	m
do	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	do { | function |$/;"	m
do	SCClassLibrary/Common/Collections/Set.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Collections/SparseArray.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Core/Nil.sc	/^	do {}$/;"	m
do	SCClassLibrary/Common/Core/Object.sc	/^	do { arg function; function.value(this, 0) }$/;"	m
do	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	do { |func| func.(class,rect,0) }$/;"	m
do	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	do { |func|$/;"	m
do	SCClassLibrary/Common/Math/Float.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Math/Integer.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Streams/Patterns.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/Common/Streams/Stream.sc	/^	do { arg function, inval;$/;"	m
do	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	do { arg function;$/;"	m
do	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	do { |action|$/;"	m
do	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	do { arg function;$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	doAction { action.value(this) }$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^	doAction { action.value(this) }$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	doAction { action.value(this); }$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	doAction { action.value(this) }$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	doAction { action.value(this) }$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	doAction {this.action.value(this)}$/;"	m
doAction	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	doAction {widget.doAction;}$/;"	m
doAction	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	doAction { view.doAction }$/;"	m
doAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	doAction { arg modifiers;$/;"	m
doAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	doAction {$/;"	m
doAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	doAction {$/;"	m
doAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	doAction { arg modifiers;$/;"	m
doAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	doAction { arg x, y, pressure, tiltx, tilty, deviceID,$/;"	m
doAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	doAction {$/;"	m
doAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	doAction { arg x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount,absoluteZ,rotation;$/;"	m
doAction	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	doAction {$/;"	m
doAction	SCClassLibrary/QtCollider/BasicViews.sc	/^  doAction { arg modifiers;$/;"	m
doAction	SCClassLibrary/QtCollider/QView.sc	/^  doAction {$/;"	m
doAction	quarks/cruciallib/Gui/CXMenu.sc	/^	doAction {$/;"	m
doAction	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	doAction {  ^action.value(selected,this) }$/;"	m
doAdjacentPairs	SCClassLibrary/Common/Collections/List.sc	/^	doAdjacentPairs { arg function;$/;"	m
doAdjacentPairs	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	doAdjacentPairs { arg function;$/;"	m
doCol	quarks/MathLib/classes/various/Matrix.sc	/^	doCol { arg col, func;$/;"	m
doComplexOp	SCClassLibrary/Common/Core/Symbol.sc	/^	doComplexOp { ^this }$/;"	m
doDelegateAction	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	doDelegateAction {$/;"	m
doDrawFunc	SCClassLibrary/QtCollider/QUserView.sc	/^  doDrawFunc { drawFunc.value(this) }$/;"	m
doDrawFunc	SCClassLibrary/QtCollider/QWindow.sc	/^  doDrawFunc { win.drawFunc.value(win); }$/;"	m
doDrawFunc	SCClassLibrary/QtCollider/QWindow.sc	/^  doDrawFunc { window.drawFunc.value(window) }$/;"	m
doFreqScope	quarks/cruciallib/Gui/SynthConsole.sc	/^	doFreqScope {$/;"	m
doFunction	SCClassLibrary/QtCollider/QObject.sc	/^  doFunction { arg f ... args; f.performList(\\value, this, args); }$/;"	m
doFunctionPerform	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	doFunctionPerform { arg selector, args;$/;"	m
doFunctionPerform	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	doFunctionPerform { arg selector; ^this[selector] }$/;"	m
doFunctions	SCClassLibrary/Common/Control/OSCBundle.sc	/^	doFunctions {$/;"	m
doLeafDo	SCClassLibrary/Common/Collections/Library.sc	/^	doLeafDo {$/;"	m
doLinkAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	doLinkAction { arg url, description;$/;"	m
doListOp	SCClassLibrary/Common/Core/Symbol.sc	/^	doListOp { arg aSelector, aList;$/;"	m
doMatrix	quarks/MathLib/classes/various/Matrix.sc	/^	doMatrix { arg function;$/;"	m
doMetaAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	doMetaAction {$/;"	m
doMetaAction	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  doMetaAction {$/;"	m
doMetaAction	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  doMetaAction {$/;"	m
doMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	doMsg { | selector ... args |$/;"	m
doNotificationAction	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	doNotificationAction {$/;"	m
doNumberOp	SCClassLibrary/Common/Core/Symbol.sc	/^	doNumberOp { ^this }$/;"	m
doOnApplicationStart	SCClassLibrary/Platform/osx/ApplicationStart.sc	/^	doOnApplicationStart {$/;"	m
doOnCmdPeriod	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnCmdPeriod { ^this.cmdPeriod } \/\/ compatibility$/;"	m
doOnCmdPeriod	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnCmdPeriod { this.value }$/;"	m
doOnError	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnError { this.value }$/;"	m
doOnServerBoot	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnServerBoot { arg server; this.value(server) }$/;"	m
doOnServerBoot	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	doOnServerBoot { arg server;$/;"	m
doOnServerQuit	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnServerQuit { arg server; this.value(server) }$/;"	m
doOnServerQuit	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	doOnServerQuit {$/;"	m
doOnServerQuit	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	doOnServerQuit { arg server;$/;"	m
doOnServerQuit	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  doOnServerQuit {$/;"	m
doOnServerTree	SCClassLibrary/Common/Control/Server.sc	/^	doOnServerTree {$/;"	m
doOnServerTree	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnServerTree { arg server; this.value(server) }$/;"	m
doOnServerTree	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	doOnServerTree {$/;"	m
doOnServerTree	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  doOnServerTree {$/;"	m
doOnShutDown	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnShutDown { this.value }$/;"	m
doOnStartUp	SCClassLibrary/Common/Control/extSystemActions.sc	/^	doOnStartUp { this.value }$/;"	m
doPlay	quarks/cruciallib/Gui/SynthConsole.sc	/^	doPlay {$/;"	m
doPost	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	doPost { arg action, nodeID, groupID, prevID, nextID;$/;"	m
doPost	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	doPost { arg action, nodeID, groupID, prevID, nextID;$/;"	m
doPrepare	SCClassLibrary/Common/Control/OSCBundle.sc	/^	doPrepare { arg server, onComplete;$/;"	m
doPrepare	quarks/cruciallib/Gui/SynthConsole.sc	/^	doPrepare {$/;"	m
doRange	SCClassLibrary/Common/Collections/SparseArray.sc	/^	doRange { arg function, from = 0, to;$/;"	m
doRow	quarks/MathLib/classes/various/Matrix.sc	/^	doRow { arg row, func;$/;"	m
doSave	quarks/cruciallib/Gui/SynthConsole.sc	/^	doSave {$/;"	m
doSaveAs	quarks/cruciallib/Gui/SynthConsole.sc	/^	doSaveAs {$/;"	m
doScope	quarks/cruciallib/Gui/SynthConsole.sc	/^	doScope { arg duration=0.5;$/;"	m
doSend	SCClassLibrary/Common/Audio/SynthDef.sc	/^	doSend { |server, completionMsg|$/;"	m
doSendFunctions	SCClassLibrary/Common/Control/OSCBundle.sc	/^	doSendFunctions {$/;"	m
doSignalOp	SCClassLibrary/Common/Core/Symbol.sc	/^	doSignalOp { ^this }$/;"	m
doSortedTreeDo	SCClassLibrary/Common/Collections/Library.sc	/^	doSortedTreeDo {$/;"	m
doStop	quarks/cruciallib/Gui/SynthConsole.sc	/^	doStop { arg stopFunc;$/;"	m
doTreeCollect	SCClassLibrary/Common/Collections/Library.sc	/^	doTreeCollect { arg path, object, branchFunc, leafFunc, postBranchFunc;$/;"	m
doTreeDo	SCClassLibrary/Common/Collections/Library.sc	/^	doTreeDo {$/;"	m
doWhenBooted	SCClassLibrary/Common/Control/Server.sc	/^	doWhenBooted { arg onComplete, limit=100, onFailure;$/;"	m
doWrite	quarks/cruciallib/Gui/SynthConsole.sc	/^	doWrite { arg path, argduration;$/;"	m
document	SCClassLibrary/Common/Streams/History.sc	/^	document { arg title="";	\/\/ platform dependent ...$/;"	m
document	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	document { | includeSettings = true, includeMonitor = true |$/;"	m
document	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	document { | keys, onlyAudibleOutput = false, includeSettings = true |$/;"	m
documentOutput	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	documentOutput {$/;"	m
doesNotUnderstand	SCClassLibrary/Common/Collections/Dictionary.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^    	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/Common/Core/Object.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	doesNotUnderstand { |selector ... args|$/;"	m
doesNotUnderstand	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCQuartzComposerView.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	doesNotUnderstand { arg selector ... args;$/;"	m
doesNotUnderstand	quarks/cruciallib/Control/CCBank.sc	/^	doesNotUnderstand { |key ... args|$/;"	m
doesNotUnderstand	quarks/cruciallib/Instr/Patch.sc	/^	doesNotUnderstand { arg selector ... dnuargs;$/;"	m
domainCoordinates	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	domainCoordinates { |size|$/;"	m
domainSpec_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	domainSpec_ { |sp|$/;"	m
domainSpecs_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	domainSpecs_ { |argSpecs|$/;"	m
doolittle	quarks/MathLib/classes/various/LinearSystem.sc	/^	doolittle { var lu = this.deepCopy, n = this.cols, i, j, k, p, row;$/;"	m
doolittlePivot	quarks/MathLib/classes/various/LinearSystem.sc	/^	doolittlePivot { var lu = this.deepCopy, n = this.cols, i, j, k, p, max, pcol, pivot = 	Array.newClear(n);$/;"	m
doolittlePivotSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	doolittlePivotSolve { arg b, pivot; var n = this.cols, i, k, dum, x = Array.newClear(n);$/;"	m
doolittleSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	doolittleSolve { arg b; var x;$/;"	m
dot	SCClassLibrary/Common/Streams/Stream.sc	/^	dot { arg function, stream;$/;"	m
dotNotation	quarks/cruciallib/Instr/Instr.sc	/^	dotNotation { \/\/ "dir.subdir.file.instrName"$/;"	m
dotNotation	quarks/cruciallib/Instr/Instr.sc	/^	dotNotation { ^ugenClass }$/;"	m
dpoll	SCClassLibrary/Common/Audio/UGen.sc	/^	dpoll { arg label, run = 1, trigid = -1;$/;"	m
dpoll	SCClassLibrary/Common/Collections/Array.sc	/^	dpoll { arg label, run = 1, trigid = -1;$/;"	m
drag	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	drag { |x,y|$/;"	m
dragAction	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	dragAction { |i|$/;"	m
dragEnterEvent	SCClassLibrary/QtCollider/QView.sc	/^  dragEnterEvent { arg internal, data;$/;"	m
dragLabel_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	dragLabel_ { arg string;$/;"	m
dragLabel_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	dragLabel_ { arg string;$/;"	m
dragMoveEvent	SCClassLibrary/QtCollider/QView.sc	/^  dragMoveEvent { arg x, y;$/;"	m
draw	SCClassLibrary/Common/GUI/Grid.sc	/^	draw {$/;"	m
draw	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	draw {$/;"	m
draw	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	draw {$/;"	m
draw	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	draw {$/;"	m
draw	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	draw {$/;"	m
draw	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	draw {}$/;"	m
draw	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	draw {|aFunction|$/;"	m
draw	SCClassLibrary/Common/Geometry/Rect.sc	/^	draw { arg color, operation=2;$/;"	m
draw	SCClassLibrary/QtCollider/QUserView.sc	/^  draw {$/;"	m
drawAtPoint	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	drawAtPoint { arg point, font, color;$/;"	m
drawAtPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	drawAtPoint { arg point, fromRect, operation='sourceOver', fraction=1.0;$/;"	m
drawBackground	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	drawBackground {$/;"	m
drawBounds	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	drawBounds {$/;"	m
drawCenteredIn	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	drawCenteredIn { arg rect, font, color;$/;"	m
drawData	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	drawData {$/;"	m
drawFunc_	SCClassLibrary/QtCollider/QUserView.sc	/^  drawFunc_ { arg aFunction;$/;"	m
drawFunc_	SCClassLibrary/QtCollider/QWindow.sc	/^  drawFunc_ { arg aFunction;$/;"	m
drawHook	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	drawHook {$/;"	m
drawHook	SCClassLibrary/Common/GUI/osx/scide_scapp/deprecated-3.5.sc	/^	drawHook {$/;"	m
drawHook	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  drawHook {$/;"	m
drawHook_	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	drawHook_ { |aFunction|$/;"	m
drawHook_	SCClassLibrary/Common/GUI/osx/scide_scapp/deprecated-3.5.sc	/^	drawHook_ { |aFunction|$/;"	m
drawHook_	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  drawHook_ { |aFunction|$/;"	m
drawInRect	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	drawInRect { arg rect, font, color;$/;"	m
drawInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	drawInRect { arg rect, fromRect, operation='sourceOver', fraction=1.0;$/;"	m
drawLabels	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	drawLabels {$/;"	m
drawLeftJustIn	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	drawLeftJustIn { arg rect, font, color;$/;"	m
drawLines	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	drawLines { arg abool;$/;"	m
drawLines_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	drawLines_ { arg abool;$/;"	m
drawLines_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  drawLines_ { arg aBool;$/;"	m
drawLines_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  drawLines_ { arg bool;$/;"	m
drawRects_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	drawRects_ { arg abool;$/;"	m
drawRects_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  drawRects_ { arg aBool;$/;"	m
drawRects_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  drawRects_ { arg bool;$/;"	m
drawRightJustIn	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	drawRightJustIn { arg rect, font, color;$/;"	m
drawRow	SCClassLibrary/deprecated/deprecated-3.6-help/HelpSearchResult.sc	/^	drawRow { |parent, bounds, action|$/;"	m
drawStringAtPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	drawStringAtPoint { arg string, point, font, color;$/;"	m
drawingEnabled_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	drawingEnabled_ { |bool|$/;"	m
drawingEnabled_	SCClassLibrary/QtCollider/QUserView.sc	/^  drawingEnabled_ { arg boolean;$/;"	m
drawingEnabled_	SCClassLibrary/QtCollider/QWindow.sc	/^  drawingEnabled_ { arg bool; canvas.setProperty( \\drawingEnabled, bool ); }$/;"	m
drawingEnabled_	SCClassLibrary/QtCollider/QWindow.sc	/^  drawingEnabled_ { arg bool; this.setProperty( \\drawingEnabled, bool ); }$/;"	m
drawsPeak_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	drawsPeak_ {arg bool;$/;"	m
drawsPeak_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  drawsPeak_ {arg bool;$/;"	m
drawsWaveForm	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  drawsWaveForm { ^this.getProperty( \\drawsWaveform ); }$/;"	m
drawsWaveForm_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  drawsWaveForm_ { arg boolean; this.setProperty( \\drawsWaveform, boolean ); }$/;"	m
drop	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	drop { arg n;$/;"	m
drop	SCClassLibrary/Common/Streams/History.sc	/^	drop { |num|$/;"	m
drop	SCClassLibrary/Common/Streams/Patterns.sc	/^	drop { arg n; ^Pdrop(n, this) }$/;"	m
dropEvent	SCClassLibrary/QtCollider/QView.sc	/^  dropEvent { arg x, y;$/;"	m
dsched	quarks/cruciallib/Scheduling/tempoClock.sc	/^	dsched { arg delta,item;$/;"	m
dump	SCClassLibrary/Common/Collections/List.sc	/^	dump { "List's array:\\n".post; array.dump }$/;"	m
dump	SCClassLibrary/Common/Core/Object.sc	/^	dump { _ObjectDump }$/;"	m
dumpAll	SCClassLibrary/Common/Collections/Collection.sc	/^	dumpAll { this.do { | item | item.dump; }; } \/\/ convenience method$/;"	m
dumpAllMethods	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	dumpAllMethods {$/;"	m
dumpArgs	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	dumpArgs {$/;"	m
dumpArgs	SCClassLibrary/Common/Audio/UGen.sc	/^	dumpArgs {$/;"	m
dumpBackTrace	SCClassLibrary/Common/Core/Object.sc	/^	dumpBackTrace { _DumpBackTrace }$/;"	m
dumpByteCodes	SCClassLibrary/Common/Core/Kernel.sc	/^	dumpByteCodes { _DumpByteCodes }$/;"	m
dumpByteCodes	SCClassLibrary/Common/Core/Kernel.sc	/^	dumpByteCodes { arg methodName;$/;"	m
dumpCaps	SCClassLibrary/Platform/linux/LID.sc	/^	dumpCaps {$/;"	m
dumpClassSubtree	SCClassLibrary/Common/Core/Kernel.sc	/^	dumpClassSubtree { _DumpClassSubtree }$/;"	m
dumpContexts	SCClassLibrary/Common/Core/Kernel.sc	/^	dumpContexts {$/;"	m
dumpDetailedBackTrace	SCClassLibrary/Common/Core/Object.sc	/^	dumpDetailedBackTrace { _DumpDetailedBackTrace }$/;"	m
dumpEvents	SCClassLibrary/Platform/linux/LID.sc	/^	dumpEvents {$/;"	m
dumpFullInterface	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	dumpFullInterface {$/;"	m
dumpInterface	SCClassLibrary/Common/Core/Kernel.sc	/^	dumpInterface {$/;"	m
dumpMethodList	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	dumpMethodList {$/;"	m
dumpName	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	dumpName {$/;"	m
dumpName	SCClassLibrary/Common/Audio/UGen.sc	/^	dumpName {$/;"	m
dumpOSC	SCClassLibrary/Common/Control/Server.sc	/^	dumpOSC { arg code=1;$/;"	m
dumpStack	SCClassLibrary/Common/Core/Object.sc	/^	dumpStack { _DumpStack }$/;"	m
dumpSubclassList	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	dumpSubclassList {$/;"	m
dumpToDoc	SCClassLibrary/Common/Files/PathName.sc	/^	dumpToDoc { arg title="Untitled";$/;"	m
dumpTree	SCClassLibrary/Common/Control/Node.sc	/^	dumpTree { arg postControls = false;$/;"	m
dumpTree	SCClassLibrary/Common/Files/PathName.sc	/^	dumpTree {$/;"	m
dumpTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	dumpTree { |node, prefix=""|$/;"	m
dumpUGens	SCClassLibrary/Common/Audio/SynthDef.sc	/^	dumpUGens {$/;"	m
dup	SCClassLibrary/Common/Core/Function.sc	/^	dup { arg n = 2;$/;"	m
dup	SCClassLibrary/Common/Core/Object.sc	/^	dup { arg n = 2;$/;"	m
duration	SCClassLibrary/Common/Audio/Env.sc	/^	duration {$/;"	m
duration	SCClassLibrary/Common/Control/Buffer.sc	/^	duration { ^numFrames \/ sampleRate }$/;"	m
duration	SCClassLibrary/Common/Files/SoundFile.sc	/^	duration { ^numFrames\/sampleRate }$/;"	m
duration	quarks/cruciallib/Sample/Sample.sc	/^	duration { ^this.size \/ this.sampleRate }$/;"	m
durationGui	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	durationGui { arg layout;$/;"	m
durationString	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	durationString { \/\/ time$/;"	m
duration_	SCClassLibrary/Common/Audio/Env.sc	/^	duration_ { arg dur;$/;"	m
dydt	quarks/MathLib/classes/Solver/Solver.sc	/^	dydt {$/;"	m
edit	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	edit { | nSliders, parent, bounds |$/;"	m
editData	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	editData { |x, y, plotIndex|$/;"	m
editData	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	editData { |x, y|$/;"	m
editDataIndex	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	editDataIndex { |index, x, y, plotIndex|$/;"	m
editDataLine	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	editDataLine { |pt1, pt2, plotIndex|$/;"	m
editEnv	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	editEnv { arg env, minValue, maxValue, duration;$/;"	m
editKeys	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	editKeys {$/;"	m
editKeys	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	editKeys {$/;"	m
editSpec	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	editSpec {$/;"	m
editString	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	editString { |edKey|$/;"	m
editStrings	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	editStrings { |edKeys|$/;"	m
editWithCallback	quarks/cruciallib/Editors/NumberEditor.sc	/^	editWithCallback { arg callback;$/;"	m
editable_	SCClassLibrary/Common/GUI/Document.sc	/^	editable_ { | abool=true |$/;"	m
editable_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	editable_ { arg bool;$/;"	m
editable_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	editable_ { arg boolean;$/;"	m
editable_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	editable_ { arg val;$/;"	m
editable_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  editable_ { arg aBool;$/;"	m
editable_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  editable_ { arg aBool;$/;"	m
editable_	SCClassLibrary/QtCollider/QTextView.sc	/^  editable_ { arg aBool;$/;"	m
editor	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	editor { ^editGui }$/;"	m
edits	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	edits { ^paramGui.widgets }$/;"	m
eigenvalue	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	eigenvalue { var n = this.size-1, cm = Matrix.newClear(n, n), i, j, g, f, s, notConverged = 	true, rowNorm, colNorm, radix = 2, radix2 = radix*radix, t, zroots = Array.newClear(n), e, k, 	m, w, x, 	y, z, p, q, r, notlast, iter, a1, a2, a3;$/;"	m
elapsedBeats	SCClassLibrary/Common/Core/Clock.sc	/^	elapsedBeats {$/;"	m
elasticMode_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	elasticMode_ { arg mode;$/;"	m
elasticMode_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  elasticMode_ { arg int;$/;"	m
elasticSelection	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  elasticSelection {$/;"	m
elasticSelection_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  elasticSelection_ { arg bool;$/;"	m
eliminateMatrix	quarks/MathLib/classes/various/matrix_elimination.sc	/^	eliminateMatrix {$/;"	m
embed	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	embed { |val|$/;"	m
embedInStream	SCClassLibrary/Common/Audio/Env.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Collections/Association.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Collections/Dictionary.sc	/^	embedInStream { arg event;$/;"	m
embedInStream	SCClassLibrary/Common/Collections/Scale.sc	/^	embedInStream { ScaleStream(this).yield }$/;"	m
embedInStream	SCClassLibrary/Common/Core/Object.sc	/^	embedInStream { ^this.yield; }$/;"	m
embedInStream	SCClassLibrary/Common/Streams/ControlPatterns.sc	/^	embedInStream { arg event;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream {  arg event;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream { arg event, cleanup;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream { arg event;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream { arg inevent;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream { | event |$/;"	m
embedInStream	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	embedInStream {arg event;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	embedInStream {  arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	embedInStream { |inval|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/ListPatterns.sc	/^    embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream {  arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream { arg inevent;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream { arg inval; ^routineFunc.value(inval) }$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream { | inevent |$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Patterns.sc	/^	embedInStream { |inevent|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Penv.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pfx.sc	/^	embedInStream { arg inevent;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Plambda.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	embedInStream { |inevent|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Ppar.sc	/^	embedInStream { arg inevent;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Ppar.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pproto.sc	/^	embedInStream { arg inval, cleanup;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pproto.sc	/^	embedInStream { | event |$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Prewrite.sc	/^	embedInStream {  arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pseed.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pspawner.sc	/^	embedInStream { | inevent, cleanup |$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pspawner.sc	/^	embedInStream { | inevent, cleanup|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Pspawner.sc	/^	embedInStream { |inevent, cleanup|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^	embedInStream { |inval|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Rest.sc	/^	embedInStream { |inval|$/;"	m
embedInStream	SCClassLibrary/Common/Streams/Stream.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/Common/Streams/TimePatterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	embedInStream { arg inval, cleanup;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	embedInStream { arg inval, cleanup;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	embedInStream { arg inval, cleanup;$/;"	m
embedInStream	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	embedInStream { | inval | \/\/ for now, force multichannel expansion in streams early.$/;"	m
embedInStream	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	embedInStream { arg inval, repeats=inf; $/;"	m
embedInStream	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	embedInStream { arg inval, repeats=inf;$/;"	m
embedInStream	quarks/MathLib/classes/patterns/P3n1.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	quarks/MathLib/classes/patterns/Pboolnet.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	quarks/MathLib/classes/patterns/Preduce.sc	/^	embedInStream { arg inval;$/;"	m
embedInStream	quarks/cruciallib/Editors/NumberEditor.sc	/^	embedInStream { arg inval; ^this.asStream.embedInStream(inval); }$/;"	m
embedInStream	quarks/cruciallib/Instr/Patch.sc	/^	embedInStream { arg event;$/;"	m
embedInStream	quarks/cruciallib/Players/AbstractPlayer.sc	/^	embedInStream { arg inval;$/;"	m
embedLoopInStream	quarks/MathLib/classes/patterns/Pboolnet.sc	/^	embedLoopInStream { arg inval, bools, n;$/;"	m
embedSpyInStream	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	embedSpyInStream { arg pattern, repeats=inf, inval;$/;"	m
empty	SCClassLibrary/Common/Control/OSC.sc	/^	empty {$/;"	m
enable	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	enable {$/;"	m
enable	quarks/cruciallib/Players/Patching.sc	/^	enable {$/;"	m
enableConstructionGrid	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	enableConstructionGrid {$/;"	m
enableConstructionGrid_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	enableConstructionGrid_ { arg flag;$/;"	m
enableKeyDowns	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	enableKeyDowns { this.keyDownAction = this.keyDownResponder }$/;"	m
enabled	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	enabled { ^slider.enabled }$/;"	m
enabled	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	enabled {  ^view.enabled }$/;"	m
enabled	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	enabled { ^view.enabled }$/;"	m
enabled	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	enabled {$/;"	m
enabled	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	enabled {$/;"	m
enabled	SCClassLibrary/QtCollider/QView.sc	/^  enabled {$/;"	m
enabled_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	enabled_ { |flag| slider.enabled_(flag) }$/;"	m
enabled_	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	enabled_ { |bool| view.enabled_(bool) }$/;"	m
enabled_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	enabled_ { |b| view.enabled_(b) }$/;"	m
enabled_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	enabled_ { arg bool;$/;"	m
enabled_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	enabled_ { arg bool;$/;"	m
enabled_	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	enabled_ {|bool|$/;"	m
enabled_	SCClassLibrary/QtCollider/QView.sc	/^  enabled_ { arg bool;$/;"	m
end	SCClassLibrary/Common/Collections/Interval.sc	/^	end { ^start + size }$/;"	m
end	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	end { | fadeTime, reset = false |$/;"	m
end	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	end { arg fadeTime;$/;"	m
endFrontAction	SCClassLibrary/QtCollider/QWindow.sc	/^  endFrontAction { ^view.endFrontAction }$/;"	m
endFrontAction_	SCClassLibrary/QtCollider/QView.sc	/^  endFrontAction_ { arg aFunction;$/;"	m
endFrontAction_	SCClassLibrary/QtCollider/QWindow.sc	/^  endFrontAction_ { arg action; view.endFrontAction_(action) }$/;"	m
endFullScreen	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	endFullScreen {$/;"	m
endFullScreen	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	endFullScreen {$/;"	m
endFullScreen	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	endFullScreen {$/;"	m
endFullScreen	SCClassLibrary/QtCollider/QView.sc	/^  endFullScreen {$/;"	m
endFullScreen	SCClassLibrary/QtCollider/QWindow.sc	/^  endFullScreen { view.endFullScreen; }$/;"	m
endNumber	SCClassLibrary/Common/Files/PathName.sc	/^	endNumber {	\/\/ turn consecutive digits at the end of fullPath into a number.$/;"	m
endTime	SCClassLibrary/Common/Control/Score.sc	/^	endTime { ^score.last[0] }$/;"	m
endless	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	endless {$/;"	m
endsWith	SCClassLibrary/Common/Collections/String.sc	/^	endsWith { arg string;$/;"	m
enpath	quarks/cruciallib/Players/pathUtilities.sc	/^	enpath {$/;"	m
enpath	quarks/cruciallib/Players/pathUtilities.sc	/^	enpath {}$/;"	m
enterInterpretsSelection	SCClassLibrary/QtCollider/QTextView.sc	/^  enterInterpretsSelection { ^this.getProperty( \\enterInterpretsSelection ); }$/;"	m
enterInterpretsSelection	SCClassLibrary/QtCollider/QWebView.sc	/^  enterInterpretsSelection { ^this.getProperty( \\enterInterpretsSelection ); }$/;"	m
enterInterpretsSelection_	SCClassLibrary/QtCollider/QTextView.sc	/^  enterInterpretsSelection_ { arg bool;$/;"	m
enterInterpretsSelection_	SCClassLibrary/QtCollider/QWebView.sc	/^  enterInterpretsSelection_ { arg bool;$/;"	m
enterKey	SCClassLibrary/QtCollider/QListView.sc	/^  enterKey {$/;"	m
enterKeyAction_	SCClassLibrary/QtCollider/QListView.sc	/^  enterKeyAction_ { arg func;$/;"	m
entries	SCClassLibrary/Common/Files/PathName.sc	/^	entries {$/;"	m
env	quarks/cruciallib/Editors/EnvEditor.sc	/^	env {\/\/ direct access for the gui$/;"	m
envAt	SCClassLibrary/Common/Collections/Array.sc	/^	envAt { arg time;$/;"	m
envir	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	envir { ^object }$/;"	m
envir	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	envir { ^source.envir }$/;"	m
envirCompileString	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	envirCompileString {$/;"	m
envirFlop	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	envirFlop {$/;"	m
envirFlop	SCClassLibrary/Common/Core/Function.sc	/^	envirFlop {$/;"	m
envirGet	SCClassLibrary/Common/Core/Symbol.sc	/^	envirGet {$/;"	m
envirKey	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	envirKey { | envir |$/;"	m
envirPairs	SCClassLibrary/Common/Collections/Array.sc	/^	envirPairs {$/;"	m
envirPut	SCClassLibrary/Common/Core/Symbol.sc	/^	envirPut { arg aValue;$/;"	m
envir_	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	envir_ { arg argEnvir;$/;"	m
envir_	SCClassLibrary/Common/GUI/Document.sc	/^	envir_ { | ev |$/;"	m
envir_	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	envir_ { |envir| this.object_(envir) }$/;"	m
envir_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	envir_ { arg dict;$/;"	m
envir_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	envir_ { arg envir; source.envir_(envir) }$/;"	m
eq	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	eq { arg function, adverb; ^this.composeBinaryOp('==', function, adverb) }$/;"	m
equalWithPrecision	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	equalWithPrecision { arg that, precision=0.0001;$/;"	m
equalize	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	equalize { dict.do({ arg node; node.equalize }) }$/;"	m
equalize	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	equalize { var n, rec; $/;"	m
equals	SCClassLibrary/Common/Core/Object.sc	/^	equals { arg that, properties;$/;"	m
error	SCClassLibrary/Common/Collections/String.sc	/^	error { "ERROR: ".post; this.postln; }$/;"	m
errorPathString	SCClassLibrary/Common/Core/Error.sc	/^	errorPathString {$/;"	m
errorString	SCClassLibrary/Common/Core/Error.sc	/^	errorString {$/;"	m
escapeChar	SCClassLibrary/Common/Collections/String.sc	/^	escapeChar { arg charToEscape; \/\/ $"$/;"	m
escapeWindow	SCClassLibrary/DefaultLibrary/Main.sc	/^	escapeWindow { platform.escapeWindow }$/;"	m
escapeWindow	SCClassLibrary/Platform/osx/scide_scapp/extOSXPlatform.sc	/^	escapeWindow {$/;"	m
etempo_	SCClassLibrary/Common/Core/Clock.sc	/^	etempo_ { arg newTempo;$/;"	m
eval	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	eval { arg x; var y;$/;"	m
evalDerivs	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	evalDerivs { arg x; var i, n, nmax, k, l, lmax, len = this.size, res = Array.newClear(len), f;$/;"	m
evaluate	quarks/MathLib/classes/Solver/Solver.sc	/^	evaluate { |initial_y,t,dt,dydt|$/;"	m
evaluateJavaScript	SCClassLibrary/QtCollider/QWebView.sc	/^  evaluateJavaScript { arg script;$/;"	m
even	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	even { ^this.performUnaryOp('even') }$/;"	m
even	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	even { ^this.composeUnaryOp('even') }$/;"	m
even	SCClassLibrary/Common/Core/Symbol.sc	/^	even { ^this }$/;"	m
even	SCClassLibrary/Common/Math/Integer.sc	/^	even { ^(this & 1) == 0 }$/;"	m
eventAt	SCClassLibrary/Common/Collections/Environment.sc	/^	eventAt { arg key; ^this.at(key) }$/;"	m
eventAt	SCClassLibrary/Common/Core/Object.sc	/^	eventAt { ^nil }$/;"	m
every	SCClassLibrary/Common/Collections/Collection.sc	/^	every { | function |$/;"	m
excess	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	excess { arg aNumber, adverb; ^this.performBinaryOp('excess', aNumber, adverb) }$/;"	m
excess	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	excess { arg function=1, adverb; ^this.composeBinaryOp('excess', function, adverb) }$/;"	m
excess	SCClassLibrary/Common/Math/Signal.sc	/^	excess { arg aNumber; _Excess; ^aNumber.performBinaryOpOnSignal('excess', this) }$/;"	m
excess	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	excess { arg aNumber, adverb; _Excess; ^aNumber.performBinaryOpOnSimpleNumber('excess', this, adverb) }$/;"	m
exchangeCol	quarks/MathLib/classes/various/Matrix.sc	/^	exchangeCol { arg posA, posB;$/;"	m
exchangeRow	quarks/MathLib/classes/various/Matrix.sc	/^	exchangeRow { arg posA, posB;$/;"	m
exclude	SCClassLibrary/Common/Collections/String.sc	/^	exclude {$/;"	m
exclusivelyBetween	SCClassLibrary/Common/Math/Magnitude.sc	/^	exclusivelyBetween { arg lo, hi; ^(lo < this) and: { this < hi } }$/;"	m
executeFile	SCClassLibrary/Common/Core/Kernel.sc	/^	executeFile { arg pathName ... args;$/;"	m
existingProxies	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	existingProxies { ^object !? { object.arProxyNames } ? [] }$/;"	m
existingProxies	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	existingProxies { ^proxyspace.arProxyNames }$/;"	m
existingProxies	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	existingProxies { ^this.arProxyNames }$/;"	m
exit	SCClassLibrary/Common/Math/Integer.sc	/^	exit { _Exit }$/;"	m
exit	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	exit { | event, freeNodes = true |$/;"	m
exitFullScreen	SCClassLibrary/DefaultLibrary/Main.sc	/^	exitFullScreen { platform.exitFullScreen }$/;"	m
exitFullScreen	SCClassLibrary/Platform/osx/scide_scapp/extOSXPlatform.sc	/^	exitFullScreen {$/;"	m
exp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	exp { ^this.performUnaryOp('exp') }$/;"	m
exp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	exp { ^this.composeUnaryOp('exp') }$/;"	m
exp	SCClassLibrary/Common/Core/Symbol.sc	/^	exp { ^this }$/;"	m
exp	SCClassLibrary/Common/Math/Complex.sc	/^	exp { ^exp(real) * Complex.new(cos(imag), sin(imag)) }$/;"	m
exp	SCClassLibrary/Common/Math/Signal.sc	/^	exp { _Exp; ^this.primitiveFailed }$/;"	m
exp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	exp { _Exp; ^this.primitiveFailed }$/;"	m
expexp	SCClassLibrary/Common/Audio/Demand.sc	/^	expexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
expexp	SCClassLibrary/Common/Audio/UGen.sc	/^	expexp { arg inMin, inMax, outMin, outMax, clip = \\minmax;$/;"	m
expexp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	expexp { arg ... args; ^this.multiChannelPerform('expexp', *args) }$/;"	m
expexp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	expexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
expexp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	expexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
explin	SCClassLibrary/Common/Audio/Demand.sc	/^	explin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
explin	SCClassLibrary/Common/Audio/UGen.sc	/^	explin { arg inMin, inMax, outMin, outMax, clip = \\minmax;$/;"	m
explin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	explin { arg ... args; ^this.multiChannelPerform('explin', *args) }$/;"	m
explin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	explin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
explin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	explin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
exprand	SCClassLibrary/Common/Collections/Harmonics.sc	/^	exprand { arg lo=0.01, hi=1.0;$/;"	m
exprand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	exprand { arg aNumber, adverb; ^this.performBinaryOp('exprand', aNumber, adverb) }$/;"	m
exprand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	exprand { arg function, adverb; ^this.composeBinaryOp('exprand', function, adverb) }$/;"	m
exprand	SCClassLibrary/Common/Core/Symbol.sc	/^	exprand { ^this }$/;"	m
exprand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	exprand { arg aNumber, adverb; _ExpRandRange; ^aNumber.performBinaryOpOnSimpleNumber('exprand', this, adverb) }$/;"	m
exprange	SCClassLibrary/Common/Audio/Env.sc	/^	exprange { arg lo = 0.01, hi = 1.0;$/;"	m
exprange	SCClassLibrary/Common/Audio/UGen.sc	/^ 	exprange { arg lo = 0.01, hi = 1.0;$/;"	m
exprange	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	exprange { arg ... args; ^this.multiChannelPerform('exprange', *args) }$/;"	m
extend	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	extend { arg size, item;$/;"	m
extension	SCClassLibrary/Common/Files/PathName.sc	/^	extension {$/;"	m
extent	SCClassLibrary/Common/Geometry/Rect.sc	/^	extent { ^Point.new(width, height) }$/;"	m
extent_	SCClassLibrary/Common/Geometry/Rect.sc	/^	extent_ { | pt | width = pt.x; height = pt.y }$/;"	m
factorial	SCClassLibrary/Common/Math/Integer.sc	/^	factorial {$/;"	m
factors	SCClassLibrary/Common/Math/Integer.sc	/^	factors {$/;"	m
fade	SCClassLibrary/Common/Math/Signal.sc	/^	fade { arg beginSamp=0, endSamp, beginLevel=0.0, endLevel=1.0;$/;"	m
fadeTime	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	fadeTime { ^0.02 }$/;"	m
fadeTime	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	fadeTime {$/;"	m
fadeTime_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	fadeTime_ { | dur |$/;"	m
fadeTime_	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	fadeTime_ { arg dt;$/;"	m
failedPrimitiveName	SCClassLibrary/Common/Core/Thread.sc	/^	failedPrimitiveName { _PrimName }$/;"	m
falseAt	SCClassLibrary/Common/Core/Object.sc	/^	falseAt { arg key;$/;"	m
fastForward	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^	fastForward { arg by, tolerance=0, inevent;$/;"	m
ff	SCClassLibrary/Common/Streams/IOStream.sc	/^	ff { this.put(Char.ff); }$/;"	m
fformat	SCClassLibrary/Common/Collections/String.sc	/^	fformat { arg ... args;$/;"	m
fft	SCClassLibrary/Common/Math/Signal.sc	/^	fft { arg imag, cosTable;$/;"	m
fftCosTable	SCClassLibrary/Common/Math/Signal.sc	/^	fftCosTable {$/;"	m
fftScope	quarks/cruciallib/Gui/SynthConsole.sc	/^	fftScope {$/;"	m
fib	SCClassLibrary/Common/Math/Integer.sc	/^	fib { arg a=0.0, b=1.0;$/;"	m
fileDuration	quarks/cruciallib/Players/SFP/SFP.sc	/^	fileDuration { ^file.duration }$/;"	m
fileDuration	quarks/cruciallib/Players/SFP/SFP.sc	/^	fileDuration { ^file.fileDuration }$/;"	m
fileName	SCClassLibrary/Common/Files/PathName.sc	/^	fileName {$/;"	m
fileName	quarks/cruciallib/Players/SFP/SFP.sc	/^	fileName { ^file.fileName }$/;"	m
fileName	quarks/cruciallib/Players/SFP/SFP.sc	/^	fileName {$/;"	m
fileNameWithoutDoubleExtension	SCClassLibrary/Common/Files/PathName.sc	/^	fileNameWithoutDoubleExtension {$/;"	m
fileNameWithoutExtension	SCClassLibrary/Common/Files/PathName.sc	/^	fileNameWithoutExtension {$/;"	m
fileNotFound	quarks/cruciallib/Players/SFP/SFP.sc	/^	fileNotFound { arg sfilePath;$/;"	m
files	SCClassLibrary/Common/Files/PathName.sc	/^	files {$/;"	m
filesDo	SCClassLibrary/Common/Files/PathName.sc	/^	filesDo { arg func;$/;"	m
filesDoNoCVS	SCClassLibrary/Common/Files/PathName.sc	/^	filesDoNoCVS { arg func;$/;"	m
filesDoNoSVN	SCClassLibrary/Common/Files/PathName.sc	/^	filesDoNoSVN { arg func;$/;"	m
fill	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	fill { arg value;$/;"	m
fill	SCClassLibrary/Common/Collections/List.sc	/^	fill { arg item; array.fill(item) }$/;"	m
fill	SCClassLibrary/Common/Control/Buffer.sc	/^	fill { arg startAt,numFrames,value ... more;$/;"	m
fill	SCClassLibrary/Common/Control/Bus.sc	/^	fill { arg value,numChans;$/;"	m
fill	SCClassLibrary/Common/Control/Node.sc	/^	fill { arg controlName, numControls, value ... args;$/;"	m
fill	SCClassLibrary/Common/Math/Signal.sc	/^	fill { arg val; _SignalFill ^this.primitiveFailed }$/;"	m
fillCol	quarks/MathLib/classes/various/Matrix.sc	/^	fillCol { arg col, func; $/;"	m
fillColor	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  fillColor { ^this.getProperty(\\fillColor) }$/;"	m
fillColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	fillColor_ { arg acolor;$/;"	m
fillColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	fillColor_ { arg color;$/;"	m
fillColor_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  fillColor_ { arg aColor;$/;"	m
fillColor_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  fillColor_ { arg color; this.setProperty( \\fillColor, color ) }$/;"	m
fillMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	fillMsg { arg startAt,numFrames,value ... more;$/;"	m
fillMsg	SCClassLibrary/Common/Control/Bus.sc	/^	fillMsg { arg value;$/;"	m
fillMsg	SCClassLibrary/Common/Control/Node.sc	/^	fillMsg { arg controlName, numControls, value ... args;$/;"	m
fillRow	quarks/MathLib/classes/various/Matrix.sc	/^	fillRow { arg row, func; $/;"	m
filter	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	filter { | i, func |$/;"	m
filterEvent	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	filterEvent { arg event, val;$/;"	m
filterLines	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	filterLines {$/;"	m
filterOff	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	filterOff { this.filtering_(false) }$/;"	m
filterOn	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	filterOn { this.filtering_(true) }$/;"	m
filterUserDirEntries	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	filterUserDirEntries { ^filterUserDirEntries }$/;"	m
filteredWith	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	filteredWith {|filters, crop=0|$/;"	m
filtering_	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	filtering_ { |flag=true|$/;"	m
fin	SCClassLibrary/Common/Core/Object.sc	/^	fin { arg n = 1;$/;"	m
fin	SCClassLibrary/Common/Streams/Patterns.sc	/^	fin { arg n; ^Pfin(n, this) }$/;"	m
finDur	SCClassLibrary/Common/Streams/Patterns.sc	/^	finDur { arg dur, tolerance = 0.001; ^Pfindur(dur, this, tolerance) }$/;"	m
find	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	find { |sublist, offset=0|$/;"	m
find	SCClassLibrary/Common/Collections/String.sc	/^	find { arg string, ignoreCase = false, offset = 0;$/;"	m
find	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	find { arg key;$/;"	m
findAll	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	findAll { arg arr, offset=0;$/;"	m
findAll	SCClassLibrary/Common/Collections/String.sc	/^	findAll { arg string, ignoreCase = false, offset=0;$/;"	m
findAllRegexp	SCClassLibrary/Common/Collections/String.sc	/^	findAllRegexp { arg string, offset = 0;$/;"	m
findAvailable	SCClassLibrary/Common/Control/Engine.sc	/^	findAvailable { |n|$/;"	m
findBackwards	SCClassLibrary/Common/Collections/String.sc	/^	findBackwards { arg string, ignoreCase = false, offset = 0x7FFFFFFE;$/;"	m
findByID	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	findByID { arg id;$/;"	m
findByID	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	findByID { arg id;$/;"	m
findByID	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	findByID { arg id;$/;"	m
findByID	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	findByID { arg id;$/;"	m
findByName	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	findByName { |name|$/;"	m
findChild	SCClassLibrary/SCDoc/SCDoc.sc	/^    findChild {|id|$/;"	m
findDispatcher	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	findDispatcher {$/;"	m
findDoc	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	findDoc {$/;"	m
findHelpFile	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	findHelpFile {$/;"	m
findHelpFile	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	findHelpFile { | string |$/;"	m
findHelpFile	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	findHelpFile { |str|$/;"	m
findHelpFileOrElse	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	findHelpFileOrElse {$/;"	m
findHelpFileOrElse	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	findHelpFileOrElse { |str|$/;"	m
findInOpenDocuments	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	findInOpenDocuments { |index = 0|$/;"	m
findKey	SCClassLibrary/Common/GUI/ControlModel.sc	/^	findKey {$/;"	m
findKey	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	findKey {$/;"	m
findKeyForValue	SCClassLibrary/Common/Collections/Dictionary.sc	/^	findKeyForValue { arg argValue;$/;"	m
findKeyForValue	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	findKeyForValue { arg val;$/;"	m
findMatch	SCClassLibrary/Common/Collections/Set.sc	/^	findMatch { arg item;$/;"	m
findMethod	SCClassLibrary/Common/Core/Kernel.sc	/^	findMethod { arg methodName;$/;"	m
findMinimum	quarks/MathLib/classes/various/Minimization.sc	/^	findMinimum { arg a, b, method = \\golden, bracket = true; var coord;$/;"	m
findNext	SCClassLibrary/Common/Control/Engine.sc	/^	findNext { |address|$/;"	m
findNodeOfObj	SCClassLibrary/Common/Collections/LinkedList.sc	/^	findNodeOfObj { arg obj;$/;"	m
findOverriddenMethod	SCClassLibrary/Common/Core/Kernel.sc	/^	findOverriddenMethod { arg methodName;$/;"	m
findPath	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	findPath { arg name, version;$/;"	m
findPrevious	SCClassLibrary/Common/Control/Engine.sc	/^	findPrevious { |address|$/;"	m
findQuark	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	findQuark { arg name, version;$/;"	m
findQuark	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	findQuark { arg name, version;$/;"	m
findReferences	SCClassLibrary/Common/Core/Kernel.sc	/^	findReferences { arg aSymbol, references;$/;"	m
findRegexp	SCClassLibrary/Common/Collections/String.sc	/^	findRegexp { arg regexp, offset = 0;$/;"	m
findRespondingMethodFor	SCClassLibrary/Common/Core/Kernel.sc	/^	findRespondingMethodFor { arg methodName;$/;"	m
findRoots	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	findRoots { arg method = \\laguerre; var zroots = Array.new, coL, coH, m, p, z, magnitude, 	angle, incr, coefs, err, a2, d;$/;"	m
findSet	quarks/cruciallib/Control/CCBank.sc	/^	findSet { arg key;$/;"	m
findText	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	findText { arg string, reverse = false;$/;"	m
findText	SCClassLibrary/QtCollider/QWebView.sc	/^  findText { arg string, reverse = false;$/;"	m
findThreadPlayer	SCClassLibrary/Common/Core/Thread.sc	/^	findThreadPlayer {$/;"	m
findUniqueNameForArg	quarks/cruciallib/Instr/Instr.sc	/^	findUniqueNameForArg { arg argName,argNames;$/;"	m
findWidget	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	findWidget { |key|$/;"	m
findWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	findWindow {$/;"	m
findWindow	SCClassLibrary/QtCollider/QWindow.sc	/^  findWindow { ^window; }$/;"	m
findWindow	quarks/cruciallib/Gui/Updater.sc	/^	findWindow { arg layout;$/;"	m
finishBuild	SCClassLibrary/Common/Audio/SynthDef.sc	/^	finishBuild {$/;"	m
finishBuild	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	finishBuild {$/;"	m
finishEvent	SCClassLibrary/Common/Core/Object.sc	/^	finishEvent {}$/;"	m
first	SCClassLibrary/Common/Collections/LinkedList.sc	/^	first { if (head.notNil, { ^head.obj },{ ^nil }) }$/;"	m
first	SCClassLibrary/Common/Collections/List.sc	/^	first { if (this.size > 0, { ^array.at(0) }, { ^nil }) }$/;"	m
first	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	first { if (this.size > 0, { ^this.at(0) }, { ^nil }) }$/;"	m
first	SCClassLibrary/Common/Core/Object.sc	/^	first { arg inval; this.reset; ^this.next(inval) }$/;"	m
firstArg	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	firstArg { arg aNumber, adverb; ^this.performBinaryOp('firstArg', aNumber, adverb) }$/;"	m
firstArg	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	firstArg { arg function, adverb; ^this.composeBinaryOp('firstArg', function, adverb) }$/;"	m
firstArg	SCClassLibrary/Common/Math/Signal.sc	/^	firstArg { arg aNumber; _FirstArg; ^aNumber.performBinaryOpOnSignal('firstArg', this) }$/;"	m
firstArg	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	firstArg { arg aNumber, adverb; _FirstArg; ^aNumber.performBinaryOpOnSimpleNumber('firstArg', this, adverb) }$/;"	m
firstBeatIsAt	quarks/cruciallib/Players/SFP/SFP.sc	/^	firstBeatIsAt { ^file.firstBeatIsAt; }$/;"	m
firstBeatIsAt_	quarks/cruciallib/Players/SFP/SFP.sc	/^	firstBeatIsAt_ { arg f; file.firstBeatIsAt_(f); }$/;"	m
firstGap	SCClassLibrary/Common/Collections/SparseArray.sc	/^	firstGap { arg from = 0, to;$/;"	m
firstPrivateBus	SCClassLibrary/Common/Control/Server.sc	/^	firstPrivateBus { \/\/ after the outs and ins$/;"	m
fitKey	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	fitKey { arg index, prevIndex, order=1;$/;"	m
fix	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	fix { this.permanent_(true) }$/;"	m
fixCollisionsFrom	SCClassLibrary/Common/Collections/Dictionary.sc	/^	fixCollisionsFrom { arg index;$/;"	m
fixCollisionsFrom	SCClassLibrary/Common/Collections/Set.sc	/^	fixCollisionsFrom { arg index;$/;"	m
fixedHeight_	SCClassLibrary/QtCollider/QView.sc	/^  fixedHeight_ { arg height;$/;"	m
fixedSelection_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	fixedSelection_ { arg bool;$/;"	m
fixedSize_	SCClassLibrary/QtCollider/QView.sc	/^  fixedSize_ { arg size;$/;"	m
fixedWidth_	SCClassLibrary/QtCollider/QView.sc	/^  fixedWidth_ { arg width;$/;"	m
flat	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flat {$/;"	m
flat	quarks/MathLib/classes/various/Matrix.sc	/^	flat { var array; array = Array.new; \/\/ return an array with all elements in one slot$/;"	m
flatIf	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flatIf { |func|$/;"	m
flatSize	SCClassLibrary/Common/Collections/Collection.sc	/^	flatSize {$/;"	m
flatSize	SCClassLibrary/Common/Core/Object.sc	/^	flatSize { ^1	}$/;"	m
flatten	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flatten { arg numLevels=1;$/;"	m
flatten	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	flatten {$/;"	m
flatten	SCClassLibrary/Common/Streams/Patterns.sc	/^	flatten { arg n = 1; ^Pflatten(n, this) }$/;"	m
flatten	quarks/MathLib/classes/various/Matrix.sc	/^	flatten { ^this.flat; } $/;"	m
floor	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	floor { ^this.performUnaryOp('floor') }$/;"	m
floor	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	floor { ^this.composeUnaryOp('floor') }$/;"	m
floor	SCClassLibrary/Common/Core/Symbol.sc	/^	floor { ^this }$/;"	m
floor	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	floor { _Floor; ^this.primitiveFailed }$/;"	m
flop	SCClassLibrary/Common/Collections/Array.sc	/^	flop {$/;"	m
flop	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flop {$/;"	m
flop	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	flop {$/;"	m
flop	SCClassLibrary/Common/Core/Function.sc	/^	flop {$/;"	m
flop	quarks/MathLib/classes/various/Matrix.sc	/^	flop { \/\/ return transpose matrix with rows cols and cols rows$/;"	m
flopDeep	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flopDeep { arg rank;$/;"	m
flopDict	SCClassLibrary/Common/Collections/Collection.sc	/^	flopDict { | unbubble=true |$/;"	m
flopTogether	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flopTogether { arg ... moreArrays;$/;"	m
flopWith	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	flopWith { |func|$/;"	m
flow	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	flow { arg func,bounds;$/;"	m
flow	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	flow { arg func,bounds;$/;"	m
flow	SCClassLibrary/Common/GUI/viewExtensions.sc	/^	flow { arg func,bounds;$/;"	m
flow	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	flow { arg func,bounds;$/;"	m
flowMakeView	quarks/cruciallib/Gui/ActionButton.sc	/^	flowMakeView { arg layout,x,y;$/;"	m
flush	SCClassLibrary/Common/Quarks/Quark.sc	/^	flush {$/;"	m
flush	SCClassLibrary/Common/Streams/IOStream.sc	/^	flush {}$/;"	m
flush	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	flush {$/;"	m
focus	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	focus { arg flag=true; view.focus(flag) }$/;"	m
focus	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	focus { arg index=0;$/;"	m
focus	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	focus { arg flag=true;$/;"	m
focus	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	focus { arg flag=true;$/;"	m
focus	SCClassLibrary/QtCollider/QView.sc	/^  focus { arg flag=true;$/;"	m
focus	quarks/cruciallib/Gui/CXMenu.sc	/^	focus { this.focusOn(0) }$/;"	m
focus	quarks/cruciallib/Instr/InstrBrowser.sc	/^    focus { arg instrname;$/;"	m
focusColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	focusColor {$/;"	m
focusColor	SCClassLibrary/QtCollider/QView.sc	/^  focusColor {$/;"	m
focusColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	focusColor_ { |color|$/;"	m
focusColor_	SCClassLibrary/QtCollider/QView.sc	/^  focusColor_ { arg color;$/;"	m
focusGainedAction_	SCClassLibrary/QtCollider/QView.sc	/^  focusGainedAction_ { arg handler;$/;"	m
focusInEvent	SCClassLibrary/QtCollider/QView.sc	/^  focusInEvent { focusGainedAction.value(this) }$/;"	m
focusLostAction_	SCClassLibrary/QtCollider/QView.sc	/^  focusLostAction_ { arg handler;$/;"	m
focusOn	quarks/cruciallib/Gui/CXMenu.sc	/^	focusOn { arg f=0;$/;"	m
focusOutEvent	SCClassLibrary/QtCollider/QView.sc	/^  focusOutEvent { focusLostAction.value(this) }$/;"	m
fold	SCClassLibrary/Common/Audio/UGen.sc	/^ 	fold { arg lo = 0.0, hi = 0.0;$/;"	m
fold	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	fold { arg ... args; ^this.multiChannelPerform('fold', *args) }$/;"	m
fold	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	fold { arg lo, hi; ^this.composeNAryOp('fold', [lo,hi])  }$/;"	m
fold	SCClassLibrary/Common/Math/Float.sc	/^	fold { arg lo, hi; _FoldFloat; ^this.primitiveFailed }$/;"	m
fold	SCClassLibrary/Common/Math/Integer.sc	/^	fold { arg lo, hi; _FoldInt; ^this.primitiveFailed }$/;"	m
fold	SCClassLibrary/Common/Math/Signal.sc	/^	fold { arg lo, hi; _FoldSignal; ^this.primitiveFailed }$/;"	m
fold2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	fold2 { arg aNumber, adverb; ^this.performBinaryOp('fold2', aNumber, adverb) }$/;"	m
fold2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	fold2 { arg function=1, adverb; ^this.composeBinaryOp('fold2', function, adverb) }$/;"	m
fold2	SCClassLibrary/Common/Math/Signal.sc	/^	fold2 { arg aNumber; _Fold2; ^aNumber.performBinaryOpOnSignal('fold2', this) }$/;"	m
fold2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	fold2 { arg aNumber, adverb; _Fold2; ^aNumber.performBinaryOpOnSimpleNumber('fold2', this, adverb) }$/;"	m
foldAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	foldAt { arg index;$/;"	m
foldAt	SCClassLibrary/Common/Collections/List.sc	/^	foldAt { arg i; i = i.asInteger.fold(0, this.size - 1); ^array.at(i) }$/;"	m
foldExtend	SCClassLibrary/Common/Collections/Array.sc	/^	foldExtend { arg length;$/;"	m
foldExtend	SCClassLibrary/Common/Collections/List.sc	/^	foldExtend { arg length;$/;"	m
foldPut	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	foldPut { arg index, item;$/;"	m
foldPut	SCClassLibrary/Common/Collections/List.sc	/^	foldPut { arg i, item; i = i.asInteger.fold(0, this.size - 1); ^array.put(i, item) }$/;"	m
folderName	SCClassLibrary/Common/Files/PathName.sc	/^	folderName {$/;"	m
folders	SCClassLibrary/Common/Files/PathName.sc	/^	folders {$/;"	m
foldersWithoutCVS	SCClassLibrary/Common/Files/PathName.sc	/^	foldersWithoutCVS { arg path;$/;"	m
foldersWithoutSVN	SCClassLibrary/Common/Files/PathName.sc	/^	foldersWithoutSVN { arg path;$/;"	m
font	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	font { ^GUI.font.new(*GUI.skins[\\jitSmall].fontSpecs) }$/;"	m
fontColor_	SCClassLibrary/Common/GUI/Grid.sc	/^	fontColor_ { arg c;$/;"	m
fontColor_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	fontColor_ { |c|$/;"	m
font_	SCClassLibrary/Common/GUI/Document.sc	/^	font_ { | font, rangestart = -1, rangesize=0 |$/;"	m
font_	SCClassLibrary/Common/GUI/Grid.sc	/^	font_ { arg f;$/;"	m
font_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	font_ { |f|$/;"	m
font_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	font_ { arg f;$/;"	m
font_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	font_ { arg argFont;$/;"	m
font_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	font_ {arg afont;$/;"	m
font_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	font_ { arg argFont;$/;"	m
font_	SCClassLibrary/QtCollider/QTextView.sc	/^  font_ { arg aFont;$/;"	m
font_	SCClassLibrary/QtCollider/QView.sc	/^  font_ { arg f;$/;"	m
font_	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	font_ { arg f;$/;"	m
for	SCClassLibrary/Common/Math/Integer.sc	/^	for { arg endval, function;$/;"	m
for	SCClassLibrary/Common/Math/Number.sc	/^	for { arg endValue, function;$/;"	m
forBy	SCClassLibrary/Common/Math/Integer.sc	/^	forBy { arg endval, stepval, function;$/;"	m
forBy	SCClassLibrary/Common/Math/Number.sc	/^	forBy { arg endValue, stepValue, function;$/;"	m
forSeries	SCClassLibrary/Common/Math/Number.sc	/^	forSeries { arg second, last, function;$/;"	m
forgetTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	forgetTree {$/;"	m
fork	SCClassLibrary/Common/Audio/Env.sc	/^		fork {$/;"	m
fork	SCClassLibrary/Common/Collections/Array.sc	/^	fork { arg join (this.size), clock, quant=0.0, stackSize=64;$/;"	m
fork	SCClassLibrary/Common/Control/Volume.sc	/^		fork {$/;"	m
fork	SCClassLibrary/Common/Core/Function.sc	/^	fork { arg clock, quant, stackSize;$/;"	m
fork	SCClassLibrary/Common/Files/SoundFile.sc	/^		fork {$/;"	m
fork	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^			fork {$/;"	m
fork	SCClassLibrary/Common/Streams/History.sc	/^				fork {$/;"	m
fork	SCClassLibrary/Common/Streams/Patterns.sc	/^		fork {$/;"	m
fork	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^					fork { 0.05.wait; this.pause }$/;"	m
fork	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	fork { arg argClock, quant, protoEvent; \/\/ usual fork arg order: clock, quant, ...$/;"	m
fork	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	fork { arg clock, quant, event;$/;"	m
fork	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^		fork {$/;"	m
forkIfNeeded	SCClassLibrary/Common/Control/Buffer.sc	/^		forkIfNeeded {$/;"	m
forkIfNeeded	SCClassLibrary/Common/Control/NetAddr.sc	/^			forkIfNeeded {$/;"	m
forkIfNeeded	SCClassLibrary/Common/Core/Function.sc	/^	forkIfNeeded { arg clock, quant, stackSize;$/;"	m
forkIfNeeded	SCClassLibrary/Common/Files/SoundFile.sc	/^			forkIfNeeded {$/;"	m
formant	SCClassLibrary/Common/Collections/Harmonics.sc	/^	formant { arg center=12, width = 3;$/;"	m
format	SCClassLibrary/Common/Collections/String.sc	/^	format { arg ... items; ^this.prFormat( items.collect(_.asString) ) }$/;"	m
format	SCClassLibrary/Common/Math/Date.sc	/^	format {$/;"	m
formatLabel	SCClassLibrary/Common/GUI/Grid.sc	/^	formatLabel { arg val, numDecimalPlaces;$/;"	m
formats	quarks/cruciallib/Gui/SynthConsole.sc	/^	formats {$/;"	m
forward	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	forward { this.setProperty(\\forward);}$/;"	m
forward	SCClassLibrary/QtCollider/QWebView.sc	/^  forward { this.invokeMethod( 'forward' ); }$/;"	m
frac	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	frac { ^this.performUnaryOp('frac') }$/;"	m
frac	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	frac { ^this.composeUnaryOp('frac') }$/;"	m
frac	SCClassLibrary/Common/Core/Symbol.sc	/^	frac { ^this }$/;"	m
frac	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	frac { _Frac; ^this.primitiveFailed }$/;"	m
frame	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	frame {$/;"	m
frame	SCClassLibrary/QtCollider/QUserView.sc	/^  frame { ^this.getProperty( \\frameCount ); }$/;"	m
frameRate	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	frameRate {$/;"	m
frameRate	SCClassLibrary/QtCollider/QUserView.sc	/^  frameRate { ^this.getProperty( \\frameRate ); }$/;"	m
frameRate_	SCClassLibrary/QtCollider/QUserView.sc	/^  frameRate_ { arg fps; this.setProperty( \\frameRate, fps.asFloat ); }$/;"	m
frames2beats	quarks/cruciallib/Players/SFP/SFP.sc	/^	frames2beats { arg frames;  ^(frames - this.firstBeatIsAt \/ this.sampleRate * this.tempo) }$/;"	m
frames2secs	quarks/cruciallib/Players/SFP/SFP.sc	/^	frames2secs { arg frames; ^ frames \/ this.sampleRate }$/;"	m
free	SCClassLibrary/Common/Control/Buffer.sc	/^	free { arg completionMessage;$/;"	m
free	SCClassLibrary/Common/Control/Bus.sc	/^	free {$/;"	m
free	SCClassLibrary/Common/Control/Engine.sc	/^	free { arg address;$/;"	m
free	SCClassLibrary/Common/Control/Engine.sc	/^	free { arg id;$/;"	m
free	SCClassLibrary/Common/Control/Engine.sc	/^	free { arg inIndex;$/;"	m
free	SCClassLibrary/Common/Control/Engine.sc	/^	free { |address|$/;"	m
free	SCClassLibrary/Common/Control/Node.sc	/^	free { "free has no effect on RootNode".warn; }$/;"	m
free	SCClassLibrary/Common/Control/Node.sc	/^	free { arg sendFlag=true;$/;"	m
free	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	free { allFuncProxies.remove(this); this.disable }$/;"	m
free	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	free { all[key] = nil; super.free; }$/;"	m
free	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	free { this.unregister; all.remove(this) } \/\/ I'm done$/;"	m
free	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	free { wrappedFuncs.keys.do({|funcProxy| funcProxy.removeDependant(this) }); super.free }$/;"	m
free	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	free {$/;"	m
free	SCClassLibrary/Common/Control/Volume.sc	/^	free {$/;"	m
free	SCClassLibrary/Common/Core/Object.sc	/^	free { ^this }$/;"	m
free	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	free {$/;"	m
free	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	free {$/;"	m
free	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	free { this.use { ~freeServerNode.value }  }$/;"	m
free	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	free { | fadeTime, freeGroup = true |$/;"	m
free	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	free { arg fadeTime;$/;"	m
free	SCClassLibrary/QtCollider/QStethoscope.sc	/^  free {$/;"	m
free	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  free {$/;"	m
free	quarks/cruciallib/Control/CCBank.sc	/^	free {$/;"	m
free	quarks/cruciallib/Gui/SynthConsole.sc	/^	free {$/;"	m
free	quarks/cruciallib/Players/AbstractPlayer.sc	/^	free { arg atTime;$/;"	m
free	quarks/cruciallib/Players/Patching.sc	/^	free {$/;"	m
free	quarks/cruciallib/Players/PlayerRecorder.sc	/^	free {$/;"	m
free	quarks/cruciallib/Sample/Sample.sc	/^	free {$/;"	m
free	quarks/cruciallib/Scheduling/TempoBus.sc	/^	free {$/;"	m
free	quarks/cruciallib/ServerTools/SharedBus.sc	/^	free {$/;"	m
freeAll	SCClassLibrary/Common/Control/Node.sc	/^	freeAll {$/;"	m
freeAll	SCClassLibrary/Common/Control/Server.sc	/^	freeAll {$/;"	m
freeAllMsg	SCClassLibrary/Common/Control/Node.sc	/^	freeAllMsg {$/;"	m
freeBuffers	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	freeBuffers {$/;"	m
freeBus	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	freeBus {$/;"	m
freeHeavyResources	quarks/cruciallib/Sample/Sample.sc	/^	freeHeavyResources {$/;"	m
freeMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	freeMsg { arg completionMessage;$/;"	m
freeMsg	SCClassLibrary/Common/Control/Node.sc	/^	freeMsg { ^[11, nodeID] }$/;"	m
freeOnStop	quarks/cruciallib/Players/AbstractPlayer.sc	/^	freeOnStop {$/;"	m
freePatchOutToBundle	quarks/cruciallib/Editors/NumberEditor.sc	/^	freePatchOutToBundle { arg bundle;$/;"	m
freePatchOutToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	freePatchOutToBundle { arg bundle;$/;"	m
freePatchOutToBundle	quarks/cruciallib/Sample/Sample.sc	/^	freePatchOutToBundle { arg bundle;$/;"	m
freePerm	SCClassLibrary/Common/Control/Engine.sc	/^	freePerm { |id|$/;"	m
freePermNodeID	SCClassLibrary/Common/Control/Server.sc	/^	freePermNodeID { |id|$/;"	m
freeResourcesToBundle	quarks/cruciallib/Instr/InstrSpawner.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	freeResourcesToBundle {}$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/HasSubject.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/PlayerMixer.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/SFP/SFP.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeResourcesToBundle	quarks/cruciallib/Players/TempoPlayer.sc	/^	freeResourcesToBundle { arg bundle;$/;"	m
freeSynthToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	freeSynthToBundle { arg bundle;$/;"	m
freeToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	freeToBundle { | bundle |$/;"	m
freeToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	freeToBundle {}$/;"	m
freeToBundle	quarks/cruciallib/Control/MIDIPlayer.sc	/^	freeToBundle { arg bundle;$/;"	m
freeToBundle	quarks/cruciallib/Instr/Interface.sc	/^	freeToBundle { arg b;$/;"	m
freeToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	freeToBundle { arg bundle;$/;"	m
freeToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	freeToBundle { |bundle|$/;"	m
freeToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	freeToBundle { arg bundle;$/;"	m
freeToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	freeToBundle {}$/;"	m
freeToBundle	quarks/cruciallib/Sample/Sample.sc	/^	freeToBundle { arg bundle;$/;"	m
freeze	SCClassLibrary/Common/Core/Object.sc	/^	freeze {$/;"	m
freqMode_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	freqMode_ { arg mode;$/;"	m
freqscope	SCClassLibrary/Common/GUI/PlusGUI/Control/server-scope.sc	/^	freqscope {$/;"	m
fromCol	quarks/MathLib/classes/various/Matrix.sc	/^	fromCol { arg col;$/;"	m
fromFile	SCClassLibrary/Common/Control/GeneralHIDSpec.sc	/^	fromFile { |name|$/;"	m
fromPage	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  fromPage { ^this.getProperty(\\fromPage) }$/;"	m
fromRow	quarks/MathLib/classes/various/Matrix.sc	/^	fromRow { arg row;$/;"	m
front	SCClassLibrary/Common/GUI/Document.sc	/^	front {$/;"	m
front	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	front {$/;"	m
front	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	front {$/;"	m
front	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	front {$/;"	m
front	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	front {$/;"	m
front	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	front {$/;"	m
front	SCClassLibrary/QtCollider/QView.sc	/^  front {$/;"	m
front	SCClassLibrary/QtCollider/QWindow.sc	/^  front { view.front; }$/;"	m
frozen	SCClassLibrary/Common/Core/Object.sc	/^	frozen { _ObjectIsPermanent; ^this.primitiveFailed }$/;"	m
fullCheck	SCClassLibrary/Common/Collections/Set.sc	/^	fullCheck {$/;"	m
fullDescription	SCClassLibrary/Common/Quarks/Quark.sc	/^	fullDescription {$/;"	m
fullScreen	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	fullScreen {$/;"	m
fullScreen	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	fullScreen {$/;"	m
fullScreen	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	fullScreen {$/;"	m
fullScreen	SCClassLibrary/QtCollider/QView.sc	/^  fullScreen {$/;"	m
fullScreen	SCClassLibrary/QtCollider/QWindow.sc	/^  fullScreen { view.fullScreen; }$/;"	m
fullUpdate	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	fullUpdate {$/;"	m
funcDef	quarks/cruciallib/Instr/Instr.sc	/^	funcDef { ^func.def }$/;"	m
funcDef	quarks/cruciallib/Instr/Instr.sc	/^	funcDef { ^nil }$/;"	m
funcDef	quarks/cruciallib/Instr/Instr.sc	/^	funcDef {$/;"	m
functionCompileContext	SCClassLibrary/Common/Core/Kernel.sc	/^	functionCompileContext {$/;"	m
functionPerformList	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	functionPerformList { arg selector, arglist;$/;"	m
functionPerformList	SCClassLibrary/Common/Core/Function.sc	/^	functionPerformList { arg selector, arglist;$/;"	m
functionPerformList	SCClassLibrary/Common/Core/Object.sc	/^	functionPerformList {$/;"	m
functionPerformList	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	functionPerformList { arg selector, arglist;$/;"	m
fuseDidBlow	quarks/cruciallib/Players/PlayerSocket.sc	/^	fuseDidBlow { |value|$/;"	m
fuzzyEqual	SCClassLibrary/Common/Core/Object.sc	/^	fuzzyEqual { arg that, precision=1.0; ^max(0.0, 1.0 - (abs(this - that)\/precision)) }$/;"	m
gap	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	gap { this.subclassResponsibility(\\gap); }$/;"	m
gap_	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	gap_ { arg gap; this.subclassResponsibility(\\gap_); }$/;"	m
gap_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	gap_ { arg inx;$/;"	m
gap_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  gap_ { arg anInt;$/;"	m
gauss	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	gauss { arg standardDeviation;$/;"	m
gauss	quarks/MathLib/classes/various/LinearSystem.sc	/^	gauss { arg b; var a = this.deepCopy, n = this.cols, x = b.copy, row, i, j, pivotRow, max, dum;$/;"	m
gaussCurve	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	gaussCurve { arg a = 1.0, b = 0.0, c = 1.0;$/;"	m
gcDumpGrey	SCClassLibrary/Common/Core/Object.sc	/^	gcDumpGrey { _GCDumpGrey }$/;"	m
gcDumpSet	SCClassLibrary/Common/Core/Object.sc	/^	gcDumpSet { arg set; _GCDumpSet }$/;"	m
gcInfo	SCClassLibrary/Common/Core/Object.sc	/^	gcInfo { _GCInfo }$/;"	m
gcList	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	gcList { arg excluding;$/;"	m
gcSanity	SCClassLibrary/Common/Core/Object.sc	/^	gcSanity { _GCSanity }$/;"	m
gcd	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	gcd { arg aNumber, adverb; ^this.performBinaryOp('gcd', aNumber, adverb) }$/;"	m
gcd	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	gcd { arg function, adverb; ^this.composeBinaryOp('gcd', function, adverb) }$/;"	m
gcd	SCClassLibrary/Common/Core/Symbol.sc	/^	gcd { ^this }$/;"	m
gcd	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	gcd { arg aNumber, adverb; _GCD; ^aNumber.performBinaryOpOnSimpleNumber('gcd', this, adverb) }$/;"	m
gen	SCClassLibrary/Common/Control/Buffer.sc	/^	gen { arg genCommand, genArgs, normalize=true,asWavetable=true,clearFirst=true;$/;"	m
genCurrent	SCClassLibrary/Common/Core/Object.sc	/^	genCurrent { ^this }$/;"	m
genMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	genMsg { arg genCommand, genArgs, normalize=true,asWavetable=true,clearFirst=true;$/;"	m
genNext	SCClassLibrary/Common/Core/Object.sc	/^	genNext { ^nil }$/;"	m
generate	SCClassLibrary/Common/Core/Object.sc	/^	generate { arg function, state; this.do(function); ^state }$/;"	m
generate	SCClassLibrary/Common/Math/Integer.sc	/^	generate { arg function; function.value(this) }$/;"	m
generate	SCClassLibrary/Common/Streams/Stream.sc	/^	generate { arg function, item;$/;"	m
generateUniqueName	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	generateUniqueName {$/;"	m
geoMean	quarks/MathLib/classes/statistics/extStatistics.sc	/^	geoMean { $/;"	m
geom	SCClassLibrary/Common/Collections/Harmonics.sc	/^	geom { arg k = 1.2;$/;"	m
geom	SCClassLibrary/Common/Math/Integer.sc	/^	geom { arg start, grow;$/;"	m
get	SCClassLibrary/Common/Control/Buffer.sc	/^	get { arg index, action;$/;"	m
get	SCClassLibrary/Common/Control/Bus.sc	/^	get { arg action;$/;"	m
get	SCClassLibrary/Common/Control/Node.sc	/^	get { arg index, action;$/;"	m
get	SCClassLibrary/Common/Core/Function.sc	/^	get { arg prevVal; ^prevVal }$/;"	m
get	SCClassLibrary/Common/Core/Nil.sc	/^	get { arg prevVal; ^prevVal }$/;"	m
get	SCClassLibrary/Common/Core/Ref.sc	/^	get { ^value }$/;"	m
get	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	get { |param|$/;"	m
get	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	get { arg key;$/;"	m
get	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	get { arg key;$/;"	m
get	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	get { arg key;$/;"	m
get	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	get { arg prevObj; $/;"	m
get	quarks/MathLib/classes/various/Matrix.sc	/^	get { arg row, col; \/\/ same as at$/;"	m
getAbsInfo	SCClassLibrary/Platform/linux/LID.sc	/^	getAbsInfo { | evtCode |$/;"	m
getAlpha	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	getAlpha {$/;"	m
getAnnotation	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	getAnnotation { arg server, nodeID;$/;"	m
getBackTrace	SCClassLibrary/Common/Core/Object.sc	/^	getBackTrace { _GetBackTrace }$/;"	m
getBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	getBundle {$/;"	m
getChar	SCClassLibrary/Common/Streams/IOStream.sc	/^	getChar { ^this.next; }$/;"	m
getChar	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getChar { _FileGetChar; ^this.primitiveFailed; }$/;"	m
getClass	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	getClass { |method| ^this.class.getClass(method) }$/;"	m
getCol	quarks/MathLib/classes/various/Matrix.sc	/^	getCol { arg col;$/;"	m
getColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	getColor {|x, y|$/;"	m
getContainedObjects	SCClassLibrary/Common/Core/Object.sc	/^	getContainedObjects { arg objects;$/;"	m
getControlBusValue	SCClassLibrary/Common/Control/Server.sc	/^	getControlBusValue {$/;"	m
getControlBusValue	SCClassLibrary/Common/Control/Server.sc	/^	getControlBusValue {|busIndex|$/;"	m
getControlBusValues	SCClassLibrary/Common/Control/Server.sc	/^	getControlBusValues {$/;"	m
getControlBusValues	SCClassLibrary/Common/Control/Server.sc	/^	getControlBusValues {|busIndex, busChannels|$/;"	m
getCurrentKeysValues	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	getCurrentKeysValues {$/;"	m
getCurrentSelection	SCClassLibrary/Common/Core/Kernel.sc	/^	getCurrentSelection {$/;"	m
getDataPoint	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	getDataPoint { |x, y|$/;"	m
getDataPoint	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	getDataPoint { |x|$/;"	m
getDefaultVal	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	getDefaultVal { |key|$/;"	m
getDependencies	SCClassLibrary/Common/Quarks/Quark.sc	/^	getDependencies { | obj |$/;"	m
getDiagonal	quarks/MathLib/classes/various/Matrix.sc	/^	getDiagonal {$/;"	m
getDouble	SCClassLibrary/Common/Streams/IOStream.sc	/^	getDouble { ^Float.from64Bits(this.getInt32, this.getInt32); }$/;"	m
getDouble	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getDouble { _FileGetDouble; ^this.primitiveFailed; }$/;"	m
getDoubleLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getDoubleLE { _FileGetDoubleLE; ^this.primitiveFailed; }$/;"	m
getFamily	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	getFamily { | set, alreadyAsked |$/;"	m
getFloat	SCClassLibrary/Common/Streams/IOStream.sc	/^	getFloat { ^Float.from32Bits(this.getInt32); }$/;"	m
getFloat	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getFloat { _FileGetFloat; ^this.primitiveFailed; }$/;"	m
getFloatLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getFloatLE { _FileGetFloatLE; ^this.primitiveFailed; }$/;"	m
getID	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	getID { arg obj;$/;"	m
getIdentifierCoordFromEnd	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	getIdentifierCoordFromEnd { |endPos|$/;"	m
getIndex	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	getIndex { |x|$/;"	m
getInt16	SCClassLibrary/Common/Streams/IOStream.sc	/^	getInt16 { ^this.getInt8 << 8 | this.getInt8; }$/;"	m
getInt16	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getInt16 { _FileGetInt16; ^this.primitiveFailed; }$/;"	m
getInt16LE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getInt16LE { _FileGetInt16LE; ^this.primitiveFailed; }$/;"	m
getInt32	SCClassLibrary/Common/Streams/IOStream.sc	/^	getInt32 { ^this.getInt16 << 16 | this.getInt16; }$/;"	m
getInt32	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getInt32 { _FileGetInt32; ^this.primitiveFailed; }$/;"	m
getInt32LE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getInt32LE { _FileGetInt32LE; ^this.primitiveFailed; }$/;"	m
getInt8	SCClassLibrary/Common/Streams/IOStream.sc	/^	getInt8 { ^this.next & 255; }$/;"	m
getInt8	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getInt8 { _FileGetInt8; ^this.primitiveFailed; }$/;"	m
getKey	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	getKey { arg prevKey;$/;"	m
getKeyState	SCClassLibrary/Platform/linux/LID.sc	/^	getKeyState { | evtCode |$/;"	m
getKeys	SCClassLibrary/Common/GUI/osx/PlusGUI/Math/IntegerPlusGUI.sc	/^	getKeys { _GetKeys }$/;"	m
getKeysForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	getKeysForFuncProxy { |funcProxy| this.subclassResponsibility(thisMethod) }$/;"	m
getKeysForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	getKeysForFuncProxy {|funcProxy| ^(funcProxy.chan ? (0..15)).asArray;} \/\/ chan$/;"	m
getKeysForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	getKeysForFuncProxy {|funcProxy| ^(funcProxy.msgNum ? (0..127)).asArray;} \/\/ noteNum, etc.$/;"	m
getKeysForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	getKeysForFuncProxy {|funcProxy| ^(funcProxy.srcID ? \\all)} \/\/ chan$/;"	m
getKeysForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	getKeysForFuncProxy {|funcProxy| ^[funcProxy.path];}$/;"	m
getKeysValues	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	getKeysValues { | keys, except, withDefaults = true, noInternalKeys = true |$/;"	m
getLEDState	SCClassLibrary/Common/Control/WII.sc	/^	getLEDState { |id|$/;"	m
getLEDState	SCClassLibrary/Platform/linux/LID.sc	/^	getLEDState { | evtCode |$/;"	m
getLine	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getLine { arg maxSize=1024;$/;"	m
getMouseCoords	SCClassLibrary/Platform/Platform.sc	/^	getMouseCoords { ^Platform.getMouseCoords }$/;"	m
getMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	getMsg { arg index;$/;"	m
getMsg	SCClassLibrary/Common/Control/Bus.sc	/^	getMsg {$/;"	m
getMsg	SCClassLibrary/Common/Control/Node.sc	/^	getMsg { arg index;$/;"	m
getN	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	getN {$/;"	m
getNAlpha	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	getNAlpha {$/;"	m
getName	SCClassLibrary/Common/Quarks/Quark.sc	/^	getName { | obj |$/;"	m
getName	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	getName {	^try { object.key } ? "_anon_" }$/;"	m
getPairs	SCClassLibrary/Common/Collections/Dictionary.sc	/^	getPairs { arg args;$/;"	m
getParams	SCClassLibrary/Common/GUI/Grid.sc	/^	getParams { |valueMin,valueMax,pixelMin,pixelMax,numTicks|$/;"	m
getParams	SCClassLibrary/Common/GUI/Grid.sc	/^	getParams {$/;"	m
getParents	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	getParents {$/;"	m
getParents	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	getParents {$/;"	m
getParents	SCClassLibrary/QtCollider/QView.sc	/^  getParents {$/;"	m
getPascalString	SCClassLibrary/Common/Streams/IOStream.sc	/^	getPascalString {$/;"	m
getPascalString	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	getPascalString {$/;"	m
getPathThen	quarks/cruciallib/Gui/SynthConsole.sc	/^	getPathThen {  arg then ... args; }$/;"	m
getPathThen	quarks/cruciallib/Gui/SynthConsole.sc	/^	getPathThen {  arg then ... args;$/;"	m
getPattern	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	getPattern { arg key;$/;"	m
getPixel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	getPixel {|x,y|$/;"	m
getProperty	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	getProperty { arg key, value;$/;"	m
getProperty	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	getProperty { arg key, value;$/;"	m
getProperty	SCClassLibrary/QtCollider/QObject.sc	/^  getProperty { arg property;$/;"	m
getPropertyList	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	getPropertyList {$/;"	m
getPropertyList	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	getPropertyList {$/;"	m
getRelativePositionX	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	getRelativePositionX { |x|$/;"	m
getRelativePositionY	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	getRelativePositionY { |y|$/;"	m
getRow	quarks/MathLib/classes/various/Matrix.sc	/^	getRow { arg row;$/;"	m
getScale	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	getScale { |modifiers|$/;"	m
getScale	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	getScale { |modifiers|$/;"	m
getScale	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	getScale { |modifiers|$/;"	m
getScale	SCClassLibrary/QtCollider/BasicViews.sc	/^  getScale { |modifiers|$/;"	m
getScale	SCClassLibrary/QtCollider/QKnob.sc	/^  getScale { |modifiers|$/;"	m
getSelectedLines	SCClassLibrary/Common/GUI/Document.sc	/^	getSelectedLines { | rangestart = -1, rangesize = 0 |$/;"	m
getSharedControl	SCClassLibrary/Common/Control/Server.sc	/^	getSharedControl { arg num;$/;"	m
getSlots	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	getSlots {$/;"	m
getSlots	SCClassLibrary/Common/Core/Object.sc	/^	getSlots {$/;"	m
getSpec	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	getSpec { |key, value|$/;"	m
getState	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	getState {$/;"	m
getState	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	getState {$/;"	m
getString	SCClassLibrary/Common/Quarks/Quark.sc	/^	getString { | obj |$/;"	m
getStructure	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	getStructure { | alreadyAsked |$/;"	m
getStructure	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	getStructure { arg keys, excluding;$/;"	m
getSynchronous	SCClassLibrary/Common/Control/Bus.sc	/^	getSynchronous {$/;"	m
getTempoBus	quarks/cruciallib/Sample/Sample.sc	/^	getTempoBus {$/;"	m
getToFloatArray	SCClassLibrary/Common/Control/Buffer.sc	/^	getToFloatArray { arg index = 0, count, wait = 0.01, timeout = 3, action;$/;"	m
getUsedKeys	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	getUsedKeys {$/;"	m
getValue	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	getValue { \/\/ unmapped, single channel only$/;"	m
getVersion	SCClassLibrary/Common/Quarks/Quark.sc	/^	getVersion { | obj |$/;"	m
getenv	SCClassLibrary/Common/Collections/String.sc	/^	getenv {$/;"	m
gethostbyname	SCClassLibrary/Common/Collections/String.sc	/^	gethostbyname { _GetHostByName ^this.primitiveFailed }$/;"	m
getn	SCClassLibrary/Common/Control/Buffer.sc	/^	getn { arg index, count, action;$/;"	m
getn	SCClassLibrary/Common/Control/Bus.sc	/^	getn { arg count, action;$/;"	m
getn	SCClassLibrary/Common/Control/Node.sc	/^	getn { arg index, count, action;$/;"	m
getnMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	getnMsg { arg index, count;$/;"	m
getnMsg	SCClassLibrary/Common/Control/Bus.sc	/^	getnMsg { arg count;$/;"	m
getnMsg	SCClassLibrary/Common/Control/Node.sc	/^	getnMsg { arg index, count;$/;"	m
getnSynchronous	SCClassLibrary/Common/Control/Bus.sc	/^	getnSynchronous {|count|$/;"	m
gmtime	SCClassLibrary/Common/Math/Date.sc	/^	gmtime {$/;"	m
goBack	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	goBack { webView.back; }$/;"	m
goForward	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	goForward { webView.forward; }$/;"	m
goHome	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	goHome { this.goTo(homeUrl); }$/;"	m
goTo	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	goTo {|urlString, brokenAction|$/;"	m
golden	quarks/MathLib/classes/various/Minimization.sc	/^	golden { arg xlow, xup, xmin, fxlow, fxup, fxmin; var golden = 0.3819660, xc, xl, xr, fm, wlow, 	wup, xn, fn, iter = 0, maxIter = 100, epsAbs = 0.001, epsRel = 0.001, absMin, continue = true;$/;"	m
gotoBeatAtBeat	quarks/cruciallib/Control/MIDIClock.sc	/^	gotoBeatAtBeat { arg beat,atBeat;$/;"	m
gpminit	quarks/cruciallib/Players/PlayerMixer.sc	/^	gpminit { arg pls;$/;"	m
grab	SCClassLibrary/Platform/linux/LID.sc	/^	grab { | flag = true |$/;"	m
gram	quarks/MathLib/classes/various/Matrix.sc	/^	gram { \/\/ the gram matrix$/;"	m
grammian	quarks/MathLib/classes/various/Matrix.sc	/^	grammian { \/\/ the grammian of a matrix$/;"	m
grayCode	SCClassLibrary/Common/Math/Integer.sc	/^	grayCode { _BinaryGrayCode }$/;"	m
green	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	green {$/;"	m
grid	SCClassLibrary/Common/GUI/ControlModel.sc	/^	grid { ^grid ?? {GridLines(this)} }$/;"	m
gridColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	gridColor { ^this.getProperty(\\gridColor, Color.new) }$/;"	m
gridColor	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	gridColor {$/;"	m
gridColor	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  gridColor { ^this.getProperty(\\gridColor) }$/;"	m
gridColor	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridColor { ^this.getProperty( \\gridColor ) }$/;"	m
gridColorX_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridColorX_ { |c|$/;"	m
gridColorY_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridColorY_ { |c|$/;"	m
gridColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	gridColor_ { arg color;$/;"	m
gridColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	gridColor_ { arg color;$/;"	m
gridColor_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  gridColor_ { arg color; this.setProperty( \\gridColor, color ) }$/;"	m
gridColor_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridColor_ { arg color; this.setProperty( \\gridColor, color ) }$/;"	m
gridColors_	SCClassLibrary/Common/GUI/Grid.sc	/^	gridColors_ { arg colors;$/;"	m
gridLinePattern_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridLinePattern_ { |pattern|$/;"	m
gridLineSmoothing_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridLineSmoothing_ { |bool|$/;"	m
gridOffset	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridOffset { ^this.getProperty( \\gridOffset ) }$/;"	m
gridOffset_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridOffset_ { arg seconds; this.setProperty( \\gridOffset, seconds ) }$/;"	m
gridOn	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	gridOn { ^this.getProperty(\\gridOn) }$/;"	m
gridOn	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridOn { ^this.getProperty( \\gridVisible ); }$/;"	m
gridOnX_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridOnX_ { |bool|$/;"	m
gridOnY_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	gridOnY_ { |bool|$/;"	m
gridOn_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	gridOn_ { arg bool;$/;"	m
gridOn_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	gridOn_ { |bool|$/;"	m
gridOn_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  gridOn_ { arg aBool;$/;"	m
gridOn_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridOn_ { arg flag; this.setProperty( \\gridVisible, flag ) }$/;"	m
gridResolution	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	gridResolution { ^this.getProperty(\\gridResolution) }$/;"	m
gridResolution	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridResolution { ^this.getProperty( \\gridResolution ) }$/;"	m
gridResolution_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  gridResolution_ { arg seconds; this.setProperty( \\gridResolution, seconds ) }$/;"	m
gridStep_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	gridStep_ { |step|$/;"	m
gridValues	SCClassLibrary/Common/GUI/ControlModel.sc	/^	gridValues { |n = 20, min, max, base = 10|$/;"	m
grid_	SCClassLibrary/Common/GUI/Grid.sc	/^	grid_ { arg g;$/;"	m
grid_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	grid_ { arg point;$/;"	m
grid_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  grid_ { arg aPoint;$/;"	m
group	SCClassLibrary/Common/Control/NodeControl.sc	/^	group { ^node.group }$/;"	m
group	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	group {$/;"	m
group	quarks/cruciallib/Players/Patching.sc	/^	group { ^nodeControl.group }$/;"	m
group_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	group_ { | inGroup |$/;"	m
group_	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	group_ { arg node;$/;"	m
group_	quarks/cruciallib/Players/AbstractPlayer.sc	/^	group_ { arg g;$/;"	m
grow	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	grow { arg sizeIncrease;$/;"	m
grow	SCClassLibrary/Common/Collections/Dictionary.sc	/^	grow {$/;"	m
grow	SCClassLibrary/Common/Collections/List.sc	/^	grow { arg sizeIncrease; array = array.grow(sizeIncrease); }$/;"	m
grow	SCClassLibrary/Common/Collections/Set.sc	/^	grow {$/;"	m
grow	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	grow { arg n=1;$/;"	m
growClear	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	growClear { arg sizeIncrease;$/;"	m
gtranspose	SCClassLibrary/Common/Streams/Patterns.sc	/^	gtranspose { arg n; ^Paddp(\\gtranspose, n, this) }$/;"	m
guessBeats	quarks/cruciallib/Sample/Sample.sc	/^	guessBeats { arg min=80,max=140;$/;"	m
guessNumberStep	SCClassLibrary/Common/GUI/ControlModel.sc	/^	guessNumberStep {$/;"	m
guessPPO	SCClassLibrary/Common/Collections/Scale.sc	/^	guessPPO {$/;"	m
gui	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	gui { this.subclassResponsibility(thisMethod) }$/;"	m
gui	SCClassLibrary/Common/Control/Volume.sc	/^	gui { arg window, bounds;$/;"	m
gui	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	gui { arg parent, bounds ... args;$/;"	m
gui	SCClassLibrary/Common/GUI/guicrucial/StringGui.sc	/^	gui { arg parent, bounds ... args;$/;"	m
gui	SCClassLibrary/Common/GUI/guicrucial/gui.sc	/^	gui { arg parent,bounds ... args;$/;"	m
gui	SCClassLibrary/Common/Quarks/Quarks.sc	/^	gui {$/;"	m
gui	SCClassLibrary/JITLib/GUI/extJITgui.sc	/^	gui { | numItems, bounds, preset|$/;"	m
gui	SCClassLibrary/JITLib/GUI/extJITgui.sc	/^	gui { |...args|$/;"	m
gui	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^gui { |sysext=true,userext=true, allowCached=true|$/;"	m
gui	quarks/cruciallib/Gui/CXMenu.sc	/^	gui { arg parent,windowWidth=170,height=400,argButtonWidth=160;$/;"	m
gui	quarks/cruciallib/Gui/SynthConsole.sc	/^	gui { arg layout;$/;"	m
gui	quarks/cruciallib/Instr/InstrBrowser.sc	/^    gui { arg layout,bounds;$/;"	m
gui	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	gui { arg parent,bounds ... args;$/;"	m
guiBody	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	guiBody { arg layout,bounds ... args;$/;"	m
guiBody	quarks/cruciallib/Control/CCBank.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Editors/EnvEditorGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	guiBody { arg layout,bounds,onSave;$/;"	m
guiBody	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	guiBody { arg layout,bounds,slider=true, box=true;$/;"	m
guiBody	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	guiBody { arg layout,bounds;$/;"	m
guiBody	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Gui/CXMenu.sc	/^	guiBody { arg resize;$/;"	m
guiBody	quarks/cruciallib/Gui/gui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Gui/gui.sc	/^	guiBody { |f|$/;"	m
guiBody	quarks/cruciallib/Instr/InstrBrowser.sc	/^    guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Instr/InstrGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Instr/Interface.sc	/^	guiBody { arg ... args;$/;"	m
guiBody	quarks/cruciallib/Instr/PatchGui.sc	/^	guiBody { arg ... args;$/;"	m
guiBody	quarks/cruciallib/Instr/PatchGui.sc	/^	guiBody { arg layout,bounds;$/;"	m
guiBody	quarks/cruciallib/Instr/PatchGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Players/BeatClockPlayerGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Players/PlayerBasicOpsGui.sc	/^	guiBody {  arg layout;$/;"	m
guiBody	quarks/cruciallib/Players/PlayerBasicOpsGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Sample/SampleGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Scheduling/TempoGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^	guiBody {  arg layout;$/;"	m
guiBody	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/ServerTools/ServerGui.sc	/^	guiBody { arg layout;$/;"	m
guiBody	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponderGui.sc	/^	guiBody { |f|$/;"	m
guiClass	SCClassLibrary/Common/GUI/guicrucial/gui.sc	/^	guiClass { ^ObjectGui }$/;"	m
guiClass	SCClassLibrary/Common/GUI/guicrucial/gui.sc	/^	guiClass { ^StringGui }$/;"	m
guiClass	quarks/cruciallib/Editors/EnvEditor.sc	/^	guiClass { ^EnvEditorGui }$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^BooleanEditorGui }$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^DictionaryEditorGui }		$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^KrNumberEditorGui }$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^NumberEditorGui }$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^ObjectGui }$/;"	m
guiClass	quarks/cruciallib/Editors/NumberEditor.sc	/^	guiClass { ^PopUpEditorGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Instr.sc	/^	guiClass { ^CompositeInstrGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Instr.sc	/^	guiClass { ^InstrGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Instr.sc	/^	guiClass { ^PappliedInstrGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Instr.sc	/^	guiClass { ^UGenInstrGui }$/;"	m
guiClass	quarks/cruciallib/Instr/InstrSpawner.sc	/^	guiClass { ^InstrSpawnerGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Interface.sc	/^	guiClass { ^InterfaceGui }$/;"	m
guiClass	quarks/cruciallib/Instr/Patch.sc	/^	guiClass { ^PatchGui }$/;"	m
guiClass	quarks/cruciallib/Players/AbstractPlayer.sc	/^	guiClass { ^AbstractPlayerGui }$/;"	m
guiClass	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	guiClass { ^BeatClockPlayerGui }$/;"	m
guiClass	quarks/cruciallib/Players/HasSubject.sc	/^	guiClass { ^HasSubjectGui }$/;"	m
guiClass	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	guiClass { ^PlayerBinopGui }$/;"	m
guiClass	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	guiClass { ^PlayerUnopGui }$/;"	m
guiClass	quarks/cruciallib/Players/PlayerMixer.sc	/^	guiClass { ^PlayerMixerGui }$/;"	m
guiClass	quarks/cruciallib/Players/SFP/SFP.sc	/^	guiClass { ^AbstractSFPGui }$/;"	m
guiClass	quarks/cruciallib/Players/SFP/SFP.sc	/^	guiClass { ^SFPGui }$/;"	m
guiClass	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	guiClass { ^PlayerAmpGui }$/;"	m
guiClass	quarks/cruciallib/Sample/Sample.sc	/^	guiClass { ^SampleGui }$/;"	m
guiClass	quarks/cruciallib/Scheduling/Tempo.sc	/^	guiClass { ^TempoGui }$/;"	m
guiClass	quarks/cruciallib/Sequencers/BusDriver.sc	/^	guiClass { ^KrNumberEditorGui }$/;"	m
guiClass	quarks/cruciallib/Sequencers/BusDriver.sc	/^	guiClass { ^StreamKrDurGui }$/;"	m
guiClass	quarks/cruciallib/ServerTools/plusServer.sc	/^	guiClass { ^ServerGui }$/;"	m
guiClass	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	guiClass { ^KeyCodeResponderGui }$/;"	m
guiClass	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	guiClass { ^KeyCodeResponderStackGui }$/;"	m
guiClass	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	guiClass { ^SimpleKDRUnitGui }$/;"	m
guiClass	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	guiClass { ^KeyCodeResponderGui }$/;"	m
guiDocument	quarks/cruciallib/Players/pathUtilities.sc	/^	guiDocument {$/;"	m
guiOne	quarks/cruciallib/Control/CCBank.sc	/^	guiOne { arg layout,assc,minWidth=100;$/;"	m
gui_	quarks/cruciallib/Instr/Instr.sc	/^	gui_ { arg function; guiBodyFunction = function; }$/;"	m
gui_	quarks/cruciallib/Instr/Interface.sc	/^	gui_ { arg f; guiBodyFunction = f; }$/;"	m
guify	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	guify { arg parent,bounds,title;$/;"	m
hSpacing_	SCClassLibrary/QtCollider/QLayout.sc	/^  hSpacing_ { arg spacing;$/;"	m
half	SCClassLibrary/DefaultLibrary/extNumber.sc	/^	half { ^this * 0.5 }$/;"	m
halt	SCClassLibrary/Common/Core/Object.sc	/^	halt {$/;"	m
hammingDistance	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hammingDistance { |that|$/;"	m
hammingDistance	SCClassLibrary/Common/Core/Symbol.sc	/^	hammingDistance { |that| ^this.asString.hammingDistance(that.asString) }$/;"	m
hanWindow	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hanWindow { ^this.performUnaryOp('hanWindow') }$/;"	m
hanWindow	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	hanWindow { ^this.composeUnaryOp('hanWindow') }$/;"	m
hanWindow	SCClassLibrary/Common/Core/Symbol.sc	/^	hanWindow { ^this }$/;"	m
hanWindow	SCClassLibrary/Common/Math/Signal.sc	/^	hanWindow { _HanWindow; ^this.primitiveFailed }$/;"	m
hanWindow	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	hanWindow { _HanWindow; ^this.primitiveFailed }$/;"	m
handleError	SCClassLibrary/Common/Core/Function.sc	/^	handleError { arg error; ^this.value(error) }$/;"	m
handleError	SCClassLibrary/Common/Core/Nil.sc	/^	handleError { arg error;$/;"	m
handleError	SCClassLibrary/Common/Core/Thread.sc	/^	handleError { arg error;$/;"	m
handleKeyDownBubbling	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	handleKeyDownBubbling { arg view, char, modifiers, unicode, keycode;$/;"	m
handleKeyDownBubbling	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	handleKeyDownBubbling { arg view, char, modifiers, unicode, keycode;$/;"	m
handleKeyModifiersChangedBubbling	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	handleKeyModifiersChangedBubbling { arg view, modifiers;$/;"	m
handleKeyModifiersChangedBubbling	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	handleKeyModifiersChangedBubbling { arg view, modifiers;$/;"	m
handleKeyUpBubbling	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	handleKeyUpBubbling { arg view, char, modifiers, unicode, keycode;$/;"	m
handleKeyUpBubbling	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	handleKeyUpBubbling { arg view, char, modifiers,unicode,keycode;$/;"	m
handleKeyUpBubbling	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	handleKeyUpBubbling { arg view, char, modifiers, unicode, keycode;$/;"	m
hang	SCClassLibrary/Common/Core/Condition.sc	/^	hang { arg value = \\hang;$/;"	m
hardStop	SCClassLibrary/DefaultLibrary/Main.sc	/^	hardStop { \/\/ called by command alt dot$/;"	m
harmMean	quarks/MathLib/classes/statistics/extStatistics.sc	/^	harmMean { $/;"	m
hasBorder_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	hasBorder_ { arg bool = true;$/;"	m
hasBorder_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hasBorder_ { arg bool = true;$/;"	m
hasBorder_	SCClassLibrary/QtCollider/BasicViews.sc	/^  hasBorder_ { arg aBool;$/;"	m
hasBundle	SCClassLibrary/Common/Control/NetAddr.sc	/^	hasBundle { ^false }$/;"	m
hasBundle	SCClassLibrary/Common/Control/NetAddr.sc	/^	hasBundle { ^true }$/;"	m
hasBus	quarks/cruciallib/Players/Patching.sc	/^	hasBus { ^bus.notNil and: {bus.index.notNil} }$/;"	m
hasColor	SCClassLibrary/QtCollider/QPalette.sc	/^  hasColor { arg role, group;$/;"	m
hasEnded	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	hasEnded { ^player.isNil or: { player.streamHasEnded } }$/;"	m
hasEnvir	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	hasEnvir { ^envir.notNil }$/;"	m
hasFeature	SCClassLibrary/Platform/Platform.sc	/^	hasFeature { | symbol |$/;"	m
hasFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hasFocus {$/;"	m
hasFocus	SCClassLibrary/QtCollider/QView.sc	/^  hasFocus {$/;"	m
hasGateControl	SCClassLibrary/Common/Audio/canFreeSynth.sc	/^	hasGateControl {$/;"	m
hasHelpFile	SCClassLibrary/Common/Core/Kernel.sc	/^	hasHelpFile {$/;"	m
hasHorizontalScroller_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hasHorizontalScroller_ { |bool|$/;"	m
hasHorizontalScroller_	SCClassLibrary/QtCollider/BasicViews.sc	/^  hasHorizontalScroller_ { arg aBool;$/;"	m
hasMovedOn_	SCClassLibrary/Common/Streams/History.sc	/^	hasMovedOn_ { |flag=true| hasMovedOn = flag; }$/;"	m
hasName	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	hasName {$/;"	m
hasPlayer	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	hasPlayer { ^player.notNil }$/;"	m
hasSeriesOuts	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	hasSeriesOuts {$/;"	m
hasShmInterface	SCClassLibrary/Common/Control/Server.sc	/^	hasShmInterface { ^serverInterface.notNil }$/;"	m
hasSource	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	hasSource { ^source.notNil }$/;"	m
hasSteplikeDisplay	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	hasSteplikeDisplay {$/;"	m
hasVerticalScroller_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hasVerticalScroller_ { |bool|$/;"	m
hasVerticalScroller_	SCClassLibrary/QtCollider/BasicViews.sc	/^  hasVerticalScroller_ { arg aBool;$/;"	m
hasZeroCrossing	SCClassLibrary/Common/GUI/ControlModel.sc	/^	hasZeroCrossing {$/;"	m
hash	SCClassLibrary/Common/Audio/Env.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Collections/Association.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Collections/Collection.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Collections/Scale.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Collections/String.sc	/^	hash { _StringHash }$/;"	m
hash	SCClassLibrary/Common/Control/Bus.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Control/NetAddr.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Control/Node.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	hash { ^path.hash }$/;"	m
hash	SCClassLibrary/Common/Control/OSCresponder.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Core/Char.sc	/^	hash { _ObjectHash; ^this.primitiveFailed }$/;"	m
hash	SCClassLibrary/Common/Core/Color.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Core/Object.sc	/^	hash { _ObjectHash; ^this.primitiveFailed }$/;"	m
hash	SCClassLibrary/Common/GUI/ControlModel.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/GUI/Document.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Geometry/Point.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Geometry/Rect.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Math/Complex.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Math/Integer.sc	/^	hash { ^this.asFloat.hash }$/;"	m
hash	SCClassLibrary/Common/Math/Magnitude.sc	/^	hash { ^this.subclassResponsibility(thisMethod) }$/;"	m
hash	SCClassLibrary/Common/Math/Polar.sc	/^	hash {$/;"	m
hash	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	hash { _ObjectHash; ^this.primitiveFailed }$/;"	m
hash	SCClassLibrary/Common/Quarks/Quark.sc	/^	hash { arg that;$/;"	m
hash	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	hash { ^ ((x.hash << 1) bitXor: y.hash) bitXor: z.hash }$/;"	m
hash	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	hash { ^(rho.hash bitXor: theta.hash) bitXor: phi.hash }$/;"	m
hash	quarks/MathLib/classes/various/Quaternion.sc	/^	hash {$/;"	m
head	quarks/cruciallib/Instr/Instr.sc	/^	head { arg anode,args,bundle,atTime,out=0;$/;"	m
headerFormat	quarks/cruciallib/Gui/SynthConsole.sc	/^	headerFormat {$/;"	m
height_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	height_ { arg h;$/;"	m
help	SCClassLibrary/Common/Core/Kernel.sc	/^	help {$/;"	m
help	SCClassLibrary/Common/Core/Object.sc	/^	help {$/;"	m
help	SCClassLibrary/Common/Core/Symbol.sc	/^	help {$/;"	m
help	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	help {$/;"	m
help	SCClassLibrary/Common/Quarks/Quark.sc	/^	help {$/;"	m
help	SCClassLibrary/Common/Quarks/Quarks.sc	/^	help { |name|$/;"	m
helpFileForMethod	SCClassLibrary/DefaultLibrary/dumpFullInterface.sc	/^	helpFileForMethod {$/;"	m
helpFilePath	SCClassLibrary/Common/Core/Kernel.sc	/^	helpFilePath {$/;"	m
helpFilesDo	SCClassLibrary/Common/Files/PathName.sc	/^	helpFilesDo { arg func;$/;"	m
helpGui	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	helpGui {$/;"	m
hexString	SCClassLibrary/Common/Core/Color.sc	/^	hexString { \/\/ ignores alpha$/;"	m
hi	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	hi {$/;"	m
hi	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hi {$/;"	m
hi	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  hi {$/;"	m
hi_	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	hi_ { |val|$/;"	m
hi_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	hi_ { arg val;$/;"	m
hi_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hi_ { arg val;$/;"	m
hi_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  hi_ { arg aFloat;$/;"	m
hide	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	hide {$/;"	m
high32Bits	SCClassLibrary/Common/Math/Float.sc	/^	high32Bits { _High32Bits }$/;"	m
highlight	SCClassLibrary/QtCollider/QPalette.sc	/^  highlight { ^this.color( \\highlight ) }$/;"	m
highlightParams	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	highlightParams { |parOffset, num|$/;"	m
highlightParams	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	highlightParams { |parOffset, num|$/;"	m
highlightSlots	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	highlightSlots { |parOffset, num|$/;"	m
highlightSlots	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	highlightSlots { |parOffset, num|$/;"	m
highlightText	SCClassLibrary/QtCollider/QPalette.sc	/^  highlightText { ^this.color( \\highlightText ) }$/;"	m
highlightText_	SCClassLibrary/QtCollider/QPalette.sc	/^  highlightText_ { arg color; this.setColor( color, \\highlightText ) }$/;"	m
highlight_	SCClassLibrary/QtCollider/QPalette.sc	/^  highlight_ { arg color; this.setColor( color, \\highlight ) }$/;"	m
hiliteColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hiliteColor {$/;"	m
hiliteColor	SCClassLibrary/QtCollider/QListView.sc	/^  hiliteColor {$/;"	m
hiliteColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	hiliteColor_ { arg color;$/;"	m
hiliteColor_	SCClassLibrary/QtCollider/QListView.sc	/^  hiliteColor_ { arg color;$/;"	m
histo	SCClassLibrary/Common/Collections/Collection.sc	/^	histo { arg steps = 100, min, max;$/;"	m
histoBands	quarks/MathLib/classes/statistics/extHisto.sc	/^	histoBands { |steps, min, max, center=0.5|$/;"	m
hoareFind	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hoareFind { |k, function, left, right|$/;"	m
hoareMedian	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hoareMedian { |function|$/;"	m
hoarePartition	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hoarePartition { |l0, r0, p, function|$/;"	m
homeServer	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	homeServer { ^server }$/;"	m
horz	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	horz { arg func,bounds,spacing;$/;"	m
horz	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	horz { arg func,bounds;$/;"	m
horz	SCClassLibrary/Common/GUI/viewExtensions.sc	/^	horz { arg func,bounds,spacing;$/;"	m
horz	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	horz { arg func,bounds;$/;"	m
horzGrid_	SCClassLibrary/Common/GUI/Grid.sc	/^	horzGrid_ { arg g;$/;"	m
hostname_	SCClassLibrary/Common/Control/NetAddr.sc	/^	hostname_ { arg inHostname;$/;"	m
hourStamp	SCClassLibrary/Common/Math/Date.sc	/^	hourStamp {$/;"	m
hr	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	hr { arg color,height=3;$/;"	m
hr	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	hr { arg color,height=8,borderStyle=1;$/;"	m
html	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	html { ^this.getProperty(\\html); }$/;"	m
html	SCClassLibrary/QtCollider/QWebView.sc	/^  html { ^this.getProperty( \\html ); }$/;"	m
html_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	html_ { arg htmlString;$/;"	m
html_	SCClassLibrary/QtCollider/QWebView.sc	/^  html_ { arg htmlString;$/;"	m
hueBlend	SCClassLibrary/Common/Core/Color.sc	/^	hueBlend { arg aColor, blend=0.0;$/;"	m
hypot	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hypot { arg aNumber, adverb; ^this.performBinaryOp('hypot', aNumber, adverb) }$/;"	m
hypot	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	hypot { arg function, adverb; ^this.composeBinaryOp('hypot', function, adverb) }$/;"	m
hypot	SCClassLibrary/Common/Core/Symbol.sc	/^	hypot { ^this }$/;"	m
hypot	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	hypot { arg aNumber, adverb; _Hypot; ^aNumber.performBinaryOpOnSimpleNumber('hypot', this, adverb) }$/;"	m
hypotApx	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	hypotApx { arg aNumber, adverb; ^this.performBinaryOp('hypotApx', aNumber, adverb) }$/;"	m
hypotApx	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	hypotApx { arg function, adverb; ^this.composeBinaryOp('hypotApx', function, adverb) }$/;"	m
hypotApx	SCClassLibrary/Common/Core/Symbol.sc	/^	hypotApx { ^this }$/;"	m
hypotApx	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	hypotApx { arg aNumber, adverb; _HypotApx; ^aNumber.performBinaryOpOnSimpleNumber('hypotApx', this, adverb) }$/;"	m
icontainsStringAt	SCClassLibrary/Common/Collections/String.sc	/^	icontainsStringAt { arg index, string;$/;"	m
id	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	id {$/;"	m
id	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	id {$/;"	m
id_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	id_ { arg id;$/;"	m
id_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	id_ { arg id;$/;"	m
ideName	SCClassLibrary/Platform/Platform.sc	/^	ideName { _Platform_ideName }$/;"	m
ideals	SCClassLibrary/Common/GUI/Grid.sc	/^	ideals { arg min,max,ntick=5;$/;"	m
identityHash	SCClassLibrary/Common/Core/Object.sc	/^	identityHash { _ObjectHash; ^this.primitiveFailed }$/;"	m
idle	SCClassLibrary/Common/Core/Object.sc	/^	idle { arg val;$/;"	m
if	SCClassLibrary/Common/Audio/UGen.sc	/^	if { arg trueUGen, falseUGen;$/;"	m
if	SCClassLibrary/Common/Core/Boolean.sc	/^	if { ^this.subclassResponsibility(thisMethod) }$/;"	m
if	SCClassLibrary/Common/Core/Boolean.sc	/^	if { arg trueFunc, falseFunc; ^falseFunc.value }$/;"	m
if	SCClassLibrary/Common/Core/Boolean.sc	/^	if { arg trueFunc, falseFunc; ^trueFunc.value }$/;"	m
ifft	SCClassLibrary/Common/Math/Signal.sc	/^	ifft { arg imag, cosTable;$/;"	m
ilisp	quarks/cruciallib/Instr/ilisp.sc	/^	ilisp {$/;"	m
imag	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	imag { ^this.performUnaryOp('imag') }$/;"	m
imag	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	imag { ^0.0 }$/;"	m
imag	SCClassLibrary/Common/Math/Number.sc	/^	imag { ^0.0 }$/;"	m
imag	SCClassLibrary/Common/Math/Polar.sc	/^	imag { ^rho * sin(theta) }$/;"	m
imag	SCClassLibrary/Common/Math/Signal.sc	/^	imag { ^0.0 }$/;"	m
imag	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	imag { ^this.y }$/;"	m
image_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	image_ {arg image;$/;"	m
image_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  image_ {arg image;$/;"	m
immutableError	SCClassLibrary/Common/Core/Object.sc	/^	immutableError { arg value;$/;"	m
inBus_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	inBus_ { arg num;$/;"	m
inEnvir	SCClassLibrary/Common/Core/Function.sc	/^	inEnvir { |envir|$/;"	m
include	SCClassLibrary/Common/Collections/String.sc	/^	include {$/;"	m
includedInCallers	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	includedInCallers {$/;"	m
includes	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	includes { |item| ^this.indexOf(item).notNil }$/;"	m
includes	SCClassLibrary/Common/Collections/Bag.sc	/^	includes { arg item;$/;"	m
includes	SCClassLibrary/Common/Collections/Collection.sc	/^	includes { | item1 |$/;"	m
includes	SCClassLibrary/Common/Collections/Dictionary.sc	/^	includes { arg item1;$/;"	m
includes	SCClassLibrary/Common/Collections/Interval.sc	/^	includes { arg val;$/;"	m
includes	SCClassLibrary/Common/Collections/Set.sc	/^	includes { arg item;$/;"	m
includes	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	includes { |proxy| ^envir.includes(proxy) }$/;"	m
includesAll	SCClassLibrary/Common/Collections/Collection.sc	/^	includesAll { | aCollection |$/;"	m
includesAny	SCClassLibrary/Common/Collections/Collection.sc	/^	includesAny { | aCollection |$/;"	m
includesEqual	SCClassLibrary/Common/Collections/Collection.sc	/^	includesEqual { | item1 |$/;"	m
includesKey	SCClassLibrary/Common/Collections/Dictionary.sc	/^	includesKey { arg key;$/;"	m
inclusivelyBetween	SCClassLibrary/Common/Math/Magnitude.sc	/^	inclusivelyBetween { arg lo, hi; ^(lo <= this) and: { this <= hi } }$/;"	m
increment	SCClassLibrary/Common/Audio/BufIO.sc	/^	increment {$/;"	m
increment	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	increment { this.valueAction = this.value + this.spec.step }$/;"	m
increment	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	increment { this.valueAction = this.value + step; }$/;"	m
increment	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	increment { |zoom=1| ^this.valueAction = this.value + (max(this.step, this.pixelStep) * zoom) }$/;"	m
increment	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	increment { |zoom=1|$/;"	m
increment	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	increment { |zoom=1| ^this.valueAction = (this.value + (keystep * zoom)).min(1) }$/;"	m
increment	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	increment {arg mul=1; this.valueAction = this.value + (step*mul); }$/;"	m
increment	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	increment { arg mul=1; this.valueAction = this.value + (step*mul); }$/;"	m
increment	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	increment { |zoom=1| ^this.valueAction = this.value + (max(this.step, this.pixelStep) * zoom) }$/;"	m
increment	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	increment { |zoom=1|$/;"	m
increment	SCClassLibrary/QtCollider/BasicViews.sc	/^  increment { arg factor = 1.0; this.invokeMethod( \\increment, factor.asFloat ); }$/;"	m
increment	SCClassLibrary/QtCollider/QKnob.sc	/^  increment { |zoom=1| ^this.valueAction = (this.value + (keystep * zoom)) }$/;"	m
incrementX	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	incrementX { |zoom=1| ^this.x = this.x + (this.pixelStepX * zoom) }$/;"	m
incrementX	SCClassLibrary/QtCollider/QSlider2D.sc	/^  incrementX { arg factor=1.0; this.invokeMethod( \\incrementX, factor.asFloat ); }$/;"	m
incrementY	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	incrementY { |zoom=1| ^this.y = this.y + (this.pixelStepY * zoom) }$/;"	m
incrementY	SCClassLibrary/QtCollider/QSlider2D.sc	/^  incrementY { arg factor=1.0; this.invokeMethod( \\incrementY, factor.asFloat ); }$/;"	m
indent	quarks/cruciallib/UncoupledUsefulThings/PrettyPrintStream.sc	/^	indent { arg way=1; tabs = tabs + way; }$/;"	m
indentedRemaining	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	indentedRemaining {$/;"	m
indentedRemaining	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	indentedRemaining { ^this.decorator.indentedRemaining }$/;"	m
indentedRemaining	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	indentedRemaining { ^this.view.indentedRemaining }$/;"	m
index	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	index { \/\/returns selected index$/;"	m
index	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	index {$/;"	m
index	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	index { ^if(bus.isNil) { nil } { bus.index } }$/;"	m
index	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	index { ^value }$/;"	m
index	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	index { ^value.index }$/;"	m
index	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  index {$/;"	m
index	SCClassLibrary/QtCollider/QLayout.sc	/^  index { ^this.getProperty(\\currentIndex) }$/;"	m
index	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  index {$/;"	m
index	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  index {$/;"	m
index	SCClassLibrary/QtCollider/QTreeView.sc	/^  index {$/;"	m
index	quarks/cruciallib/Scheduling/TempoBus.sc	/^	index { ^bus.index }$/;"	m
indexForInserting	SCClassLibrary/Common/Collections/SortedList.sc	/^	indexForInserting { arg newObject;$/;"	m
indexFromName	quarks/cruciallib/Instr/Patch.sc	/^	indexFromName { arg argName;$/;"	m
indexIn	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexIn { arg val; \/\/ collection is sorted, returns closest index$/;"	m
indexInBetween	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexInBetween { arg val; \/\/ collection is sorted, returns linearly interpolated index$/;"	m
indexIsHorizontal	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  indexIsHorizontal { ^this.getProperty(\\orientation) == QOrientation(\\vertical) }$/;"	m
indexIsHorizontal_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	indexIsHorizontal_ { arg val;$/;"	m
indexIsHorizontal_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  indexIsHorizontal_ { arg bool;$/;"	m
indexOf	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	indexOf { arg item;$/;"	m
indexOf	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexOf { arg item;$/;"	m
indexOf	SCClassLibrary/Common/Collections/SparseArray.sc	/^	indexOf { arg item;$/;"	m
indexOf	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	indexOf { arg obj;$/;"	m
indexOf	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	indexOf { arg item;$/;"	m
indexOfEqual	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexOfEqual { arg item, offset=0;$/;"	m
indexOfGreaterThan	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	indexOfGreaterThan { arg val;$/;"	m
indexOfGreaterThan	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexOfGreaterThan { arg val;$/;"	m
indexOfPrime	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indexOfPrime { ^this.performUnaryOp('indexOfPrime') }$/;"	m
indexOfPrime	SCClassLibrary/Common/Math/Integer.sc	/^	indexOfPrime { _IndexOfPrime }$/;"	m
indexThumbSize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	indexThumbSize_ { arg val;$/;"	m
indexThumbSize_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  indexThumbSize_ { arg float;$/;"	m
indexUGens	SCClassLibrary/Common/Audio/SynthDef.sc	/^	indexUGens {$/;"	m
indexUndocumentedMethods	SCClassLibrary/SCDoc/SCDoc.sc	/^    indexUndocumentedMethods {$/;"	m
index_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	index_ { arg inx;$/;"	m
index_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	index_ { arg val=0;$/;"	m
index_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  index_ { arg index;$/;"	m
index_	SCClassLibrary/QtCollider/QLayout.sc	/^  index_ { arg value; this.setProperty(\\currentIndex, value) }$/;"	m
index_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  index_ { arg anInt;$/;"	m
index_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  index_ { arg val=0;$/;"	m
index_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  index_ { arg i;$/;"	m
indexedSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	indexedSize { _BasicSize }$/;"	m
indexedSize	SCClassLibrary/Common/Core/Object.sc	/^	indexedSize { ^0 }$/;"	m
indicesDo	SCClassLibrary/Common/Collections/SparseArray.sc	/^	indicesDo { arg function;$/;"	m
indicesFor	SCClassLibrary/Common/Streams/History.sc	/^	indicesFor { |keys, string=""|$/;"	m
indicesOfEqual	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	indicesOfEqual { |item|$/;"	m
info	SCClassLibrary/Common/Files/SoundFile.sc	/^	info { | path |$/;"	m
infoChoose	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	infoChoose { var index; $/;"	m
infoString	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	infoString { arg args;$/;"	m
inform	SCClassLibrary/Common/Collections/String.sc	/^	inform { ^this.postln }$/;"	m
init	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	init { arg in, mul, add;$/;"	m
init	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	init { arg theOperator, a, b;$/;"	m
init	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	init { arg theOperator, theInput;$/;"	m
init	SCClassLibrary/Common/Audio/BufIO.sc	/^	init { arg argNumChannels ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Demand.sc	/^	init { arg ... argInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Demand.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Audio/DiskIO.sc	/^	init { arg numChannels, bufnum, argRate = 1, loop = 0, sendID = 0;$/;"	m
init	SCClassLibrary/Common/Audio/DiskIO.sc	/^	init { arg numChannels, bufnum, loop = 0;$/;"	m
init	SCClassLibrary/Common/Audio/EnvGen.sc	/^ 	init { arg theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/FFT2.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/FSinOsc.sc	/^ 	init { arg theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/FreeVerb.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/GVerb.sc	/^	init {arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/GrainUGens.sc	/^	init { arg argNumChannels ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Hilbert.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/IEnvGen.sc	/^ 	init { arg theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/InOut.sc	/^	init { arg ... argValues;$/;"	m
init	SCClassLibrary/Common/Audio/InOut.sc	/^	init { arg ... stuff;$/;"	m
init	SCClassLibrary/Common/Audio/InOut.sc	/^	init { arg numChannels ... argBus;$/;"	m
init	SCClassLibrary/Common/Audio/InOut.sc	/^	init { arg numChannels ... argInputs;$/;"	m
init	SCClassLibrary/Common/Audio/InOut.sc	/^	init { arg numChannels ... default;$/;"	m
init	SCClassLibrary/Common/Audio/Line.sc	/^	init { arg ... argInputs;$/;"	m
init	SCClassLibrary/Common/Audio/MachineListening.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Noise.sc	/^	init { arg jseed, jmul, jadd, jmod ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Pan.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Pan.sc	/^	init { arg numChans ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/Poll.sc	/^ 	init { arg theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	init { |inServers|$/;"	m
init	SCClassLibrary/Common/Audio/Trig.sc	/^	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Audio/UGen.sc	/^	init { arg argSource, argIndex;$/;"	m
init	SCClassLibrary/Common/Audio/UGen.sc	/^ 	init { arg ... theInputs;$/;"	m
init	SCClassLibrary/Common/Collections/Array2D.sc	/^	init { arg argRows, argCols;$/;"	m
init	SCClassLibrary/Common/Collections/Library.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Collections/Scale.sc	/^	init { | inDegrees, inPitchesPerOctave, inTuning, inName |$/;"	m
init	SCClassLibrary/Common/Control/Engine.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Control/GraphBuilder.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	init { arg install;$/;"	m
init	SCClassLibrary/Common/Control/Module.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Control/OSC.sc	/^	init { arg argPortID, argHostname, argOSCNode;$/;"	m
init	SCClassLibrary/Common/Control/OSC.sc	/^	init { arg argPortID, argOSCNode;$/;"	m
init	SCClassLibrary/Common/Control/OSCresponder.sc	/^	init { arg argAddr, argCmdName, argAction;$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init { all.add(this);}$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init { super.init; active = IdentityDictionary.new; wrappedFuncs = IdentityDictionary.new; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argArgTemplate, argFunc| argTemplate = argArgTemplate.asArray; func = argFunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argArgTemplate, argFunc| argTemplate = argArgTemplate; func = argFunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argaddr, argfunc| addr = argaddr; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argaddr, argrecvPort, argfunc| addr = argaddr; recvPort = argrecvPort; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argbools, argsrcID, argfunc| chanBools = argbools; srcID = argsrcID; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argchan, argfunc| chan = argchan; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argchan, argsrcID, argfunc| chan = argchan; srcID = argsrcID; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argchanbools, argfunc| chanBools = argchanbools; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argfunc, argmsgNum, argchan, argType, argsrcID, argtempl, argdisp|$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argfunc, argpath, argsrcID, argrecvPort, argtemplate, argdisp|$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argrecvPort, argfunc| recvPort = argrecvPort; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	init {|argsrcID, argfunc| srcID = argsrcID; func = argfunc; }$/;"	m
init	SCClassLibrary/Common/Control/Score.sc	/^	init { arg list;$/;"	m
init	SCClassLibrary/Common/Control/Server.sc	/^	init { arg argName, argAddr, argOptions, argClientID;$/;"	m
init	SCClassLibrary/Common/Control/SkipJack.sc	/^	init { |autostart=true|$/;"	m
init	SCClassLibrary/Common/Core/Clock.sc	/^	init { arg tempo, beats, seconds, queueSize;$/;"	m
init	SCClassLibrary/Common/Core/Clock.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Core/Condition.sc	/^	init { arg inVal;$/;"	m
init	SCClassLibrary/Common/Core/Thread.sc	/^	init { arg argFunc, argStackSize = 512;$/;"	m
init	SCClassLibrary/Common/Files/PathName.sc	/^	init { arg inPath;$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	init { arg parentView, bounds, label, argControlSpec, argAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^	init { arg parentView, bounds, label, argControlSpec, argAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	init { arg parentView, bounds, label, argControlSpec, argAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	init { |w, bounds, initVal|$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	init { arg parentView, bounds, label, argControlSpec, argAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZSpecEditor.sc	/^	init { arg parentView, bounds, label, argControlSpec, labelWidth, labelHeight, argLayout, argGap, argMargin;$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZText.sc	/^	init { arg parentView, bounds, label, argAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	init { arg parentView, bounds, label, argItems, argGlobalAction, initVal,$/;"	m
init	SCClassLibrary/Common/GUI/ControlModel.sc	/^	init { arg argCurve;$/;"	m
init	SCClassLibrary/Common/GUI/ControlModel.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/Grid.sc	/^	init { arg bounds,h,v;$/;"	m
init	SCClassLibrary/Common/GUI/Grid.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	init { arg aHomeUrl, aNewWin;$/;"	m
init	SCClassLibrary/Common/GUI/Inspector.sc	/^	init { arg inspector, vpos;$/;"	m
init	SCClassLibrary/Common/GUI/Inspector.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/Model.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/PlusGUI/Control/WiiMoteGUI.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	init { arg class;$/;"	m
init	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	init { |inHist, where, numTextLines=12|$/;"	m
init	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	init { arg argParent, bounds,margin,gap,windowTitle="";$/;"	m
init	SCClassLibrary/Common/GUI/ServerMeter.sc	/^	init { arg aserver, parent, leftUp, anumIns,anumOuts;$/;"	m
init	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	init { arg title,bounds,argMargin,background,argScroll=true,front=true;$/;"	m
init	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	init { arg argParent, argBounds;$/;"	m
init	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	init { |argParent, argBounds|$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	init { arg argParent, argBounds;$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	init { arg argParent, argBounds;$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	init { |argParent, argBounds|$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	init { arg width, height;$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	init { |win, bounds|$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	init { |window,rect,parent|$/;"	m
init	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Quarks/Quark.sc	/^	init { | blob , argParent |$/;"	m
init	SCClassLibrary/Common/Quarks/Quark.sc	/^	init { |parent, aQuark, argIsInstalled|$/;"	m
init	SCClassLibrary/Common/Quarks/Quark.sc	/^	init { |parent, extent, aQuark, argIsInstalled|$/;"	m
init	SCClassLibrary/Common/Quarks/Quarks.sc	/^	init { |q|$/;"	m
init	SCClassLibrary/Common/Streams/History.sc	/^	init { |inLines|$/;"	m
init	SCClassLibrary/Common/Streams/Pspawner.sc	/^	init { | func, stackSize |$/;"	m
init	SCClassLibrary/Common/Streams/Stream.sc	/^	init {$/;"	m
init	SCClassLibrary/Common/Streams/TimePatterns.sc	/^	init { if (list.isKindOf(Collection)) { list = Pseq(list); } }$/;"	m
init	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	init { |makeSkip, options|$/;"	m
init	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	init { arg inParent, numSliders, extras, monitor, sinks, morph;$/;"	m
init	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	init { arg space, nPxs = 16, argTitle, where;$/;"	m
init	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^	init { |w, bounds, showLevel, showPlayN, showName, showPauseSend, makeWatcher, skin|$/;"	m
init	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	init {$/;"	m
init	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	init {$/;"	m
init	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	init { arg argServer, argName, argClock;$/;"	m
init	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	init { |argparent, argindex, argname|$/;"	m
init	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	init { |argparent, argindex|$/;"	m
init	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  init {$/;"	m
init	SCClassLibrary/SCDoc/SCDoc.sc	/^    init { |string|$/;"	m
init	SCClassLibrary/SCDoc/SCDoc.sc	/^    init {|node,aPath|$/;"	m
init	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	init { |rootdir|$/;"	m
init	quarks/Feedback/Fb.sc	/^	init {$/;"	m
init	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	init { $/;"	m
init	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	init { arg argOrder;$/;"	m
init	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	init {$/;"	m
init	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	init {$/;"	m
init	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	init { arg n, a;$/;"	m
init	quarks/MathLib/classes/various/Bessel.sc	/^	init { |x_val|$/;"	m
init	quarks/MathLib/classes/various/Trafo.sc	/^	init {|argmatrix|$/;"	m
init	quarks/cruciallib/Control/CCBank.sc	/^	init {$/;"	m
init	quarks/cruciallib/Editors/NumberEditor.sc	/^	init { arg val,aspec;$/;"	m
init	quarks/cruciallib/Editors/NumberEditor.sc	/^	init {} \/\/ should be a shared superclass above this$/;"	m
init	quarks/cruciallib/Gui/ActionButton.sc	/^	init { arg layout,init,title,minWidth,minHeight,onc,offc;$/;"	m
init	quarks/cruciallib/Gui/ActionButton.sc	/^	init { arg layout,title,function,minWidth=20,minHeight,color,backcolor,font;$/;"	m
init	quarks/cruciallib/Gui/CXLabel.sc	/^	init { |layout, bounds, string|$/;"	m
init	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	init { arg layout,x,y,arglabelArray,argaction,$/;"	m
init	quarks/cruciallib/Gui/SynthConsole.sc	/^	init {$/;"	m
init	quarks/cruciallib/Gui/Updater.sc	/^	init {$/;"	m
init	quarks/cruciallib/Instr/Instr.sc	/^	init { arg specs,outsp;$/;"	m
init	quarks/cruciallib/Instr/Instr.sc	/^	init { arg uc,r;$/;"	m
init	quarks/cruciallib/Instr/Instr.sc	/^	init {$/;"	m
init	quarks/cruciallib/Instr/InstrBrowser.sc	/^    init {$/;"	m
init	quarks/cruciallib/Instr/Interface.sc	/^	init { arg i,a;$/;"	m
init	quarks/cruciallib/Instr/MoreSpecs.sc	/^	init {$/;"	m
init	quarks/cruciallib/Players/Patching.sc	/^	init { arg enabled=true;$/;"	m
init	quarks/cruciallib/Players/Patching.sc	/^	init {$/;"	m
init	quarks/cruciallib/Players/Patching.sc	/^	init {}$/;"	m
init	quarks/cruciallib/Players/SFP/SFP.sc	/^	init { arg path;$/;"	m
init	quarks/cruciallib/Players/SFP/SFP.sc	/^	init { arg sfilePath;$/;"	m
init	quarks/cruciallib/Scheduling/OSCSched.sc	/^	init {$/;"	m
init	quarks/cruciallib/Scheduling/Tempo.sc	/^	init { arg t;$/;"	m
init	quarks/cruciallib/Scheduling/TempoBus.sc	/^	init { arg server;$/;"	m
init	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	init { arg buses;$/;"	m
init3d	quarks/MathLib/classes/gui/ScatterView.sc	/^	init3d {|parent, bounds, data, argspecX, argspecY, argspecZ, argrotX, argrotY, argrotZ|$/;"	m
initAt	quarks/cruciallib/Instr/Instr.sc	/^	initAt { arg i;  ^(defArgs.at(i) ?? {specs.at(i).tryPerform(\\default)}) }$/;"	m
initAt	quarks/cruciallib/Instr/Instr.sc	/^	initAt { arg i;  ^(this.defArgAt(i) ?? {this.specs.at(i).tryPerform(\\default)}) }$/;"	m
initAt	quarks/cruciallib/Instr/Instr.sc	/^	initAt { arg i;$/;"	m
initBackGround	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	initBackGround {$/;"	m
initBuild	SCClassLibrary/Common/Audio/SynthDef.sc	/^	initBuild {$/;"	m
initBus	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	initBus { | rate, numChannels |$/;"	m
initBus	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	initBus { arg rate, numChannels;$/;"	m
initBus	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	initBus { ^true }$/;"	m
initByIndex	SCClassLibrary/Common/GUI/Document.sc	/^	initByIndex { | idx |$/;"	m
initClass	SCClassLibrary/Common/Core/Kernel.sc	/^	initClass {   }$/;"	m
initDefaults	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	initDefaults {$/;"	m
initDict	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	initDict {$/;"	m
initDrawFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	initDrawFunc {$/;"	m
initForSynthDef	quarks/cruciallib/Players/AbstractPlayer.sc	/^	initForSynthDef { arg synthDef,argi;$/;"	m
initForSynthDef	quarks/cruciallib/Players/instrSupport.sc	/^	initForSynthDef {}$/;"	m
initForSynthDef	quarks/cruciallib/Sample/Sample.sc	/^	initForSynthDef { arg synthDef,argi;$/;"	m
initFreqScope	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	initFreqScope { arg parent, bounds;$/;"	m
initFromArchive	SCClassLibrary/Common/Core/Object.sc	/^	initFromArchive {}$/;"	m
initFromFile	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	initFromFile { arg path;$/;"	m
initFromPath	SCClassLibrary/Common/GUI/Document.sc	/^	initFromPath { | path, selectionStart, selectionLength |$/;"	m
initFromURL	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	initFromURL { arg newURL;$/;"	m
initHO	quarks/MathLib/classes/Solver/Solver.sc	/^	initHO { |af,adt,at,ay|$/;"	m
initLast	SCClassLibrary/Common/GUI/Document.sc	/^	initLast {$/;"	m
initLast	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	initLast {$/;"	m
initLookup	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	initLookup {$/;"	m
initMonitor	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	initMonitor { | vol |$/;"	m
initOn	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	initOn { arg argWindow,bounds,argMargin,background;$/;"	m
initOneState	quarks/cruciallib/Gui/ActionButton.sc	/^	initOneState { arg name,textcolor,backcolor;$/;"	m
initOutputs	SCClassLibrary/Common/Audio/UGen.sc	/^	initOutputs { arg numChannels, rate;$/;"	m
initPathSize	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	initPathSize { arg pathSize;$/;"	m
initPlatform	SCClassLibrary/Platform/Platform.sc	/^	initPlatform {$/;"	m
initPlatform	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	initPlatform {$/;"	m
initPlatform	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^	initPlatform {$/;"	m
initPlatform	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	initPlatform {$/;"	m
initPlatform	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	initPlatform {$/;"	m
initPlot	quarks/MathLib/classes/gui/ScatterView.sc	/^	initPlot {$/;"	m
initPlot	quarks/MathLib/classes/gui/ScatterView2.sc	/^	initPlot {|parent, bounds, data, argSpecX, argSpecY|$/;"	m
initProxy	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	initProxy { arg proxy;$/;"	m
initQDragView	SCClassLibrary/QtCollider/dnd_views.sc	/^  initQDragView {$/;"	m
initQNumberBox	SCClassLibrary/QtCollider/QNumberBox.sc	/^  initQNumberBox {$/;"	m
initQRangeSlider	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  initQRangeSlider { arg bounds;$/;"	m
initQScrollTopView	SCClassLibrary/QtCollider/QWindow.sc	/^  initQScrollTopView { arg win;$/;"	m
initQScrollView	SCClassLibrary/QtCollider/BasicViews.sc	/^  initQScrollView {$/;"	m
initQSlider	SCClassLibrary/QtCollider/QSlider.sc	/^  initQSlider { arg bounds;$/;"	m
initQStethoscope	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  initQStethoscope { arg server_, parent, bus_, bufsize_, cycle_;$/;"	m
initQTopView	SCClassLibrary/QtCollider/QWindow.sc	/^  initQTopView { arg win; window = win; }$/;"	m
initQView	SCClassLibrary/QtCollider/QView.sc	/^  initQView { arg parent;$/;"	m
initQWindow	SCClassLibrary/QtCollider/QWindow.sc	/^  initQWindow { arg name, bounds, resize, border, scroll;$/;"	m
initResponders	quarks/cruciallib/Control/MIDIPlayer.sc	/^	initResponders {$/;"	m
initSCEnvelopeEdit	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	initSCEnvelopeEdit { arg argEnv, argPPS, setMinMax=true;$/;"	m
initSCImageFilter	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	initSCImageFilter {|arguments|$/;"	m
initSCWindow	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	initSCWindow { arg argName, argBounds, resizable, border, scroll, appmodal = false;$/;"	m
initSCWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	initSCWindow { arg argName, argBounds, resizable, border, scroll, appmodal = false;$/;"	m
initSCWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	initSCWindow {|argName, argBounds, resizable, border, scroll, appmodal|$/;"	m
initScoreStreamPlayer	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	initScoreStreamPlayer {$/;"	m
initSerialPort	SCClassLibrary/Common/Control/SerialPort.sc	/^	initSerialPort { | ... args |$/;"	m
initSet	SCClassLibrary/Common/Collections/Set.sc	/^	initSet { arg n; array = Array.newClear(n); size = 0; }$/;"	m
initSpec	SCClassLibrary/Platform/linux/LID.sc	/^	initSpec { }$/;"	m
initSpec	SCClassLibrary/Platform/linux/LID.sc	/^	initSpec {$/;"	m
initSpec	SCClassLibrary/Platform/osx/MXHID.sc	/^	initSpec { }$/;"	m
initSpec	SCClassLibrary/Platform/osx/MXHID.sc	/^	initSpec {$/;"	m
initStreams	SCClassLibrary/Common/Streams/Ppar.sc	/^	initStreams { arg priorityQ;$/;"	m
initStreams	SCClassLibrary/Common/Streams/Pproto.sc	/^	initStreams { arg priorityQ;$/;"	m
initTopoSort	SCClassLibrary/Common/Audio/SynthDef.sc	/^	initTopoSort {$/;"	m
initTopoSort	SCClassLibrary/Common/Audio/UGen.sc	/^	initTopoSort {$/;"	m
initTree	SCClassLibrary/Common/Control/Server.sc	/^	initTree {$/;"	m
initVolume	SCClassLibrary/Common/Control/Volume.sc	/^	initVolume {$/;"	m
inject	SCClassLibrary/Common/Collections/Collection.sc	/^	inject { | thisValue, function |$/;"	m
innerBounds	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	innerBounds {$/;"	m
innerBounds	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	innerBounds { ^this.decorator.innerBounds }$/;"	m
innerBounds	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	innerBounds {$/;"	m
innerBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	innerBounds {$/;"	m
innerBounds	SCClassLibrary/QtCollider/BasicViews.sc	/^  innerBounds {$/;"	m
input	quarks/cruciallib/ServerTools/ServerGui.sc	/^	input { |layout,width=140|$/;"	m
inputBus	SCClassLibrary/Common/Control/Server.sc	/^	inputBus {$/;"	m
inputProxies	quarks/cruciallib/Instr/Patch.sc	/^	inputProxies { \/\/ just this patch$/;"	m
inputs	quarks/cruciallib/Instr/Patch.sc	/^	inputs { ^args }$/;"	m
inputs	quarks/cruciallib/Instr/Patch.sc	/^	inputs { ^this.subclassResponsibility(thisMethod) }$/;"	m
inputs	quarks/cruciallib/Players/HasSubject.sc	/^	inputs { ^[subject] }$/;"	m
insert	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	insert { arg index, item;$/;"	m
insert	SCClassLibrary/Common/Collections/List.sc	/^	insert { arg index, item; array = array.insert(index, item); }$/;"	m
insert	SCClassLibrary/Common/Collections/String.sc	/^	insert { arg index, string;$/;"	m
insert	SCClassLibrary/QtCollider/QLayout.sc	/^  insert { arg item, index=0, stretch = 0, align;$/;"	m
insert	SCClassLibrary/QtCollider/QLayout.sc	/^  insert { arg view, index = 0; this.invokeMethod( \\insertWidget, [index, view] ) }$/;"	m
insert	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	insert { arg index, item; array = array.insert(index, item); size = size + 1 }$/;"	m
insertChild	SCClassLibrary/QtCollider/QTreeView.sc	/^  insertChild { arg index, strings;$/;"	m
insertCol	quarks/MathLib/classes/various/Matrix.sc	/^	insertCol { arg row, colVals;$/;"	m
insertItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  insertItem { arg index, strings;$/;"	m
insertRow	quarks/MathLib/classes/various/Matrix.sc	/^	insertRow { arg col, rowVals;$/;"	m
insertTextRange	SCClassLibrary/Common/GUI/Document.sc	/^	insertTextRange { | string, rangestart, rangesize |$/;"	m
insertTextRange	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	insertTextRange { arg string, rangestart, rangesize;$/;"	m
insertionSort	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	insertionSort { arg function;$/;"	m
insertionSortRange	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	insertionSortRange { arg function, left, right;$/;"	m
insetAll	SCClassLibrary/Common/Geometry/Rect.sc	/^	insetAll { arg a, b, c, d;$/;"	m
insetBy	SCClassLibrary/Common/Geometry/Rect.sc	/^	insetBy { arg h, v;$/;"	m
insetByRect	SCClassLibrary/Common/Geometry/Rect.sc	/^	insetByRect { arg r;$/;"	m
inspect	SCClassLibrary/Common/Core/Object.sc	/^	inspect { ^this.inspectorClass.new(this) }$/;"	m
inspectSlot	SCClassLibrary/Common/GUI/Inspector.sc	/^	inspectSlot {$/;"	m
inspector	SCClassLibrary/Common/Core/Object.sc	/^	inspector {$/;"	m
inspectorClass	SCClassLibrary/Common/Collections/String.sc	/^	inspectorClass { ^StringInspector }$/;"	m
inspectorClass	SCClassLibrary/Common/Core/Kernel.sc	/^	inspectorClass { ^ClassInspector }$/;"	m
inspectorClass	SCClassLibrary/Common/Core/Kernel.sc	/^	inspectorClass { ^FrameInspector }$/;"	m
inspectorClass	SCClassLibrary/Common/Core/Kernel.sc	/^	inspectorClass { ^FunctionDefInspector }$/;"	m
inspectorClass	SCClassLibrary/Common/Core/Kernel.sc	/^	inspectorClass { ^MethodInspector }$/;"	m
inspectorClass	SCClassLibrary/Common/Core/Object.sc	/^	inspectorClass { ^ObjectInspector }$/;"	m
instVarAt	SCClassLibrary/Common/Core/Object.sc	/^	instVarAt { arg index;$/;"	m
instVarHash	SCClassLibrary/Common/Core/Object.sc	/^	instVarHash { arg instVarNames;$/;"	m
instVarPut	SCClassLibrary/Common/Core/Object.sc	/^	instVarPut { arg index, item;$/;"	m
instVarSize	SCClassLibrary/Common/Core/Object.sc	/^	instVarSize { _InstVarSize; ^this.primitiveFailed }$/;"	m
install	SCClassLibrary/Common/Quarks/Quarks.sc	/^	install { | name , includeDependencies=true, checkoutIfNeeded=true |$/;"	m
installed	SCClassLibrary/Common/Quarks/Quarks.sc	/^	installed {$/;"	m
instill	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	instill { arg index, item, default;$/;"	m
instill	SCClassLibrary/Common/Core/Object.sc	/^	instill { arg index, item, default;$/;"	m
instr	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	instr {$/;"	m
instr	quarks/cruciallib/Instr/instrSupport.sc	/^	instr { arg ... args;$/;"	m
instr	quarks/cruciallib/Instr/instrSupport.sc	/^	instr { arg ...args;$/;"	m
instrArgFromControl	quarks/cruciallib/Control/MIDIPlayer.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Editors/EnvEditor.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Editors/NumberEditor.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Players/AbstractPlayer.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Players/KrPlayer.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Players/PlayerSocket.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Players/instrSupport.sc	/^	instrArgFromControl { arg control; ^1 }$/;"	m
instrArgFromControl	quarks/cruciallib/Players/instrSupport.sc	/^	instrArgFromControl { arg control; ^control }$/;"	m
instrArgFromControl	quarks/cruciallib/Players/instrSupport.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Scheduling/TempoBus.sc	/^	instrArgFromControl { arg control;$/;"	m
instrArgFromControl	quarks/cruciallib/Sequencers/BusDriver.sc	/^	instrArgFromControl { arg control;$/;"	m
instrGui	quarks/cruciallib/Instr/PatchGui.sc	/^	instrGui { arg layout;$/;"	m
instr_	quarks/cruciallib/Instr/Patch.sc	/^	instr_ { arg newInstr;$/;"	m
integral	SCClassLibrary/Common/Math/Signal.sc	/^	integral { _SignalIntegral; ^this.primitiveFailed }$/;"	m
integrate	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	integrate {$/;"	m
integrate	SCClassLibrary/Common/Streams/Patterns.sc	/^	integrate { ^Plazy { var sum = 0; this.collect { |x| sum = sum + x } } }$/;"	m
integrate	quarks/MathLib/classes/various/integration.sc	/^	integrate { |a, b, d = 1|$/;"	m
integrateSimp	quarks/MathLib/classes/various/integration.sc	/^	integrateSimp { |a, b|$/;"	m
integrateSimpA	quarks/MathLib/classes/various/integration.sc	/^	integrateSimpA { |a, b, eps = 1e-10, sum|$/;"	m
interlace	SCClassLibrary/Common/Collections/Array.sc	/^	interlace { arg clumpSize=1;$/;"	m
interlace	SCClassLibrary/Common/Streams/Stream.sc	/^	interlace { arg function, stream;$/;"	m
internalKeys	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	internalKeys {$/;"	m
interpolation	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	interpolation {$/;"	m
interpolation_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	interpolation_ {|mode|$/;"	m
interpret	SCClassLibrary/Common/Collections/String.sc	/^	interpret { ^thisProcess.interpreter.interpret(this); }$/;"	m
interpret	SCClassLibrary/Common/Core/Kernel.sc	/^	interpret { arg string ... args;$/;"	m
interpretCmdLine	SCClassLibrary/Common/Core/Kernel.sc	/^	interpretCmdLine {$/;"	m
interpretPrint	SCClassLibrary/Common/Collections/String.sc	/^	interpretPrint { ^thisProcess.interpreter.interpretPrint(this); }$/;"	m
interpretPrint	SCClassLibrary/Common/Core/Kernel.sc	/^	interpretPrint { arg string ... args;$/;"	m
interpretPrintCmdLine	SCClassLibrary/Common/Core/Kernel.sc	/^	interpretPrintCmdLine {$/;"	m
interpretPrintSelectedText	SCClassLibrary/Common/Core/Kernel.sc	/^	interpretPrintSelectedText {$/;"	m
intersects	SCClassLibrary/Common/Geometry/Rect.sc	/^	intersects { arg aRect;$/;"	m
invalidateSynthDef	quarks/cruciallib/Instr/Patch.sc	/^	invalidateSynthDef {$/;"	m
inverse	quarks/MathLib/classes/various/Matrix.sc	/^	inverse { \/\/ return the inverse matrix$/;"	m
inverse	quarks/MathLib/classes/various/Trafo.sc	/^	inverse {$/;"	m
invert	SCClassLibrary/Common/Collections/Collection.sc	/^	invert { | axis |$/;"	m
invert	SCClassLibrary/Common/Collections/Dictionary.sc	/^	invert {$/;"	m
invert	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	invert {$/;"	m
invert	SCClassLibrary/Common/Math/Signal.sc	/^	invert { arg beginSamp=0, endSamp;$/;"	m
invokeMethod	SCClassLibrary/QtCollider/QObject.sc	/^  invokeMethod { arg method, arguments, synchronous = true;$/;"	m
ip	SCClassLibrary/Common/Control/NetAddr.sc	/^	ip {$/;"	m
iplay	quarks/cruciallib/Instr/instrSupport.sc	/^	iplay { arg ...args;$/;"	m
ir	SCClassLibrary/Common/Core/Symbol.sc	/^	ir { | val |$/;"	m
isAbsolutePath	SCClassLibrary/Common/Files/PathName.sc	/^	isAbsolutePath {$/;"	m
isAbsolutePath	SCClassLibrary/Platform/windows/SystemOverwrites/overwrites.sc	/^	isAbsolutePath {$/;"	m
isActive	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	isActive { ^this.isPlaying and: { player.streamHasEnded.not } }$/;"	m
isAllocated	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	isAllocated {$/;"	m
isAlpha	SCClassLibrary/Common/Core/Char.sc	/^	isAlpha {$/;"	m
isAlphaNum	SCClassLibrary/Common/Core/Char.sc	/^	isAlphaNum {$/;"	m
isAlphaNum	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	isAlphaNum { ^false }	\/\/ error protection in getIdCoords$/;"	m
isAlt	SCClassLibrary/Common/Math/Integer.sc	/^	isAlt { ^this & 524288 == 524288 }$/;"	m
isAntiSymmetric	quarks/MathLib/classes/various/Matrix.sc	/^	isAntiSymmetric {$/;"	m
isArray	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	isArray { ^true }$/;"	m
isArray	SCClassLibrary/Common/Core/Object.sc	/^	isArray { ^false }$/;"	m
isAudioOut	SCClassLibrary/Common/Control/Bus.sc	/^	isAudioOut { \/\/ audio interface$/;"	m
isBasicOperator	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	isBasicOperator {$/;"	m
isBinomial	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	isBinomial { var n = this.offLow+1, m = this.degree;$/;"	m
isCVS	SCClassLibrary/Common/Files/PathName.sc	/^	isCVS {$/;"	m
isCantorNumber	quarks/MathLib/classes/various/isCantorNumber.sc	/^	isCantorNumber {$/;"	m
isCaps	SCClassLibrary/Common/Math/Integer.sc	/^	isCaps { ^this & 65536 == 65536}$/;"	m
isClassName	SCClassLibrary/Common/Core/Symbol.sc	/^	isClassName {$/;"	m
isClosed	SCClassLibrary/Common/Core/Function.sc	/^	isClosed { ^def.sourceCode.notNil }$/;"	m
isClosed	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	isClosed { ^(view.isNil or: {view.isClosed}) }$/;"	m
isClosed	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	isClosed { ^dataptr.isNil }$/;"	m
isClosed	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	isClosed { ^dataptr.isNil }$/;"	m
isClosed	SCClassLibrary/QtCollider/QView.sc	/^  isClosed {$/;"	m
isClosed	SCClassLibrary/QtCollider/QWindow.sc	/^  isClosed { ^view.isClosed; }$/;"	m
isClosed	quarks/cruciallib/ServerTools/ServerGui.sc	/^	isClosed {$/;"	m
isCmd	SCClassLibrary/Common/Math/Integer.sc	/^	isCmd { ^this & 1048576 == 1048576 }$/;"	m
isCollection	SCClassLibrary/Common/Collections/Collection.sc	/^	isCollection { ^true }$/;"	m
isCollection	SCClassLibrary/Common/Core/Object.sc	/^	isCollection { ^false }$/;"	m
isCompatible	SCClassLibrary/Common/Quarks/Quark.sc	/^	isCompatible { ^info['isCompatible'].value !== false }$/;"	m
isConnected	SCClassLibrary/Common/Control/NetAddr.sc	/^	isConnected {$/;"	m
isControl	SCClassLibrary/Common/Core/Char.sc	/^	isControl {$/;"	m
isControlUGen	SCClassLibrary/Common/Core/Object.sc	/^	isControlUGen { ^false }$/;"	m
isCtrl	SCClassLibrary/Common/Math/Integer.sc	/^	isCtrl { ^this & 262144 == 262144 }$/;"	m
isCurrent	SCClassLibrary/Common/Streams/History.sc	/^	isCurrent { ^this === History.current }$/;"	m
isDecDigit	SCClassLibrary/Common/Core/Char.sc	/^	isDecDigit {$/;"	m
isDiagonal	quarks/MathLib/classes/various/Matrix.sc	/^	isDiagonal { $/;"	m
isEdited	SCClassLibrary/Common/GUI/Document.sc	/^	isEdited {$/;"	m
isEdited	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	isEdited {$/;"	m
isEmpty	SCClassLibrary/Common/Collections/Collection.sc	/^	isEmpty { ^this.size == 0 }$/;"	m
isEmpty	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	isEmpty {$/;"	m
isEmpty	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	isEmpty { ^(nodes.size + pathResponders.size) == 0 }$/;"	m
isEmpty	SCClassLibrary/Common/Control/OSCresponder.sc	/^	isEmpty { ^nodes.size == 0 }$/;"	m
isEmpty	SCClassLibrary/Common/Core/Clock.sc	/^	isEmpty { ^queue.isEmpty }$/;"	m
isEmpty	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	isEmpty { ^value.isNil }$/;"	m
isEmpty	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	isEmpty {$/;"	m
isEventPattern	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	isEventPattern { ^false }$/;"	m
isEventPattern	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	isEventPattern { ^true }$/;"	m
isException	SCClassLibrary/Common/Core/Error.sc	/^	isException { ^true }$/;"	m
isException	SCClassLibrary/Common/Core/Object.sc	/^	isException { ^false }$/;"	m
isExtensionOf	SCClassLibrary/SCDoc/SCDoc.sc	/^    isExtensionOf {|class|$/;"	m
isFile	SCClassLibrary/Common/Files/PathName.sc	/^	isFile {$/;"	m
isFileSafe	SCClassLibrary/Common/Core/Char.sc	/^	isFileSafe {$/;"	m
isFilled_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	isFilled_ { arg abool;$/;"	m
isFilled_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  isFilled_ { arg aBool;$/;"	m
isFilter	quarks/cruciallib/Instr/Instr.sc	/^	isFilter { ^this.specs.any({ |sp| sp == this.outSpec }) }$/;"	m
isFinalized	SCClassLibrary/Common/Core/Finalize.sc	/^	isFinalized { ^cFunction.isNil }$/;"	m
isFloat	SCClassLibrary/Common/Core/Object.sc	/^	isFloat { ^false }$/;"	m
isFloat	SCClassLibrary/Common/Math/Float.sc	/^	isFloat { ^true }$/;"	m
isFolder	SCClassLibrary/Common/Files/PathName.sc	/^	isFolder {$/;"	m
isFront	SCClassLibrary/Common/GUI/Document.sc	/^	isFront {$/;"	m
isFun	SCClassLibrary/Common/Math/Integer.sc	/^	isFun { ^this & 8388608 == 8388608 }$/;"	m
isFunction	SCClassLibrary/Common/Core/Function.sc	/^	isFunction { ^true }$/;"	m
isFunction	SCClassLibrary/Common/Core/Object.sc	/^	isFunction { ^false }$/;"	m
isHelp	SCClassLibrary/Common/Math/Integer.sc	/^	isHelp { ^this & 4194304 == 4194304 }$/;"	m
isIdempotent	quarks/MathLib/classes/various/Matrix.sc	/^	isIdempotent {$/;"	m
isIdentity	quarks/MathLib/classes/various/Matrix.sc	/^	isIdentity {$/;"	m
isInputUGen	SCClassLibrary/Common/Core/Object.sc	/^	isInputUGen { ^false }$/;"	m
isInstalled	SCClassLibrary/Common/Quarks/Quarks.sc	/^	isInstalled { arg name;$/;"	m
isInteger	SCClassLibrary/Common/Core/Object.sc	/^	isInteger { ^false }$/;"	m
isInteger	SCClassLibrary/Common/Math/Integer.sc	/^	isInteger { ^true }$/;"	m
isIntegral	quarks/MathLib/classes/various/Matrix.sc	/^	isIntegral {$/;"	m
isKindOf	SCClassLibrary/Common/Core/Object.sc	/^	isKindOf { arg aClass; _ObjectIsKindOf; ^this.primitiveFailed }$/;"	m
isListener	SCClassLibrary/Common/GUI/Document.sc	/^	isListener {$/;"	m
isLower	SCClassLibrary/Common/Core/Char.sc	/^	isLower {$/;"	m
isMap	SCClassLibrary/Common/Core/Symbol.sc	/^	isMap {$/;"	m
isMapped	quarks/cruciallib/Control/CCBank.sc	/^	isMapped { arg key; ^this.findSet(key).value.notNil }$/;"	m
isMemberOf	SCClassLibrary/Common/Core/Object.sc	/^	isMemberOf { arg aClass; _ObjectIsMemberOf; ^this.primitiveFailed }$/;"	m
isMetaClass	SCClassLibrary/Common/Core/Kernel.sc	/^	isMetaClass { ^this.class === Class }$/;"	m
isMetaClassName	SCClassLibrary/Common/Core/Symbol.sc	/^	isMetaClassName {$/;"	m
isMonitoring	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	isMonitoring {$/;"	m
isMonitoring	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	isMonitoring {$/;"	m
isMonomial	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	isMonomial { var count = 0, i;$/;"	m
isNaN	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	isNaN { ^(this >= 0 or: { this <= 0 }).not }$/;"	m
isNegative	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	isNegative { ^this.performUnaryOp('isNegative') }$/;"	m
isNegative	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	isNegative { ^this.composeUnaryOp('isNegative') }$/;"	m
isNegative	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	isNegative { ^this < 0 }$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	isNeutral {$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	isNeutral { ^false }$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	isNeutral { ^value.isNeutral }$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	isNeutral { ^a.isNeutral && b.isNeutral }$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	isNeutral { ^a.isNeutral }$/;"	m
isNeutral	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	isNeutral { ^true }$/;"	m
isNil	SCClassLibrary/Common/Core/Nil.sc	/^	isNil { ^true }$/;"	m
isNil	SCClassLibrary/Common/Core/Object.sc	/^	isNil { ^false }$/;"	m
isNonNegative	quarks/MathLib/classes/various/Matrix.sc	/^	isNonNegative {$/;"	m
isNormal	quarks/MathLib/classes/various/Matrix.sc	/^	isNormal {$/;"	m
isNull	SCClassLibrary/QtCollider/QTreeView.sc	/^  isNull { ^ id.isNil }$/;"	m
isNumPad	SCClassLibrary/Common/Math/Integer.sc	/^	isNumPad { ^this & 2097152 == 2097152 }$/;"	m
isNumber	SCClassLibrary/Common/Core/Object.sc	/^	isNumber { ^false }$/;"	m
isNumber	SCClassLibrary/Common/Math/Number.sc	/^	isNumber { ^true }$/;"	m
isOpen	SCClassLibrary/Common/Control/SerialPort.sc	/^	isOpen {$/;"	m
isOpen	SCClassLibrary/Common/Control/WII.sc	/^	isOpen {$/;"	m
isOpen	SCClassLibrary/Common/Files/SoundFile.sc	/^	isOpen {$/;"	m
isOpen	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	isOpen {$/;"	m
isOpen	SCClassLibrary/Platform/linux/LID.sc	/^	isOpen {$/;"	m
isOrthogonal	quarks/MathLib/classes/various/Matrix.sc	/^	isOrthogonal {$/;"	m
isOutputUGen	SCClassLibrary/Common/Core/Object.sc	/^	isOutputUGen { ^false }$/;"	m
isPathSeparator	SCClassLibrary/Common/Core/Char.sc	/^	isPathSeparator {$/;"	m
isPathSeparator	SCClassLibrary/Platform/Platform.sc	/^	isPathSeparator { |char| ^this.subclassResponsibility }$/;"	m
isPathSeparator	SCClassLibrary/Platform/Platform.sc	/^	isPathSeparator { |char|$/;"	m
isPathSeparator	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	isPathSeparator { |char|$/;"	m
isPaused	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	isPaused { ^player.isNil or: { player.wasStopped  } }$/;"	m
isPlaying	SCClassLibrary/Common/Core/Nil.sc	/^	isPlaying { ^false }$/;"	m
isPlaying	SCClassLibrary/Common/Core/Object.sc	/^	isPlaying { ^false }$/;"	m
isPlaying	SCClassLibrary/Common/Core/Thread.sc	/^	isPlaying { ^state == 5 }$/;"	m
isPlaying	SCClassLibrary/Common/Streams/Stream.sc	/^	isPlaying { ^stream.notNil }$/;"	m
isPlaying	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	isPlaying { ^player.notNil and: { player.wasStopped.not } }$/;"	m
isPlaying	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	isPlaying {$/;"	m
isPlaying	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	isPlaying { ^group.isPlaying }$/;"	m
isPlaying	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	isPlaying { ^group.isPlaying }$/;"	m
isPlaying	quarks/cruciallib/Instr/InstrSpawner.sc	/^	isPlaying {$/;"	m
isPlaying	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	isPlaying { ^false } \/\/ ^source.isPlaying }$/;"	m
isPlaying	quarks/cruciallib/Players/AbstractPlayer.sc	/^	isPlaying { ^status == \\isPlaying }$/;"	m
isPlaying	quarks/cruciallib/Players/AbstractPlayer.sc	/^	isPlaying { ^synth.isPlaying ? false }$/;"	m
isPlaying	quarks/cruciallib/Players/Patching.sc	/^	isPlaying { ^group.isPlaying }$/;"	m
isPlaying_	SCClassLibrary/Common/Collections/Event.sc	/^	isPlaying_ { arg val;$/;"	m
isPositive	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	isPositive { ^this.performUnaryOp('isPositive') }$/;"	m
isPositive	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	isPositive { ^this.composeUnaryOp('isPositive') }$/;"	m
isPositive	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	isPositive { ^this >= 0 }$/;"	m
isPositive	quarks/MathLib/classes/various/Matrix.sc	/^	isPositive {$/;"	m
isPowerOfTwo	SCClassLibrary/Common/Math/Integer.sc	/^	isPowerOfTwo { _IsPowerOfTwo }$/;"	m
isPrefix	SCClassLibrary/Common/Core/Symbol.sc	/^	isPrefix { | other |$/;"	m
isPrepared	quarks/cruciallib/Players/AbstractPlayer.sc	/^	isPrepared {$/;"	m
isPrepared	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	isPrepared { ^recordBufs.notNil }$/;"	m
isPrime	SCClassLibrary/Common/Math/Integer.sc	/^	isPrime {$/;"	m
isPrimitive	SCClassLibrary/Common/Core/Symbol.sc	/^	isPrimitive {$/;"	m
isPrimitiveName	SCClassLibrary/Common/Core/Symbol.sc	/^	isPrimitiveName {$/;"	m
isPrint	SCClassLibrary/Common/Core/Char.sc	/^	isPrint {$/;"	m
isPunct	SCClassLibrary/Common/Core/Char.sc	/^	isPunct {$/;"	m
isRecording	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	isRecording { ^recordNode.isPlaying }$/;"	m
isRegular	quarks/MathLib/classes/various/Matrix.sc	/^	isRegular {$/;"	m
isRelativePath	SCClassLibrary/Common/Files/PathName.sc	/^	isRelativePath { ^this.isAbsolutePath.not }$/;"	m
isReleased	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	isReleased {$/;"	m
isRest	SCClassLibrary/Common/Collections/Event.sc	/^	isRest {$/;"	m
isRest	SCClassLibrary/Common/Core/Object.sc	/^	isRest { ^false }$/;"	m
isRest	SCClassLibrary/Common/Core/Symbol.sc	/^	isRest { ^this.isMap.not }$/;"	m
isRunning	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  isRunning { ^playThread.notNil }$/;"	m
isRunning_	SCClassLibrary/Common/Collections/Event.sc	/^	isRunning_ { arg val;$/;"	m
isSVN	SCClassLibrary/Common/Files/PathName.sc	/^	isSVN {$/;"	m
isSequenceableCollection	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	isSequenceableCollection { ^true }$/;"	m
isSequenceableCollection	SCClassLibrary/Common/Core/Object.sc	/^	isSequenceableCollection { ^false }$/;"	m
isSettable	SCClassLibrary/Common/Control/Bus.sc	/^	isSettable {$/;"	m
isSetter	SCClassLibrary/Common/Core/Symbol.sc	/^	isSetter {$/;"	m
isShift	SCClassLibrary/Common/Math/Integer.sc	/^	isShift { ^this & 131072 == 131072 }$/;"	m
isSingular	quarks/MathLib/classes/various/Matrix.sc	/^	isSingular {$/;"	m
isSleeping	SCClassLibrary/Platform/Platform.sc	/^	isSleeping { ^false } \/\/ unless defined otherwise$/;"	m
isSleeping	SCClassLibrary/Platform/osx/extMain.sc	/^	isSleeping { ^this.platform.isSleeping }$/;"	m
isSleeping	quarks/cruciallib/Players/PlayerSocket.sc	/^	isSleeping {$/;"	m
isSpace	SCClassLibrary/Common/Core/Char.sc	/^	isSpace {$/;"	m
isSquare	quarks/MathLib/classes/various/Matrix.sc	/^	isSquare {$/;"	m
isStrictlyPositive	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	isStrictlyPositive { ^this.performUnaryOp('isStrictlyPositive') }$/;"	m
isStrictlyPositive	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	isStrictlyPositive { ^this.composeUnaryOp('isStrictlyPositive') }$/;"	m
isStrictlyPositive	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	isStrictlyPositive { ^this > 0 }$/;"	m
isString	SCClassLibrary/Common/Collections/String.sc	/^	isString { ^true }$/;"	m
isString	SCClassLibrary/Common/Core/Object.sc	/^	isString { ^false }$/;"	m
isSubclassOf	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	isSubclassOf {$/;"	m
isSubsetOf	SCClassLibrary/Common/Collections/Collection.sc	/^	isSubsetOf { | that | ^that.includesAll(this) }$/;"	m
isSubsetOf	SCClassLibrary/Common/Collections/Set.sc	/^	isSubsetOf { | that | ^that.includesAll(this) }$/;"	m
isSustained	SCClassLibrary/Common/Audio/Env.sc	/^	isSustained {$/;"	m
isSymmetric	quarks/MathLib/classes/various/Matrix.sc	/^	isSymmetric {$/;"	m
isUGen	SCClassLibrary/Common/Core/Object.sc	/^	isUGen { ^false }$/;"	m
isUpper	SCClassLibrary/Common/Core/Char.sc	/^	isUpper {$/;"	m
isValid	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	isValid {$/;"	m
isValid	SCClassLibrary/QtCollider/QObject.sc	/^  isValid {$/;"	m
isValidUGenInput	SCClassLibrary/Common/Audio/UGen.sc	/^	isValidUGenInput { ^true }$/;"	m
isValidUGenInput	SCClassLibrary/Common/Collections/Array.sc	/^	isValidUGenInput { ^true }$/;"	m
isValidUGenInput	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	isValidUGenInput { ^true }$/;"	m
isValidUGenInput	SCClassLibrary/Common/Core/Object.sc	/^	isValidUGenInput { ^false }$/;"	m
isValidUGenInput	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	isValidUGenInput { ^this.isNaN.not }$/;"	m
isValidUGenInput	quarks/cruciallib/Instr/Instr.sc	/^	isValidUGenInput {$/;"	m
isVowel	SCClassLibrary/Common/Core/Char.sc	/^	isVowel {$/;"	m
isZero	quarks/MathLib/classes/various/Matrix.sc	/^	isZero {$/;"	m
isolate	SCClassLibrary/Common/Streams/Pfx.sc	/^	isolate {$/;"	m
item	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	item {^items.at(this.value).key}$/;"	m
item	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	item {$/;"	m
item	SCClassLibrary/QtCollider/BasicViews.sc	/^  item {$/;"	m
itemAt	SCClassLibrary/QtCollider/QTreeView.sc	/^  itemAt { arg index;$/;"	m
itemCount	SCClassLibrary/Common/Collections/Bag.sc	/^	itemCount { arg item;$/;"	m
itemFunc	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	itemFunc {^items.at(this.value).value}$/;"	m
itemPressedAction_	SCClassLibrary/QtCollider/QTreeView.sc	/^  itemPressedAction_ { arg action;$/;"	m
items_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	items_ { arg array;$/;"	m
items_	SCClassLibrary/QtCollider/BasicViews.sc	/^  items_ { arg stringArray;$/;"	m
iter	SCClassLibrary/Common/Collections/Collection.sc	/^	iter {$/;"	m
iter	SCClassLibrary/Common/Core/Object.sc	/^	iter { ^OneShotStream(this) }$/;"	m
iter	SCClassLibrary/Common/Streams/Patterns.sc	/^	iter { ^this.asStream }$/;"	m
iter	SCClassLibrary/Common/Streams/Stream.sc	/^	iter { ^this }$/;"	m
j0	quarks/MathLib/classes/various/Bessel.sc	/^	j0 {$/;"	m
j1	quarks/MathLib/classes/various/Bessel.sc	/^	j1 {$/;"	m
jarqueBera	quarks/MathLib/classes/statistics/extStatistics.sc	/^	jarqueBera { |skewness, kurtosis, n|$/;"	m
jn	quarks/MathLib/classes/various/Bessel.sc	/^	jn { |n|$/;"	m
join	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	join { arg joiner;$/;"	m
join	SCClassLibrary/Common/Control/Engine.sc	/^	join { |block|$/;"	m
keep	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	keep { arg n;$/;"	m
keep	SCClassLibrary/Common/Streams/History.sc	/^	keep { |num|$/;"	m
keep	SCClassLibrary/Common/Streams/Patterns.sc	/^	keep { arg n; ^Pfin(n, this) }$/;"	m
keepHorizontalOrder	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  keepHorizontalOrder {$/;"	m
keepHorizontalOrder_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  keepHorizontalOrder_ { arg bool;$/;"	m
kendallW	quarks/MathLib/classes/statistics/extStatistics.sc	/^	kendallW { |postChiSq=true|$/;"	m
key	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	key { | envir |$/;"	m
keyAt	SCClassLibrary/Common/Collections/Set.sc	/^	keyAt { arg index; ^array.at(index) }$/;"	m
keyDown	SCClassLibrary/Common/GUI/Document.sc	/^	keyDown { | character, modifiers, unicode, keycode |$/;"	m
keyDown	SCClassLibrary/Common/GUI/PlusGUI/Core/ObjectPlusGUI.sc	/^	keyDown { }$/;"	m
keyDown	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	keyDown { arg char, modifiers, unicode,keycode;$/;"	m
keyDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	keyDown { arg char, modifiers, unicode, keycode;$/;"	m
keyDown	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	keyDown { |c,u|$/;"	m
keyDown	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	keyDown { arg char;$/;"	m
keyDown	SCClassLibrary/QtCollider/QStethoscope.sc	/^  keyDown { arg char;$/;"	m
keyDown	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  keyDown { arg char, mod;$/;"	m
keyDown	SCClassLibrary/QtCollider/QView.sc	/^  keyDown { arg char, modifiers, unicode, keycode, key;$/;"	m
keyDownAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	keyDownAction { arg view, key, modifiers, unicode;$/;"	m
keyDownAction_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	keyDownAction_ { arg f;$/;"	m
keyDownAction_	SCClassLibrary/QtCollider/QView.sc	/^  keyDownAction_ { arg aFunction;$/;"	m
keyDownEvent	SCClassLibrary/QtCollider/QView.sc	/^  keyDownEvent { arg char, modifiers, unicode, keycode, key, spontaneous;$/;"	m
keyDownFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	keyDownFunc {$/;"	m
keyDownFunc_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	keyDownFunc_ { |action|$/;"	m
keyDownResponder	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	keyDownResponder { ^nil }$/;"	m
keyDownResponder	quarks/cruciallib/Gui/CXMenu.sc	/^	keyDownResponder {$/;"	m
keyDownResponder	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	keyDownResponder {$/;"	m
keyModifiersChanged	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	keyModifiersChanged { arg modifiers;$/;"	m
keyModifiersChanged	SCClassLibrary/QtCollider/QView.sc	/^  keyModifiersChanged { arg modifiers;$/;"	m
keyModifiersChangedAction_	SCClassLibrary/QtCollider/QView.sc	/^  keyModifiersChangedAction_ { arg aFunction;$/;"	m
keyPut	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	keyPut { arg key, item;$/;"	m
keyToDegree	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	keyToDegree { arg scale, stepsPerOctave=12;$/;"	m
keyToDegree	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	keyToDegree { arg scale, stepsPerOctave=12;$/;"	m
keyUp	SCClassLibrary/Common/GUI/Document.sc	/^	keyUp { | character, modifiers, unicode, keycode |$/;"	m
keyUp	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	keyUp { arg char, modifiers, unicode,keycode;$/;"	m
keyUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	keyUp { arg char, modifiers, unicode, keycode;$/;"	m
keyUp	SCClassLibrary/QtCollider/QView.sc	/^  keyUp { arg char, modifiers, unicode, keycode, key;$/;"	m
keyUpAction_	SCClassLibrary/QtCollider/QView.sc	/^  keyUpAction_ { arg aFunction;$/;"	m
keyUpEvent	SCClassLibrary/QtCollider/QView.sc	/^  keyUpEvent { arg char, modifiers, unicode, keycode, key, spontaneous;$/;"	m
keys	SCClassLibrary/Common/Collections/Dictionary.sc	/^	keys { arg species(Set);$/;"	m
keys	quarks/cruciallib/Control/CCBank.sc	/^	keys {$/;"	m
keysDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	keysDo { arg function;$/;"	m
keysValuesArrayDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	keysValuesArrayDo { arg argArray, function;$/;"	m
keysValuesArrayDo	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	keysValuesArrayDo { arg argArray, function;$/;"	m
keysValuesChange	SCClassLibrary/Common/Collections/Dictionary.sc	/^	keysValuesChange { arg function;$/;"	m
keysValuesDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	keysValuesDo { arg function;$/;"	m
keysValuesDo	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	keysValuesDo { arg function;$/;"	m
keysValuesDo	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	keysValuesDo { arg function;$/;"	m
keysValuesDo	SCClassLibrary/Common/Collections/SparseArray.sc	/^	keysValuesDo { arg function;$/;"	m
keysValuesDo	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	keysValuesDo { arg function;$/;"	m
keywordWarnings	SCClassLibrary/Common/Core/Boolean.sc	/^	keywordWarnings {$/;"	m
kill	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	kill {$/;"	m
killAll	SCClassLibrary/Platform/Platform.sc	/^	killAll { |cmdLineArgs|$/;"	m
killAll	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	killAll { |cmdLineArgs|$/;"	m
knobColor	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	knobColor {$/;"	m
knobColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	knobColor {$/;"	m
knobColor	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  knobColor { ^this.getProperty(\\knobColor) }$/;"	m
knobColor	SCClassLibrary/QtCollider/QSlider.sc	/^  knobColor { ^this.getProperty(\\knobColor) }$/;"	m
knobColor	SCClassLibrary/QtCollider/QSlider2D.sc	/^  knobColor { ^this.getProperty(\\knobColor) }$/;"	m
knobColor_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	knobColor_ { arg color;$/;"	m
knobColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	knobColor_ { arg color;$/;"	m
knobColor_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  knobColor_ { arg color; this.setProperty(\\knobColor, color) }$/;"	m
knobColor_	SCClassLibrary/QtCollider/QSlider.sc	/^  knobColor_ { arg color; this.setProperty(\\knobColor, color) }$/;"	m
knobColor_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  knobColor_ { arg color; this.setProperty(\\knobColor, color) }$/;"	m
know	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     know { ^envir.know }$/;"	m
know_	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     know_ { arg flag; envir.know = flag }$/;"	m
kr	SCClassLibrary/Common/Audio/Env.sc	/^	kr { arg doneAction = 0, gate = 1.0, timeScale = 1.0, mul = 1.0, add = 0.0;$/;"	m
kr	SCClassLibrary/Common/Control/Bus.sc	/^	kr { |numChannels=(this.numChannels), offset=0|$/;"	m
kr	SCClassLibrary/Common/Core/Symbol.sc	/^	kr { | val, lag, fixedLag = false |$/;"	m
kr	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	kr { | numChannels, offset = 0 |$/;"	m
kr	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	kr { arg key=\\out, numChannels, offset=0;$/;"	m
kr	quarks/cruciallib/Instr/Instr.sc	/^	kr { arg ... args; ^this.value(args) }$/;"	m
kr	quarks/cruciallib/Instr/Instr.sc	/^	kr { arg ... args; ^this.valueArray(args) }$/;"	m
kr	quarks/cruciallib/Instr/Instr.sc	/^	kr { arg ... inputs;$/;"	m
kr	quarks/cruciallib/Instr/instrSupport.sc	/^	kr { arg ... args;$/;"	m
kr	quarks/cruciallib/Players/AbstractPlayer.sc	/^	kr { ^this.ar }$/;"	m
kr	quarks/cruciallib/Players/TempoPlayer.sc	/^	kr {$/;"	m
kr	quarks/cruciallib/Scheduling/Tempo.sc	/^	kr { ^TempoPlayer(this).kr }$/;"	m
kr	quarks/cruciallib/Sequencers/BusDriver.sc	/^	kr {$/;"	m
krNames	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	krNames { ^prevState[\\krNames] }$/;"	m
krProxyNames	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	krProxyNames { |func=true| ^this.proxyNames(\\control, func) }$/;"	m
kurtosis	quarks/MathLib/classes/statistics/extStatistics.sc	/^	kurtosis { arg mean;	\/\/ supply mean if known$/;"	m
labelColor_	quarks/cruciallib/Gui/ActionButton.sc	/^	labelColor_ { arg color;$/;"	m
label_	quarks/cruciallib/Gui/ActionButton.sc	/^	label_ { arg string;$/;"	m
label_	quarks/cruciallib/Gui/CXLabel.sc	/^	label_ { arg string;$/;"	m
lace	SCClassLibrary/Common/Collections/Array.sc	/^	lace { arg length;$/;"	m
lace	SCClassLibrary/Common/Collections/List.sc	/^	lace { arg length;$/;"	m
lag	SCClassLibrary/Common/Audio/UGen.sc	/^	lag { arg t1=0.1, t2;$/;"	m
lag	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lag { arg ... args; ^this.multiChannelPerform('lag', *args) }$/;"	m
lag	SCClassLibrary/Common/Streams/Patterns.sc	/^	lag { arg t; ^Plag(t, this) }$/;"	m
lag	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	lag { | ... args |$/;"	m
lag2	SCClassLibrary/Common/Audio/UGen.sc	/^	lag2 { arg t1=0.1, t2;$/;"	m
lag2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lag2 { arg ... args; ^this.multiChannelPerform('lag2', *args) }$/;"	m
lag2ud	SCClassLibrary/Common/Audio/UGen.sc	/^	lag2ud { arg lagTimeU=0.1, lagTimeD=0.1;$/;"	m
lag2ud	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lag2ud { arg ... args; ^this.multiChannelPerform('lag2ud', *args) }$/;"	m
lag2ud	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	lag2ud { ^this }$/;"	m
lag3	SCClassLibrary/Common/Audio/UGen.sc	/^	lag3 { arg t1=0.1, t2;$/;"	m
lag3	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lag3 { arg ... args; ^this.multiChannelPerform('lag3', *args) }$/;"	m
lag3ud	SCClassLibrary/Common/Audio/UGen.sc	/^	lag3ud { arg lagTimeU=0.1, lagTimeD=0.1;$/;"	m
lag3ud	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lag3ud { arg ... args; ^this.multiChannelPerform('lag3ud', *args) }$/;"	m
lag3ud	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	lag3ud { ^this }$/;"	m
lag_	SCClassLibrary/Common/Control/Volume.sc	/^	lag_ { arg aLagTime;$/;"	m
lagud	SCClassLibrary/Common/Audio/UGen.sc	/^	lagud { arg lagTimeU=0.1, lagTimeD=0.1;$/;"	m
lagud	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lagud { arg ... args; ^this.multiChannelPerform('lagud', *args) }$/;"	m
laguerre	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	laguerre { arg z; var n = this.size-1, j, k, maxIter = 20, ca, ca2, cb, c1, c2, cc, $/;"	m
largestFreeBlock	SCClassLibrary/Common/Core/Object.sc	/^	largestFreeBlock { _LargestFreeBlock }$/;"	m
last	SCClassLibrary/Common/Collections/List.sc	/^	last { if (this.size > 0, { ^array.at(this.size - 1) }, { ^nil }) }$/;"	m
last	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	last { if (this.size > 0, { ^this.at(this.size - 1) }, { ^nil }) }$/;"	m
lastColonIndex	SCClassLibrary/Common/Files/PathName.sc	/^	lastColonIndex {$/;"	m
lastForWhich	SCClassLibrary/Common/Collections/Collection.sc	/^	lastForWhich { | function |$/;"	m
lastIndex	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lastIndex { ^if(this.size > 0) { this.size - 1 } { nil } }$/;"	m
lastIndex	SCClassLibrary/Common/Collections/SparseArray.sc	/^	lastIndex { ^indices.last }$/;"	m
lastIndex	SCClassLibrary/Common/Collections/SparseArray.sc	/^	lastIndex {$/;"	m
lastIndex	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	lastIndex {$/;"	m
lastIndex	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	lastIndex {$/;"	m
lastIndex	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  lastIndex { ^this.getProperty( \\lastIndex ); }$/;"	m
lastIndexForWhich	SCClassLibrary/Common/Collections/Collection.sc	/^	lastIndexForWhich { | function |$/;"	m
lastValue	SCClassLibrary/Common/Streams/Stream.sc	/^	lastValue { ^value }$/;"	m
layRight	quarks/cruciallib/deprecated-3.5.sc	/^	layRight { arg w,h; $/;"	m
layout	SCClassLibrary/Common/Geometry/Rect.sc	/^	layout { arg argBounds;$/;"	m
layout	SCClassLibrary/QtCollider/QWindow.sc	/^  layout { ^view.layout; }$/;"	m
layout_	SCClassLibrary/QtCollider/QView.sc	/^  layout_ { arg newLayout;$/;"	m
layout_	SCClassLibrary/QtCollider/QWindow.sc	/^  layout_ { arg layout; view.layout_(layout); }$/;"	m
lcm	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lcm { arg aNumber, adverb; ^this.performBinaryOp('lcm', aNumber, adverb) }$/;"	m
lcm	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	lcm { arg function, adverb; ^this.composeBinaryOp('lcm', function, adverb) }$/;"	m
lcm	SCClassLibrary/Common/Core/Symbol.sc	/^	lcm { ^this }$/;"	m
lcm	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	lcm { arg aNumber, adverb; _LCM; ^aNumber.performBinaryOpOnSimpleNumber('lcm', this, adverb) }$/;"	m
lcurve	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	lcurve { arg a = 1.0, m = 0.0, n = 1.0, tau = 1.0;$/;"	m
leadingZeroes	SCClassLibrary/Common/Math/Integer.sc	/^	leadingZeroes { _CLZ }$/;"	m
leafDo	SCClassLibrary/Common/Collections/Library.sc	/^	leafDo {$/;"	m
leafDoFrom	SCClassLibrary/Common/Collections/Library.sc	/^	leafDoFrom {$/;"	m
leafDoInBranch	SCClassLibrary/Common/Collections/Library.sc	/^	leafDoInBranch {$/;"	m
learn	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	learn {$/;"	m
leaves	SCClassLibrary/Common/Collections/Library.sc	/^	leaves { arg startAt;$/;"	m
leftBottom	SCClassLibrary/Common/Geometry/Rect.sc	/^	leftBottom { ^Point.new(this.left, this.bottom) }$/;"	m
leftShift	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	leftShift { arg aNumber, adverb; ^this.performBinaryOp('leftShift', aNumber, adverb) }$/;"	m
leftShift	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	leftShift { arg function, adverb; ^this.composeBinaryOp('leftShift', function, adverb) }$/;"	m
leftShift	SCClassLibrary/Common/Core/Symbol.sc	/^	leftShift { ^this }$/;"	m
leftShift	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	leftShift { arg aNumber=1, adverb; _ShiftLeft; ^aNumber.performBinaryOpOnSimpleNumber('leftShift', this, adverb) }$/;"	m
leftTop	SCClassLibrary/Common/Geometry/Rect.sc	/^	leftTop { ^Point.new(this.left, this.top) }$/;"	m
legato	SCClassLibrary/Common/Streams/Patterns.sc	/^	legato { arg x; ^Pmulp(\\legato, x, this) }$/;"	m
length	SCClassLibrary/Common/Files/File.sc	/^	length { \/\/ returns the length of the file$/;"	m
levels	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	levels { |x, y|$/;"	m
levels	quarks/cruciallib/Editors/EnvEditor.sc	/^	levels { ^value.levels }$/;"	m
levels_	SCClassLibrary/Common/Audio/Env.sc	/^	levels_ { arg z;$/;"	m
limit_	quarks/cruciallib/Players/PlayerSocket.sc	/^	limit_ { |boo|$/;"	m
lincurve	SCClassLibrary/Common/Audio/UGen.sc	/^	lincurve { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
lincurve	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	lincurve { arg ... args; ^this.multiChannelPerform('lincurve', *args) }$/;"	m
lincurve	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	lincurve { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
lincurve	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	lincurve { arg inMin = 0, inMax = 1, outMin = 0, outMax = 1, curve = -4, clip = \\minmax;$/;"	m
lineHeight	SCClassLibrary/Common/GUI/Inspector.sc	/^	lineHeight { ^20 }$/;"	m
linear	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	linear { |x, y|$/;"	m
lines_	SCClassLibrary/Common/Streams/History.sc	/^	lines_ { |inLines|$/;"	m
linexp	SCClassLibrary/Common/Audio/Demand.sc	/^	linexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linexp	SCClassLibrary/Common/Audio/UGen.sc	/^	linexp { arg inMin, inMax, outMin, outMax, clip = \\minmax;$/;"	m
linexp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	linexp { arg ... args; ^this.multiChannelPerform('linexp', *args) }$/;"	m
linexp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	linexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linexp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	linexp { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linkActivated	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	linkActivated {|linkString| onLinkActivated.value(this, linkString) }$/;"	m
linkAtClickPos	SCClassLibrary/Common/GUI/Document.sc	/^	linkAtClickPos { | clickPos |$/;"	m
linkAtClickPos	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	linkAtClickPos { arg clickPos;$/;"	m
linkDoc	SCClassLibrary/Common/Collections/Environment.sc	/^	linkDoc { arg doc, pushNow = true;$/;"	m
linkDoc	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     linkDoc { arg doc, pushNow=true;$/;"	m
linkNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	linkNodeMap {$/;"	m
linlin	SCClassLibrary/Common/Audio/Demand.sc	/^ 	linlin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linlin	SCClassLibrary/Common/Audio/UGen.sc	/^	linlin { arg inMin, inMax, outMin, outMax, clip = \\minmax;$/;"	m
linlin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	linlin { arg ... args; ^this.multiChannelPerform('linlin', *args) }$/;"	m
linlin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	linlin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linlin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	linlin { arg inMin, inMax, outMin, outMax, clip=\\minmax;$/;"	m
linrand	SCClassLibrary/Common/Collections/Harmonics.sc	/^	linrand { arg lo=0.0, hi=1.0;$/;"	m
linrand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	linrand { ^this.performUnaryOp('linrand') }$/;"	m
linrand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	linrand { ^this.composeUnaryOp('linrand') }$/;"	m
linrand	SCClassLibrary/Common/Core/Symbol.sc	/^	linrand { ^this }$/;"	m
linrand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	linrand { _LinRand; ^this.primitiveFailed }$/;"	m
listAvailable	SCClassLibrary/Common/Quarks/Quarks.sc	/^	listAvailable {$/;"	m
listCheckedOut	SCClassLibrary/Common/Quarks/Quarks.sc	/^	listCheckedOut {$/;"	m
listInstalled	SCClassLibrary/Common/Quarks/Quarks.sc	/^	listInstalled {$/;"	m
listSendBundle	SCClassLibrary/Common/Control/Server.sc	/^ 	listSendBundle { arg time, msgs;$/;"	m
listSendMsg	SCClassLibrary/Common/Control/Server.sc	/^	listSendMsg { arg msg;$/;"	m
liveRecord	quarks/cruciallib/Players/PlayerRecorder.sc	/^	liveRecord { arg path,onComplete,atTime;$/;"	m
lo	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	lo {$/;"	m
lo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	lo {$/;"	m
lo	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  lo {$/;"	m
lo_	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	lo_ { |val|$/;"	m
lo_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	lo_ { arg val;$/;"	m
lo_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	lo_ { arg val;$/;"	m
lo_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  lo_ { arg aFloat;$/;"	m
load	SCClassLibrary/Common/Audio/SynthDef.sc	/^	load { arg server, completionMsg, dir(synthDefDir);$/;"	m
load	SCClassLibrary/Common/Collections/String.sc	/^	load {$/;"	m
load	SCClassLibrary/Common/Control/Module.sc	/^	load {$/;"	m
load	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  load { arg filename, startframe, frames, block, doneAction;$/;"	m
load	quarks/cruciallib/Players/pathUtilities.sc	/^	load { arg obj, warnIfNotFound=true;$/;"	m
load	quarks/cruciallib/Sample/Sample.sc	/^	load { arg thing,tempo,argStartFrame = 0,argEndFrame = -1;$/;"	m
loadBuffersToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	loadBuffersToBundle {}$/;"	m
loadBuffersToBundle	quarks/cruciallib/Players/SFP/SFP.sc	/^	loadBuffersToBundle { arg bundle;$/;"	m
loadCS	SCClassLibrary/Common/Streams/History.sc	/^	loadCS { |path, forward=false|$/;"	m
loadCollection	SCClassLibrary/Common/Control/Buffer.sc	/^	loadCollection { arg collection, startFrame = 0, action;$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	loadDefFileToBundle { arg b,server;$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	loadDefFileToBundle { arg bundle,server;$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	loadDefFileToBundle { }$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	loadDefFileToBundle { arg bundle,server;}$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/TempoPlayer.sc	/^	loadDefFileToBundle {}$/;"	m
loadDefFileToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	loadDefFileToBundle {}$/;"	m
loadDialog	quarks/cruciallib/Sample/SampleGui.sc	/^	loadDialog {$/;"	m
loadDirectory	SCClassLibrary/Common/Control/Server.sc	/^	loadDirectory { arg dir, completionMsg;$/;"	m
loadDocument	quarks/cruciallib/Players/pathUtilities.sc	/^	loadDocument { arg warnIfNotFound=true;$/;"	m
loadDocument	quarks/cruciallib/Players/pathUtilities.sc	/^	loadDocument {$/;"	m
loadDocument	quarks/cruciallib/Players/pathUtilities.sc	/^	loadDocument {}$/;"	m
loadPath	quarks/cruciallib/Players/pathUtilities.sc	/^	loadPath { arg warnIfNotFound=true;$/;"	m
loadPath	quarks/cruciallib/Players/pathUtilities.sc	/^	loadPath {}$/;"	m
loadPaths	SCClassLibrary/Common/Collections/String.sc	/^	loadPaths { |warn=true|$/;"	m
loadPixels	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	loadPixels {arg array, region=nil, start=0;$/;"	m
loadReconstructed	SCClassLibrary/Common/Audio/SynthDef.sc	/^	loadReconstructed { arg server, completionMsg;$/;"	m
loadRelative	SCClassLibrary/Common/Collections/String.sc	/^	loadRelative {$/;"	m
loadStartupFiles	SCClassLibrary/Platform/Platform.sc	/^	loadStartupFiles { this.startupFiles.do{|afile|$/;"	m
loadStory	SCClassLibrary/Common/Streams/History.sc	/^	loadStory { |path|$/;"	m
loadSubject	quarks/cruciallib/Instr/Patch.sc	/^	loadSubject { arg name;$/;"	m
loadSynthDef	SCClassLibrary/Common/Control/Server.sc	/^	loadSynthDef { arg name, completionMsg, dir;$/;"	m
loadToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	loadToBundle { | bundle |$/;"	m
loadToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	loadToBundle { | bundle, server |$/;"	m
loadToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	loadToBundle {} \/\/ assumes that SynthDef is loaded in the server$/;"	m
loadToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	loadToBundle {}$/;"	m
loadToFloatArray	SCClassLibrary/Common/Control/Buffer.sc	/^	loadToFloatArray { arg index = 0, count = -1, action;$/;"	m
loadToFloatArray	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	loadToFloatArray { arg duration = 0.01, server, action;$/;"	m
localPut	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	localPut { arg key, obj;$/;"	m
localtime	SCClassLibrary/Common/Math/Date.sc	/^	localtime {$/;"	m
lock	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^	lock { arg n=1;$/;"	m
lockFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	lockFocus {$/;"	m
log	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	log { ^this.performUnaryOp('log') }$/;"	m
log	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	log { ^this.composeUnaryOp('log') }$/;"	m
log	SCClassLibrary/Common/Core/Symbol.sc	/^	log { ^this }$/;"	m
log	SCClassLibrary/Common/Math/Signal.sc	/^	log { _Log; ^this.primitiveFailed }$/;"	m
log	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	log { _Log; ^this.primitiveFailed }$/;"	m
log10	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	log10 { ^this.performUnaryOp('log10') }$/;"	m
log10	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	log10 { ^this.composeUnaryOp('log10') }$/;"	m
log10	SCClassLibrary/Common/Core/Symbol.sc	/^	log10 { ^this }$/;"	m
log10	SCClassLibrary/Common/Math/Signal.sc	/^	log10 { _Log10; ^this.primitiveFailed }$/;"	m
log10	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	log10 { _Log10; ^this.primitiveFailed }$/;"	m
log2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	log2 { ^this.performUnaryOp('log2') }$/;"	m
log2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	log2 { ^this.composeUnaryOp('log2') }$/;"	m
log2	SCClassLibrary/Common/Core/Symbol.sc	/^	log2 { ^this }$/;"	m
log2	SCClassLibrary/Common/Math/Signal.sc	/^	log2 { _Log2; ^this.primitiveFailed }$/;"	m
log2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	log2 { _Log2; ^this.primitiveFailed }$/;"	m
log2Ceil	SCClassLibrary/Common/Math/Integer.sc	/^	log2Ceil { _Log2Ceil }$/;"	m
longDesc	SCClassLibrary/Common/Quarks/Quark.sc	/^	longDesc {$/;"	m
lookUp	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	lookUp { arg key;$/;"	m
lookupClass	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	lookupClass { ^Pdef }$/;"	m
lookupClass	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	lookupClass { ^Pdefn }$/;"	m
loop	SCClassLibrary/Common/Audio/Env.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Core/Function.sc	/^		loop { this.value };$/;"	m
loop	SCClassLibrary/Common/Core/Function.sc	/^	loop {$/;"	m
loop	SCClassLibrary/Common/Core/Object.sc	/^	loop { ^this.repeat(inf) }$/;"	m
loop	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^					loop {$/;"	m
loop	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^				loop {$/;"	m
loop	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/FuncStreamAsRoutine.sc	/^			loop {$/;"	m
loop	SCClassLibrary/Common/Streams/ListPatterns.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Patterns.sc	/^			loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Patterns.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Pfx.sc	/^		 loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Pfx.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Ppar.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Pproto.sc	/^		loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Rest.sc	/^			loop {$/;"	m
loop	SCClassLibrary/Common/Streams/Stream.sc	/^			loop {$/;"	m
loop	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^			loop {$/;"	m
loop	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^			loop {$/;"	m
loop	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^		loop {$/;"	m
loop	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^					loop {$/;"	m
loop	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^				loop {$/;"	m
loop	quarks/MathLib/classes/patterns/P3n1.sc	/^		loop {$/;"	m
loop	quarks/cruciallib/Gui/Updater.sc	/^		loop {$/;"	m
loop	quarks/cruciallib/Instr/InstrSynthDef.sc	/^		loop {$/;"	m
loopNode_	SCClassLibrary/Common/Audio/Env.sc	/^	loopNode_ { arg z;$/;"	m
looseRange	SCClassLibrary/Common/GUI/ControlModel.sc	/^	looseRange { |data, defaultRange = 1.0|$/;"	m
looseRange	SCClassLibrary/Common/GUI/Grid.sc	/^	looseRange { arg min,max,ntick=5;$/;"	m
low32Bits	SCClassLibrary/Common/Math/Float.sc	/^	low32Bits { _Low32Bits }$/;"	m
lowerTriangularInverse	quarks/MathLib/classes/various/LinearSystem.sc	/^	lowerTriangularInverse { var lu = this.deepCopy, n = this.cols, i, j, k, sum;$/;"	m
lowerTriangularSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	lowerTriangularSolve { arg b; var n = this.cols, i, k, x = Array.newClear(n);$/;"	m
madd	SCClassLibrary/Common/Audio/UGen.sc	/^ 	madd { arg mul = 1.0, add = 0.0;$/;"	m
madd	SCClassLibrary/Common/Collections/Array.sc	/^	madd { arg mul = 1.0, add = 0.0;$/;"	m
magnitude	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	magnitude { ^this.performUnaryOp('magnitude') }$/;"	m
magnitude	SCClassLibrary/Common/Math/Complex.sc	/^	magnitude { ^hypot(real, imag) }$/;"	m
magnitude	SCClassLibrary/Common/Math/Polar.sc	/^	magnitude { ^rho }$/;"	m
magnitude	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	magnitude { ^this.abs }$/;"	m
magnitude	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	magnitude { ^rho }$/;"	m
magnitudeApx	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	magnitudeApx { ^this.performUnaryOp('magnitudeApx') }$/;"	m
magnitudeApx	SCClassLibrary/Common/Math/Complex.sc	/^	magnitudeApx { ^hypotApx(real, imag) }$/;"	m
make	SCClassLibrary/Common/Collections/Environment.sc	/^	make { arg function;$/;"	m
make	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	make { arg function;$/;"	m
makeArZone	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	makeArZone {$/;"	m
makeArZone	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeArZone {$/;"	m
makeArZoneHead	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeArZoneHead {$/;"	m
makeAvailable	SCClassLibrary/Common/Audio/UGen.sc	/^	makeAvailable {$/;"	m
makeBody	SCClassLibrary/Common/GUI/Inspector.sc	/^	makeBody {$/;"	m
makeBody	SCClassLibrary/Common/GUI/Inspector.sc	/^	makeBody {}$/;"	m
makeBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	makeBounds { arg size = 223; ^Rect(297, 5, size, size) }$/;"	m
makeBounds	SCClassLibrary/QtCollider/QStethoscope.sc	/^  makeBounds { arg size = 223; ^Rect(297, 5, size, size) }$/;"	m
makeBundle	SCClassLibrary/Common/Control/Server.sc	/^	makeBundle { arg time, func, bundle;$/;"	m
makeBusArg	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	makeBusArg {$/;"	m
makeButFuncs	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeButFuncs { |options, height|$/;"	m
makeButtonFuncs	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeButtonFuncs {$/;"	m
makeButtons	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	makeButtons {$/;"	m
makeClock	quarks/cruciallib/Scheduling/Tempo.sc	/^	makeClock { arg owner;$/;"	m
makeClrBut	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeClrBut { |width, height|$/;"	m
makeClrBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeClrBut { |width, height|$/;"	m
makeCurrent	SCClassLibrary/Common/Streams/History.sc	/^	makeCurrent { History.current = this; hasMovedOn = true }$/;"	m
makeDocBut	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeDocBut { |width, height|$/;"	m
makeDocBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeDocBut { |width, height|$/;"	m
makeEdBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeEdBut { |width, height|$/;"	m
makeEditZone	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	makeEditZone {$/;"	m
makeEditZone	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeEditZone {$/;"	m
makeEmpty	SCClassLibrary/Common/Collections/Set.sc	/^	makeEmpty { this.clear; }$/;"	m
makeEmpty	SCClassLibrary/Common/Collections/SparseArray.sc	/^	makeEmpty { this.clear }$/;"	m
makeEndBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeEndBut { |width, height|$/;"	m
makeEnvirFromArgs	SCClassLibrary/Common/Core/Kernel.sc	/^	makeEnvirFromArgs {$/;"	m
makeEnvirGui	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	makeEnvirGui { |lineWidth, height|$/;"	m
makeEnvirValPairs	SCClassLibrary/Common/Collections/Collection.sc	/^	makeEnvirValPairs {$/;"	m
makeFade	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makeFade { |width = 60, height = 18|$/;"	m
makeFadeBox	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeFadeBox { |width = 60, height = 18|$/;"	m
makeFlopFunc	SCClassLibrary/Common/Core/Function.sc	/^	makeFlopFunc {$/;"	m
makeGenFunc	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	makeGenFunc {$/;"	m
makeGui	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^	makeGui { arg w;$/;"	m
makeGui	SCClassLibrary/Common/GUI/PlusGUI/Control/SynthDescPlusGUI.sc	/^	makeGui {$/;"	m
makeHead	SCClassLibrary/Common/GUI/Inspector.sc	/^	makeHead {$/;"	m
makeKnowBut	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeKnowBut { |width, height|$/;"	m
makeKrZone	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	makeKrZone {$/;"	m
makeKrZone	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeKrZone {$/;"	m
makeMethodList	SCClassLibrary/SCDoc/SCDoc.sc	/^    makeMethodList {$/;"	m
makeMonitor	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeMonitor { |width, height, npOptions|$/;"	m
makeMorph	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeMorph {$/;"	m
makeMsgFunc	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	makeMsgFunc {$/;"	m
makeNameView	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeNameView { |nameWid, height|$/;"	m
makeNameView	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makeNameView { |width, height|$/;"	m
makeNameView	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeNameView { |nameWid, height|$/;"	m
makeOptionalViews	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeOptionalViews { |options, height = 20|$/;"	m
makeParentBut	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeParentBut { |width, height|$/;"	m
makePatchOut	quarks/cruciallib/Editors/NumberEditor.sc	/^	makePatchOut {$/;"	m
makePatchOut	quarks/cruciallib/Players/AbstractPlayer.sc	/^	makePatchOut { arg agroup,private = false,bus,bundle;$/;"	m
makePatchOut	quarks/cruciallib/Players/Silence.sc	/^	makePatchOut { arg agroup,private = false,bus,bundle;$/;"	m
makePatchOut	quarks/cruciallib/Players/TempoPlayer.sc	/^	makePatchOut {$/;"	m
makePatchOut	quarks/cruciallib/Players/instrSupport.sc	/^	makePatchOut {}$/;"	m
makePatchOut	quarks/cruciallib/Sample/Sample.sc	/^	makePatchOut {$/;"	m
makePath	quarks/cruciallib/Players/PlayerRecorder.sc	/^	makePath {$/;"	m
makePauseBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makePauseBut { |width, height|$/;"	m
makePlayNDialogBut	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makePlayNDialogBut { |playNDWid, height|$/;"	m
makePlayOut	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makePlayOut { |playWid, outWid, height|$/;"	m
makePlots	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	makePlots {$/;"	m
makePollBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makePollBut { |width, height|$/;"	m
makeProtoBut	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeProtoBut { |width, height|$/;"	m
makeProxy	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	makeProxy {$/;"	m
makeProxy	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	makeProxy {$/;"	m
makeProxyControl	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	makeProxyControl { ^this.deepCopy } \/\/already wrapped, but needs to be copied$/;"	m
makeProxyControl	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	makeProxyControl { arg channelOffset=0;$/;"	m
makePxMon	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makePxMon {$/;"	m
makeResetBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeResetBut { |width, height|$/;"	m
makeResourcesToBundle	quarks/cruciallib/Instr/InstrSpawner.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	makeResourcesToBundle {}$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/HasSubject.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/PlayerMixer.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeResourcesToBundle	quarks/cruciallib/Players/TempoPlayer.sc	/^	makeResourcesToBundle { arg bundle;$/;"	m
makeRipBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeRipBut { |width, height|$/;"	m
makeRule	quarks/MathLib/classes/patterns/P3n1.sc	/^	makeRule { arg argMod, argMuls, argAdds;$/;"	m
makeScopeBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeScopeBut { |width, height|$/;"	m
makeScore	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	makeScore { | stream, duration = 1, event, timeOffset = 0|$/;"	m
makeScroller	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	makeScroller {$/;"	m
makeSeeds	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	makeSeeds { $/;"	m
makeSendBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeSendBut { |width, height|$/;"	m
makeSinksSliders	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeSinksSliders { |bigSinks|$/;"	m
makeSkip	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	makeSkip {$/;"	m
makeSkipJack	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeSkipJack {				\/\/ stoptest should check window.$/;"	m
makeSkipJack	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeSkipJack {$/;"	m
makeSkipJack	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeSkipJack {$/;"	m
makeSpecs	quarks/cruciallib/Instr/Instr.sc	/^	makeSpecs { arg argspecs;$/;"	m
makeState	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	makeState { |result, state = \\class, addHistory = true, extraValuesDict|$/;"	m
makeSyncResponder	SCClassLibrary/Common/Control/NetAddr.sc	/^	makeSyncResponder { arg condition;$/;"	m
makeTask	quarks/cruciallib/Instr/InstrSpawner.sc	/^	makeTask {$/;"	m
makeTempoClock	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	makeTempoClock { arg tempo=1.0, beats, seconds;$/;"	m
makeTopLine	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeTopLine { |extras|$/;"	m
makeTopLine	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	makeTopLine {$/;"	m
makeTypeView	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeTypeView { |width, height|$/;"	m
makeUserview	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	makeUserview {$/;"	m
makeView	quarks/cruciallib/Gui/ActionButton.sc	/^	makeView { arg layout,x,y;$/;"	m
makeViewWithStringSize	quarks/cruciallib/Gui/ActionButton.sc	/^	makeViewWithStringSize { arg layout,optimalWidth,minWidth,minHeight;$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	makeViews { |options|$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	makeViews {$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makeViews { |options|$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeViews { |options|$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	makeViews {$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	makeViews {$/;"	m
makeViews	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	makeViews { |options|$/;"	m
makeVol	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	makeVol { |width, height|$/;"	m
makeWakeBut	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	makeWakeBut { |width, height|$/;"	m
makeWatcher	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^	makeWatcher {$/;"	m
makeWikiPage	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	makeWikiPage { | wikiWord, extension=(".rtf"), directory |$/;"	m
makeWin	SCClassLibrary/Common/Streams/History.sc	/^	makeWin { |where, textHeight=12| ^HistoryGui(this, where, textHeight) }$/;"	m
makeWindow	SCClassLibrary/Common/GUI/Inspector.sc	/^	makeWindow {$/;"	m
makeWindow	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^	makeWindow { arg w;$/;"	m
makeWindow	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	makeWindow { |argParent, argBounds|$/;"	m
makeWindow	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	makeWindow { arg view;$/;"	m
makeWindow	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	makeWindow {$/;"	m
makeWindow	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	makeWindow {$/;"	m
makeWindow	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	makeWindow {$/;"	m
makeWindow	SCClassLibrary/QtCollider/QStethoscope.sc	/^  makeWindow { arg view;$/;"	m
makeZone	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	makeZone {$/;"	m
manageFunctionConnection	SCClassLibrary/QtCollider/QView.sc	/^  manageFunctionConnection { arg oldAction, newAction, signal, sync=false;$/;"	m
manageMethodConnection	SCClassLibrary/QtCollider/QView.sc	/^  manageMethodConnection { arg oldAction, newAction, signal, method, sync=false;$/;"	m
manipulate	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	manipulate { arg func;$/;"	m
manipulate	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	manipulate { arg func; $/;"	m
map	SCClassLibrary/Common/Control/Node.sc	/^	map { arg ... args;$/;"	m
map	SCClassLibrary/Common/GUI/ControlModel.sc	/^	map { arg value; ^value }$/;"	m
map	SCClassLibrary/Common/GUI/ControlModel.sc	/^	map { arg value;$/;"	m
map	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	map { arg ... args;$/;"	m
map	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		map { arg ... args;$/;"	m
map	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	map { arg ... args;$/;"	m
map	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	map { arg index;$/;"	m
map	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	map { arg proxy;$/;"	m
map	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	map { | ... args | \/\/ key(s), proxy, key(s), proxy ...$/;"	m
map	quarks/cruciallib/Instr/MoreSpecs.sc	/^	map { arg val;$/;"	m
mapEnvir	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		mapEnvir { arg ... keys;$/;"	m
mapEnvir	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	mapEnvir { | ... keys | \/\/ map to current environment$/;"	m
mapInputToBus	quarks/cruciallib/Instr/Patch.sc	/^	mapInputToBus { arg i,bus;$/;"	m
mapMsg	SCClassLibrary/Common/Control/Node.sc	/^	mapMsg { arg ... args;$/;"	m
mapToCantor	quarks/MathLib/classes/various/isCantorNumber.sc	/^	mapToCantor {$/;"	m
mapToGlobal	SCClassLibrary/QtCollider/QView.sc	/^  mapToGlobal { arg point;$/;"	m
mapToSpec	quarks/cruciallib/Instr/instrSupport.sc	/^	mapToSpec { arg v,spec;$/;"	m
mapa	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	mapa { arg ... args;$/;"	m
mapa	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	mapa { arg index;$/;"	m
mapan	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	mapan { arg ... args;$/;"	m
mapan	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	mapan { arg index, numChannels;$/;"	m
mapn	SCClassLibrary/Common/Control/Node.sc	/^	mapn { arg ... args;$/;"	m
mapn	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		mapn { arg ... args;$/;"	m
mapn	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	mapn { arg ... args;$/;"	m
mapn	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	mapn { arg index, numChannels;$/;"	m
mapn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	mapn { | ... args |$/;"	m
mapnMsg	SCClassLibrary/Common/Control/Node.sc	/^	mapnMsg { arg ... args;$/;"	m
mappingKeys	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	mappingKeys {$/;"	m
margin	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	margin { this.subclassResponsibility(\\margin); }$/;"	m
margin_	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	margin_ { arg margin; this.subclassResponsibility(\\margin_); }$/;"	m
margins_	SCClassLibrary/QtCollider/QLayout.sc	/^  margins_ { arg margins;$/;"	m
match	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	match { |key|$/;"	m
match	SCClassLibrary/Common/Control/MIDIOut.sc	/^	match { arg inPort, inChan, inB, inC;$/;"	m
match	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	match { arg src,chan,num,value;$/;"	m
matchAt	SCClassLibrary/Common/Collections/Dictionary.sc	/^	matchAt { |key|$/;"	m
matchEvent_	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	matchEvent_ { |midiEvent|$/;"	m
matchForRewriting	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	matchForRewriting { arg string, value, args;$/;"	m
matchItem	SCClassLibrary/Common/Collections/Collection.sc	/^	matchItem { | item |$/;"	m
matchItem	SCClassLibrary/Common/Core/Function.sc	/^	matchItem { arg item;$/;"	m
matchItem	SCClassLibrary/Common/Core/Nil.sc	/^	matchItem { ^true } \/\/ nil matches anything$/;"	m
matchItem	SCClassLibrary/Common/Core/Object.sc	/^	matchItem {|item| ^this === item }$/;"	m
matchKeys	SCClassLibrary/Common/Streams/History.sc	/^	matchKeys { |key|$/;"	m
matchOSCAddressPattern	SCClassLibrary/Common/Core/Symbol.sc	/^	matchOSCAddressPattern { arg addressPattern;$/;"	m
matchRegexp	SCClassLibrary/Common/Collections/String.sc	/^	matchRegexp { arg string, start = 0, end; _String_Regexp ^this.primitiveFailed }$/;"	m
matchRules	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	matchRules { arg rules ... args; \/\/ returns [value, dropSize] pair$/;"	m
matchString	SCClassLibrary/Common/Streams/History.sc	/^	matchString { |str, ignoreCase=true|$/;"	m
matches	SCClassLibrary/Common/Control/NetAddr.sc	/^	matches { arg that;$/;"	m
max	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	max { arg aNumber=0, adverb; ^this.performBinaryOp('max', aNumber, adverb) }$/;"	m
max	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	max { arg function=0, adverb; ^this.composeBinaryOp('max', function, adverb) }$/;"	m
max	SCClassLibrary/Common/Core/Symbol.sc	/^	max { ^this }$/;"	m
max	SCClassLibrary/Common/Math/Magnitude.sc	/^	max { arg aMagnitude; if (this < aMagnitude, {^aMagnitude}, {^this}) }$/;"	m
max	SCClassLibrary/Common/Math/Signal.sc	/^	max { arg aNumber; _Max; ^aNumber.performBinaryOpOnSignal('max', this) }$/;"	m
max	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	max { arg aNumber=0.0, adverb; _Max; ^aNumber.performBinaryOpOnSimpleNumber('max', this, adverb) }$/;"	m
maxArgs	quarks/cruciallib/Instr/Instr.sc	/^	maxArgs { ^this.argsSize }$/;"	m
maxDecimals	SCClassLibrary/QtCollider/QNumberBox.sc	/^  maxDecimals { ^this.getProperty(\\maxDecimals); }$/;"	m
maxDecimals_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  maxDecimals_ { arg decimals; this.setProperty( \\maxDecimals, decimals ); }$/;"	m
maxDepth	SCClassLibrary/Common/Collections/Collection.sc	/^	maxDepth { arg max = 1;$/;"	m
maxHeight_	SCClassLibrary/QtCollider/QView.sc	/^  maxHeight_ { arg height;$/;"	m
maxIndex	SCClassLibrary/Common/Collections/Collection.sc	/^	maxIndex { | function |$/;"	m
maxItem	SCClassLibrary/Common/Collections/Collection.sc	/^	maxItem { | function |$/;"	m
maxItem	SCClassLibrary/Common/Collections/SparseArray.sc	/^	maxItem { |function|$/;"	m
maxItems_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	maxItems_ { |val| maxItems = val.max(1); this.adjust }$/;"	m
maxLevel_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	maxLevel_ { arg level;$/;"	m
maxSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	maxSize { _BasicMaxSize }$/;"	m
maxSize	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	maxSize {$/;"	m
maxSizeAtDepth	SCClassLibrary/Common/Collections/Collection.sc	/^	maxSizeAtDepth { arg rank;$/;"	m
maxSize_	SCClassLibrary/QtCollider/QView.sc	/^  maxSize_ { arg size;$/;"	m
maxTime_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	maxTime_ { arg sec;$/;"	m
maxValue	SCClassLibrary/Common/Collections/Collection.sc	/^	maxValue { | function |			\/\/ must supply a function$/;"	m
maxWidth_	SCClassLibrary/QtCollider/QView.sc	/^  maxWidth_ { arg width;$/;"	m
maxval	quarks/cruciallib/Instr/MoreSpecs.sc	/^	maxval { ^itemSpec.maxval }$/;"	m
maxval_	SCClassLibrary/Common/GUI/ControlModel.sc	/^	maxval_ { arg v;$/;"	m
maxval_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	maxval_ { |val|$/;"	m
mean	SCClassLibrary/Common/Collections/Collection.sc	/^	mean { | function |$/;"	m
mean	quarks/MathLib/classes/various/Matrix.sc	/^	mean {$/;"	m
meanF	quarks/MathLib/classes/statistics/extStatistics.sc	/^	meanF { | function | ^this.sumF(function) \/ this.size }$/;"	m
median	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	median { arg function;$/;"	m
median2	quarks/MathLib/classes/statistics/extStatistics.sc	/^	median2 {$/;"	m
menu	SCClassLibrary/Common/GUI/Base/EZPopUpMenu.sc	/^	menu {^ widget}$/;"	m
merge	SCClassLibrary/Common/Collections/Dictionary.sc	/^	merge {|that, func, fill = true|$/;"	m
merge	SCClassLibrary/SCDoc/SCDoc.sc	/^    merge {|root2|$/;"	m
mergeSort	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	mergeSort { arg function;$/;"	m
mergeSortTemp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	mergeSortTemp { arg function, tempArray, left, right;$/;"	m
mergeTemp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	mergeTemp { arg function, tempArray, left, mid, right;$/;"	m
meshgrid	quarks/MathLib/classes/various/extSequenceableCollection.sc	/^	meshgrid { |...arrays|$/;"	m
metaAction_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  metaAction_ { arg function;$/;"	m
metaAction_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  metaAction_ { arg func;$/;"	m
metaAction_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  metaAction_ { arg action;$/;"	m
metaclass	SCClassLibrary/Platform/osx/AutoComplete/AutocompleteExtensions.sc	/^	metaclass {$/;"	m
meter	SCClassLibrary/Common/GUI/PlusGUI/Control/server-meter.sc	/^	meter {$/;"	m
meters	quarks/cruciallib/ServerTools/ServerGui.sc	/^	meters { |layout,bounds|$/;"	m
methodReferences	SCClassLibrary/Common/Core/Kernel.sc	/^	methodReferences {$/;"	m
methodSelectorForRate	SCClassLibrary/Common/Audio/UGen.sc	/^	methodSelectorForRate {$/;"	m
methodTemplates	SCClassLibrary/Common/Core/Kernel.sc	/^	methodTemplates {$/;"	m
methods	SCClassLibrary/QtCollider/QObject.sc	/^  methods { arg plain = true, signals = false, slots = true;$/;"	m
middle	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	middle { if (this.size > 0, { ^this.at((this.size - 1) div: 2) }, { ^nil }) }$/;"	m
middleIndex	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	middleIndex { ^if(this.size > 0) { (this.size - 1) div: 2 } { nil } }$/;"	m
midiClock	SCClassLibrary/Common/Control/MIDIOut.sc	/^	midiClock {$/;"	m
midicps	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	midicps { ^this.performUnaryOp('midicps') }$/;"	m
midicps	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	midicps { ^this.composeUnaryOp('midicps') }$/;"	m
midicps	SCClassLibrary/Common/Core/Symbol.sc	/^	midicps { ^this }$/;"	m
midicps	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	midicps { _MIDICPS; ^this.primitiveFailed }$/;"	m
midiratio	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	midiratio { ^this.performUnaryOp('midiratio') }$/;"	m
midiratio	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	midiratio { ^this.composeUnaryOp('midiratio') }$/;"	m
midiratio	SCClassLibrary/Common/Core/Symbol.sc	/^	midiratio { ^this }$/;"	m
midiratio	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	midiratio { _MIDIRatio; ^this.primitiveFailed }$/;"	m
min	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	min { arg aNumber, adverb; ^this.performBinaryOp('min', aNumber, adverb) }$/;"	m
min	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	min { arg function, adverb; ^this.composeBinaryOp('min', function, adverb) }$/;"	m
min	SCClassLibrary/Common/Core/Symbol.sc	/^	min { ^this }$/;"	m
min	SCClassLibrary/Common/Math/Magnitude.sc	/^	min { arg aMagnitude; if (this < aMagnitude, {^this}, {^aMagnitude}) }$/;"	m
min	SCClassLibrary/Common/Math/Signal.sc	/^	min { arg aNumber; _Min; ^aNumber.performBinaryOpOnSignal('min', this) }$/;"	m
min	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	min { arg aNumber, adverb; _Min; ^aNumber.performBinaryOpOnSimpleNumber('min', this, adverb) }$/;"	m
minColumnWidth	SCClassLibrary/QtCollider/QLayout.sc	/^  minColumnWidth { arg column; ^this.invokeMethod( \\minColumnWidth, column ); }$/;"	m
minDecimals	SCClassLibrary/QtCollider/QNumberBox.sc	/^  minDecimals { ^this.getProperty(\\minDecimals); }$/;"	m
minDecimals_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  minDecimals_ { arg decimals; this.setProperty( \\minDecimals, decimals ); }$/;"	m
minHeight_	SCClassLibrary/QtCollider/QView.sc	/^  minHeight_ { arg height; this.setProperty( \\minimumHeight, height ); }$/;"	m
minIndex	SCClassLibrary/Common/Collections/Collection.sc	/^	minIndex { | function |$/;"	m
minItem	SCClassLibrary/Common/Collections/Collection.sc	/^	minItem { | function |$/;"	m
minItem	SCClassLibrary/Common/Collections/SparseArray.sc	/^	minItem { |function|$/;"	m
minLevel_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	minLevel_ { arg level;$/;"	m
minNyquist	SCClassLibrary/Common/Audio/UGen.sc	/^ 	minNyquist { ^min(this, SampleRate.ir * 0.5) }$/;"	m
minNyquist	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	minNyquist { ^min(this, SampleRate.ir * 0.5) }$/;"	m
minRowHeight	SCClassLibrary/QtCollider/QLayout.sc	/^  minRowHeight { arg row; ^this.invokeMethod( \\minRowHeight, row ); }$/;"	m
minSizeHint	SCClassLibrary/QtCollider/QView.sc	/^  minSizeHint { ^this.getProperty(\\minimumSizeHint) }$/;"	m
minSizeHint	SCClassLibrary/QtCollider/QWindow.sc	/^  minSizeHint { ^view.minSizeHint }$/;"	m
minSize_	SCClassLibrary/QtCollider/QView.sc	/^  minSize_ { arg size; this.setProperty( \\minimumSize, size.asSize ); }$/;"	m
minTime_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	minTime_ { arg sec;$/;"	m
minValue	SCClassLibrary/Common/Collections/Collection.sc	/^	minValue { | function |$/;"	m
minWidth_	SCClassLibrary/QtCollider/QView.sc	/^  minWidth_ { arg width; this.setProperty( \\minimumWidth, width ); }$/;"	m
minimize	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	minimize {$/;"	m
minimize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	minimize {$/;"	m
minimize	SCClassLibrary/QtCollider/QView.sc	/^  minimize {$/;"	m
minimize	SCClassLibrary/QtCollider/QWindow.sc	/^  minimize { view.minimize; }$/;"	m
minit	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^	minit { $/;"	m
minval	SCClassLibrary/Common/Audio/Osc.sc	/^	minval {$/;"	m
minval	quarks/cruciallib/Instr/MoreSpecs.sc	/^	minval { ^itemSpec.minval }$/;"	m
minval_	SCClassLibrary/Common/GUI/ControlModel.sc	/^	minval_ { arg v;$/;"	m
minval_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	minval_ { |val|$/;"	m
mirror	SCClassLibrary/Common/Collections/Array.sc	/^	mirror {$/;"	m
mirror	SCClassLibrary/Common/Collections/List.sc	/^	mirror {$/;"	m
mirror1	SCClassLibrary/Common/Collections/Array.sc	/^	mirror1 {$/;"	m
mirror1	SCClassLibrary/Common/Collections/List.sc	/^	mirror1 {$/;"	m
mirror2	SCClassLibrary/Common/Collections/Array.sc	/^	mirror2 {$/;"	m
mirror2	SCClassLibrary/Common/Collections/List.sc	/^	mirror2 {$/;"	m
mirrorO	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	mirrorO { ^x.neg @ y.neg @ z.neg }$/;"	m
mirrorO	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	mirrorO { ^Spherical.new(rho, (theta + 2pi).mod(2pi) - pi, phi.neg) }$/;"	m
mirrorO	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	mirrorO { ^x.neg @ y.neg }$/;"	m
mirrorO	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	mirrorO { ^this.neg }$/;"	m
mirrorX	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	mirrorX { ^x.neg @ y @ z }$/;"	m
mirrorX	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	mirrorX { ^this.asCartesian.mirrorX.asSpherical }$/;"	m
mirrorX	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	mirrorX { ^x.neg @ y }$/;"	m
mirrorX	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	mirrorX { ^this.asPoint.mirrorX.asPolar }$/;"	m
mirrorY	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	mirrorY { ^x @ y.neg @ z }$/;"	m
mirrorY	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	mirrorY { ^this.asCartesian.mirrorY.asSpherical }$/;"	m
mirrorY	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	mirrorY { ^x @ y.neg }$/;"	m
mirrorY	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	mirrorY { ^this.asPoint.mirrorY.asPolar }$/;"	m
mirrorZ	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	mirrorZ { ^x @ y @ z.neg }$/;"	m
mirrorZ	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	mirrorZ { ^Spherical.new(rho, theta, phi.neg) }$/;"	m
mirrorZ	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	mirrorZ { ^this }$/;"	m
mirrorZ	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	mirrorZ { ^this }$/;"	m
mkdir	SCClassLibrary/Common/Collections/String.sc	/^	mkdir {$/;"	m
mod	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	mod { arg aNumber, adverb; ^this.performBinaryOp('mod', aNumber, adverb) }$/;"	m
mod	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	mod { arg function, adverb; ^this.composeBinaryOp('mod', function, adverb) }$/;"	m
mod	SCClassLibrary/Common/Core/Symbol.sc	/^	mod { ^this }$/;"	m
mod	SCClassLibrary/Common/Geometry/Point.sc	/^	mod {|that|$/;"	m
mod	SCClassLibrary/Common/Math/Number.sc	/^	mod { arg aNumber; ^this.subclassResponsibility(thisMethod) }$/;"	m
mod	SCClassLibrary/Common/Math/Signal.sc	/^	mod { arg aNumber; _Mod; ^aNumber.performBinaryOpOnSignal('mod', this) }$/;"	m
mod	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	mod { arg aNumber, adverb; _Mod; ^aNumber.performBinaryOpOnSimpleNumber('mod', this, adverb) }$/;"	m
mod	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	mod {|that|$/;"	m
mode	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	mode { arg degree, octave=12;$/;"	m
mode	SCClassLibrary/QtCollider/QKnob.sc	/^  mode {$/;"	m
mode	SCClassLibrary/QtCollider/QLayout.sc	/^  mode { ^this.getProperty(\\stackingMode) }$/;"	m
mode_	SCClassLibrary/QtCollider/QKnob.sc	/^  mode_ { arg inputMode;$/;"	m
mode_	SCClassLibrary/QtCollider/QLayout.sc	/^  mode_ { arg value;$/;"	m
model_	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	model_ { |newModel|$/;"	m
monitor	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	monitor { arg boo = true;$/;"	m
monitorGroup	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	monitorGroup { ^if(monitor.isNil) { nil } { monitor.group } }$/;"	m
monitorIndex	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	monitorIndex { ^if(monitor.isNil) { nil } { monitor.out } }$/;"	m
monitors	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	monitors {$/;"	m
mouseBeginTrack	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseBeginTrack { arg x, y, modifiers;}$/;"	m
mouseBeginTrackFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseBeginTrackFunc {$/;"	m
mouseBeginTrackFunc_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseBeginTrackFunc_ { |action|$/;"	m
mouseDown	SCClassLibrary/Common/GUI/PlusGUI/Core/ObjectPlusGUI.sc	/^	mouseDown { ^nil }$/;"	m
mouseDown	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	mouseDown { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	mouseDown { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	mouseDown { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseDown { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseDown { arg x, y, pressure, tiltx, tilty, deviceID,$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	mouseDown { arg x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount,absoluteZ,rotation;$/;"	m
mouseDown	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	mouseDown { |x,y|$/;"	m
mouseDown	SCClassLibrary/QtCollider/QView.sc	/^  mouseDown { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDownAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseDownAction_ { arg aFunction;$/;"	m
mouseDownEvent	SCClassLibrary/QtCollider/QListView.sc	/^  mouseDownEvent { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDownEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseDownEvent { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDownEvent	SCClassLibrary/QtCollider/dnd_views.sc	/^  mouseDownEvent { arg x, y, modifiers, buttonNumber, clickCount;$/;"	m
mouseDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	mouseDrag { |drag|$/;"	m
mouseEndTrack	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseEndTrack { arg x, y, modifiers;$/;"	m
mouseEndTrackFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseEndTrackFunc {$/;"	m
mouseEndTrackFunc_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseEndTrackFunc_ { |action|$/;"	m
mouseEnter	SCClassLibrary/QtCollider/QView.sc	/^  mouseEnter {$/;"	m
mouseEnterAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseEnterAction_ { arg aFunction;$/;"	m
mouseEnterEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseEnterEvent {$/;"	m
mouseLeave	SCClassLibrary/QtCollider/QView.sc	/^  mouseLeave {$/;"	m
mouseLeaveAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseLeaveAction_ { arg aFunction;$/;"	m
mouseLeaveEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseLeaveEvent {$/;"	m
mouseMove	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	mouseMove { arg x, y, modifiers;$/;"	m
mouseMove	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	mouseMove { arg x, y, modifiers;$/;"	m
mouseMove	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	mouseMove { arg x, y, modifiers;$/;"	m
mouseMove	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseMove { arg x, y, modifiers;$/;"	m
mouseMove	SCClassLibrary/QtCollider/QView.sc	/^  mouseMove { arg x, y, modifiers;$/;"	m
mouseMoveAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseMoveAction_ { arg aFunction;$/;"	m
mouseMoveEvent	SCClassLibrary/QtCollider/QListView.sc	/^  mouseMoveEvent { arg x, y, modifiers, buttons;$/;"	m
mouseMoveEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseMoveEvent { arg x, y, modifiers, buttons;$/;"	m
mouseOver	SCClassLibrary/Common/GUI/PlusGUI/Core/ObjectPlusGUI.sc	/^	mouseOver { ^nil }$/;"	m
mouseOver	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseOver { arg x, y;$/;"	m
mouseOver	SCClassLibrary/QtCollider/QView.sc	/^  mouseOver { arg x, y;$/;"	m
mouseOverAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseOverAction_ { arg aFunction;$/;"	m
mousePosition	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mousePosition {$/;"	m
mouseTrack	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseTrack { arg x, y, modifiers; 	}$/;"	m
mouseTrackFunc	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseTrackFunc {$/;"	m
mouseTrackFunc_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseTrackFunc_ { |action|$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	mouseUp {arg x, y, modifiers, buttonNumber, clickCount, clickPos;$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseUp { arg x, y, modifiers;$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseUp { arg x, y, pressure, tiltx, tilty, deviceID,$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	mouseUp {$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	mouseUp { arg x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount,absoluteZ,rotation;$/;"	m
mouseUp	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	mouseUp { |x,y|$/;"	m
mouseUp	SCClassLibrary/QtCollider/QView.sc	/^  mouseUp { arg x, y, modifiers, buttonNumber;$/;"	m
mouseUpAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseUpAction_ { arg aFunction;$/;"	m
mouseUpEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseUpEvent { arg x, y, modifiers, buttonNumber;$/;"	m
mouseWheel	SCClassLibrary/QtCollider/QView.sc	/^  mouseWheel { arg x, y, modifiers, xDelta, yDelta;$/;"	m
mouseWheelAction_	SCClassLibrary/QtCollider/QView.sc	/^  mouseWheelAction_ { arg aFunction;$/;"	m
mouseWheelEvent	SCClassLibrary/QtCollider/QView.sc	/^  mouseWheelEvent { arg x, y, modifiers, xDelta, yDelta;$/;"	m
moveAfter	SCClassLibrary/Common/Control/Node.sc	/^	moveAfter { "moveAfter has no effect on RootNode".warn; }$/;"	m
moveAfter	SCClassLibrary/Common/Control/Node.sc	/^	moveAfter { arg aNode;$/;"	m
moveAfterMsg	SCClassLibrary/Common/Control/Node.sc	/^	moveAfterMsg { arg aNode;$/;"	m
moveBefore	SCClassLibrary/Common/Control/Node.sc	/^	moveBefore { "moveBefore has no effect on RootNode".warn; }$/;"	m
moveBefore	SCClassLibrary/Common/Control/Node.sc	/^	moveBefore { arg aNode;$/;"	m
moveBeforeMsg	SCClassLibrary/Common/Control/Node.sc	/^	moveBeforeMsg { arg aNode;$/;"	m
moveBeforeMsg	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	moveBeforeMsg { | ... proxies |$/;"	m
moveBy	SCClassLibrary/Common/Geometry/Rect.sc	/^	moveBy { arg h, v;$/;"	m
moveEvent	SCClassLibrary/QtCollider/QView.sc	/^  moveEvent { onMove.value(this) }$/;"	m
moveNodeToHead	SCClassLibrary/Common/Control/Node.sc	/^    moveNodeToHead { arg aNode;$/;"	m
moveNodeToHeadMsg	SCClassLibrary/Common/Control/Node.sc	/^    moveNodeToHeadMsg { arg aNode;$/;"	m
moveNodeToTail	SCClassLibrary/Common/Control/Node.sc	/^    moveNodeToTail { arg aNode;$/;"	m
moveNodeToTailMsg	SCClassLibrary/Common/Control/Node.sc	/^    moveNodeToTailMsg { arg aNode;$/;"	m
moveTo	SCClassLibrary/Common/Geometry/Rect.sc	/^	moveTo { arg h, v;$/;"	m
moveTo	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	moveTo { |h, v|$/;"	m
moveTo	SCClassLibrary/QtCollider/QView.sc	/^  moveTo { arg x, y;$/;"	m
moveToGroupToBundle	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	moveToGroupToBundle { arg bundle, group;$/;"	m
moveToHead	SCClassLibrary/Common/Control/Node.sc	/^	moveToHead { "moveToHead has no effect on RootNode".warn; }$/;"	m
moveToHead	SCClassLibrary/Common/Control/Node.sc	/^	moveToHead { arg aGroup;$/;"	m
moveToHeadMsg	SCClassLibrary/Common/Control/Node.sc	/^	moveToHeadMsg { arg aGroup;$/;"	m
moveToPoint	SCClassLibrary/Common/Geometry/Rect.sc	/^	moveToPoint { arg aPoint;$/;"	m
moveToTail	SCClassLibrary/Common/Control/Node.sc	/^	moveToTail { arg aGroup;$/;"	m
moveToTailMsg	SCClassLibrary/Common/Control/Node.sc	/^	moveToTailMsg { arg aGroup;$/;"	m
msgFuncKeepGate_	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	msgFuncKeepGate_ { |bool = false|$/;"	m
msgSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	msgSize {$/;"	m
mtranspose	SCClassLibrary/Common/Streams/Patterns.sc	/^	mtranspose { arg n; ^Paddp(\\mtranspose, n, this) }$/;"	m
mul	quarks/MathLib/classes/various/Matrix.sc	/^	mul { arg multplier2; \/\/ return matrix A(m,n) * B(n,r) = AB(m,r)$/;"	m
mulMatrix	quarks/MathLib/classes/various/Matrix.sc	/^	mulMatrix { arg aMatrix;$/;"	m
mulNumber	quarks/MathLib/classes/various/Matrix.sc	/^	mulNumber { arg aNumber;$/;"	m
multiChannelExpand	SCClassLibrary/Common/Collections/Array.sc	/^	multiChannelExpand {$/;"	m
multiChannelPerform	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	multiChannelPerform { arg selector ... args;$/;"	m
multiChannelPerform	SCClassLibrary/Common/Core/Object.sc	/^	multiChannelPerform { arg selector ... args;$/;"	m
multichannelExpandRef	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	multichannelExpandRef { arg rank;$/;"	m
multichannelExpandRef	SCClassLibrary/Common/Core/Ref.sc	/^	multichannelExpandRef { |rank|$/;"	m
multiply	SCClassLibrary/Common/Core/Color.sc	/^	multiply { arg aColor, opacity=1.0;$/;"	m
multiplyFactors	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	multiplyFactors { var li = this.size, c = Polynomial.newClear(li+1);$/;"	m
mustBeBoolean	SCClassLibrary/Common/Core/Object.sc	/^	mustBeBoolean { MustBeBooleanError(nil, this).throw; }$/;"	m
mutable	SCClassLibrary/Common/Core/Object.sc	/^	mutable { _ObjectIsMutable; ^this.primitiveFailed }$/;"	m
mute	SCClassLibrary/Common/Control/Server.sc	/^	mute {$/;"	m
mute	SCClassLibrary/Common/Control/Volume.sc	/^	mute {$/;"	m
mute	SCClassLibrary/Common/Streams/Stream.sc	/^	mute { muteCount = muteCount + 1; }$/;"	m
myDocumentsDir	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	myDocumentsDir { _WinPlatform_myDocumentsDir }$/;"	m
nCk	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	nCk { |k| var n = this, c = 1.0;$/;"	m
nSorted	quarks/MathLib/classes/statistics/extStatistics.sc	/^	nSorted { |n, func| $/;"	m
n_end	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_end { arg node;$/;"	m
n_end	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_end { arg nodeID, groupID, prevID, nextID;$/;"	m
n_end	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_end { arg nodeID;$/;"	m
n_end	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	n_end { arg nodeID, groupID, prevID, nextID;$/;"	m
n_go	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_go { arg node;$/;"	m
n_go	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_go { arg nodeID, groupID, prevID, nextID;$/;"	m
n_go	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_go { arg nodeID;$/;"	m
n_go	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	n_go { arg nodeID, groupID, prevID, nextID;$/;"	m
n_off	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_off { arg node;$/;"	m
n_off	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_off { arg nodeID, groupID, prevID, nextID;$/;"	m
n_off	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	n_off { arg nodeID, groupID, prevID, nextID;$/;"	m
n_on	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_on { arg node;$/;"	m
n_on	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	n_on { arg nodeID, groupID, prevID, nextID;$/;"	m
n_on	quarks/cruciallib/ServerTools/AnnotatedDebugNodeWatcher.sc	/^	n_on { arg nodeID, groupID, prevID, nextID;$/;"	m
name	SCClassLibrary/Common/Audio/UGen.sc	/^	name {$/;"	m
name	SCClassLibrary/Common/GUI/Document.sc	/^	name {$/;"	m
name	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	name {$/;"	m
name	SCClassLibrary/Common/Quarks/Quarks.sc	/^	name { ^local.name }$/;"	m
name	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	name { ^nameView.string.asSymbol }$/;"	m
name	SCClassLibrary/Platform/Platform.sc	/^	name { ^this.subclassResponsibility }$/;"	m
name	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	name { ^\\iphone }$/;"	m
name	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^	name { ^\\linux }$/;"	m
name	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	name { ^\\osx }$/;"	m
name	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	name { ^\\windows }$/;"	m
name	SCClassLibrary/QtCollider/QView.sc	/^  name {$/;"	m
name	SCClassLibrary/QtCollider/QWindow.sc	/^  name { ^view.name; }$/;"	m
name	quarks/cruciallib/Instr/Instr.sc	/^	name { ^ugenClass.asString }$/;"	m
name	quarks/cruciallib/Players/AbstractPlayer.sc	/^	name {$/;"	m
name	quarks/cruciallib/Players/PlayerSocket.sc	/^	name {$/;"	m
name	quarks/cruciallib/Players/SFP/SFP.sc	/^	name { ^super.name ?? {this.fileName} }$/;"	m
nameDef	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	nameDef { |name, index = 0|$/;"	m
nameFuncs_	quarks/cruciallib/Gui/CXMenu.sc	/^	nameFuncs_ { arg nf;$/;"	m
name_	SCClassLibrary/Common/Control/OSC.sc	/^	name_ { arg theName; name = theName.asSymbol; }$/;"	m
name_	SCClassLibrary/Common/GUI/Document.sc	/^	name_ { |aname|$/;"	m
name_	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	name_ { arg argName;$/;"	m
name_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	name_ { arg argName;$/;"	m
name_	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	name_ { |name|$/;"	m
name_	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	name_ { |name|$/;"	m
name_	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	name_ { |key|$/;"	m
name_	SCClassLibrary/QtCollider/QView.sc	/^  name_ { arg string;$/;"	m
name_	SCClassLibrary/QtCollider/QWindow.sc	/^  name_ { arg string; view.name_(string); }$/;"	m
nand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	nand { arg function, adverb; ^this.composeBinaryOp('nand', function, adverb) }$/;"	m
nand	SCClassLibrary/Common/Core/Boolean.sc	/^	nand { ^this.subclassResponsibility(thisMethod) }$/;"	m
nand	SCClassLibrary/Common/Core/Boolean.sc	/^	nand { arg that; ^that.value.not }$/;"	m
nand	SCClassLibrary/Common/Core/Boolean.sc	/^	nand { arg that; ^true }$/;"	m
ne	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	ne { arg function, adverb; ^this.composeBinaryOp('!=', function, adverb) }$/;"	m
nearestInList	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	nearestInList { arg list;  \/\/ collection is sorted$/;"	m
nearestInList	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nearestInList { arg list;  \/\/ collection is sorted$/;"	m
nearestInScale	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	nearestInScale { arg scale, stepsPerOctave=12; \/\/ collection is sorted$/;"	m
nearestInScale	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nearestInScale { arg scale, stepsPerOctave=12; \/\/ collection is sorted$/;"	m
neg	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	neg { ^this.performUnaryOp('neg') }$/;"	m
neg	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	neg { ^this.composeUnaryOp('neg') }$/;"	m
neg	SCClassLibrary/Common/Core/Symbol.sc	/^	neg { ^this }$/;"	m
neg	SCClassLibrary/Common/Math/Complex.sc	/^	neg { ^Complex.new(real.neg, imag.neg) }$/;"	m
neg	SCClassLibrary/Common/Math/Polar.sc	/^	neg { ^Polar.new(rho, theta + pi) }$/;"	m
neg	SCClassLibrary/Common/Math/Signal.sc	/^	neg { _Neg; ^this.primitiveFailed }$/;"	m
neg	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	neg { _Neg; ^this.primitiveFailed }$/;"	m
neg	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	neg { ^Spherical.new(rho, (theta + 2pi).mod(2pi) - pi, phi.neg) }$/;"	m
netAddr	SCClassLibrary/Common/Control/OSCService.sc	/^	netAddr {$/;"	m
newAllocators	SCClassLibrary/Common/Control/Server.sc	/^	newAllocators {$/;"	m
newBufferAllocators	SCClassLibrary/Common/Control/Server.sc	/^	newBufferAllocators {$/;"	m
newBusAllocators	SCClassLibrary/Common/Control/Server.sc	/^	newBusAllocators {$/;"	m
newGroupToBundle	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	newGroupToBundle { | bundle, target, addAction=(\\addToTail) |$/;"	m
newInternalNode	SCClassLibrary/Common/Collections/Library.sc	/^	newInternalNode { ^this.nodeType.new }$/;"	m
newMonitorToBundle	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	newMonitorToBundle { | bundle, numChannels |$/;"	m
newMsg	SCClassLibrary/Common/Control/Node.sc	/^	newMsg { arg target, addAction = \\addToHead;$/;"	m
newMsg	SCClassLibrary/Common/Control/Node.sc	/^	newMsg { arg target, args, addAction = \\addToHead;$/;"	m
newNodeAllocators	SCClassLibrary/Common/Control/Server.sc	/^	newNodeAllocators {$/;"	m
newPage	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  newPage {$/;"	m
newSCWindow	SCClassLibrary/DefaultLibrary/Main.sc	/^	newSCWindow {$/;"	m
newScopeBufferAllocators	SCClassLibrary/Common/Control/Server.sc	/^	newScopeBufferAllocators {$/;"	m
newTextWindow	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	newTextWindow { arg title="Untitled", makeListener=false;$/;"	m
next	SCClassLibrary/Common/Collections/Event.sc	/^	next { arg inval; ^composeEvents(inval, this) }$/;"	m
next	SCClassLibrary/Common/Control/SerialPort.sc	/^	next {$/;"	m
next	SCClassLibrary/Common/Core/Object.sc	/^	next { ^this }$/;"	m
next	SCClassLibrary/Common/Core/Ref.sc	/^	next { ^value }$/;"	m
next	SCClassLibrary/Common/Core/Ref.sc	/^	next { ^value.copy }$/;"	m
next	SCClassLibrary/Common/Core/Thread.sc	/^	next { ^this }$/;"	m
next	SCClassLibrary/Common/Core/Thread.sc	/^	next { arg inval;$/;"	m
next	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	next { arg inval;$/;"	m
next	SCClassLibrary/Common/Streams/IOStream.sc	/^	next {$/;"	m
next	SCClassLibrary/Common/Streams/Stream.sc	/^	next { ^if (once) {once = false; value} }$/;"	m
next	SCClassLibrary/Common/Streams/Stream.sc	/^	next { ^this.subclassResponsibility(thisMethod) }$/;"	m
next	SCClassLibrary/Common/Streams/Stream.sc	/^	next { arg inval;$/;"	m
next	SCClassLibrary/Common/Streams/Stream.sc	/^	next { | inTime | ^routine.next(inTime) }$/;"	m
next	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	next {$/;"	m
next	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	next { ^this.getChar }$/;"	m
next	SCClassLibrary/Platform/linux/LID.sc	/^	next {$/;"	m
next	SCClassLibrary/Platform/osx/MXHID.sc	/^	next {$/;"	m
next	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	next { arg prevKey; $/;"	m
next	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	next { arg prevObj; $/;"	m
next	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	next { arg object, order=1;$/;"	m
next	quarks/MathLib/classes/Solver/Solver.sc	/^	next { $/;"	m
next	quarks/cruciallib/Control/MIDIClock.sc	/^	next {$/;"	m
next	quarks/cruciallib/Editors/NumberEditor.sc	/^	next { ^this.value }\/\/ Object would return this$/;"	m
next	quarks/cruciallib/Instr/Instr.sc	/^	next { arg ... inputs;$/;"	m
next	quarks/cruciallib/Scheduling/Position.sc	/^	next {$/;"	m
next	quarks/cruciallib/Scheduling/Tempo.sc	/^	next { ^tempo }$/;"	m
nextBar	SCClassLibrary/Common/Core/Clock.sc	/^	nextBar { arg beat;$/;"	m
nextIndex	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	nextIndex { arg prevIndex, order=1;$/;"	m
nextKey	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	nextKey { arg prevKey;$/;"	m
nextLine	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	nextLine {$/;"	m
nextN	SCClassLibrary/Common/Streams/IOStream.sc	/^	nextN { arg n;$/;"	m
nextN	SCClassLibrary/Common/Streams/Stream.sc	/^	nextN { arg n, inval;$/;"	m
nextN	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	nextN { arg n;$/;"	m
nextName	SCClassLibrary/Common/Files/PathName.sc	/^	nextName {$/;"	m
nextNodeID	SCClassLibrary/Common/Control/Server.sc	/^	nextNodeID {$/;"	m
nextPermNodeID	SCClassLibrary/Common/Control/Server.sc	/^	nextPermNodeID {$/;"	m
nextPowerOf	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nextPowerOf { arg base; ^pow(base, ceil(log(this) \/ log(base))) }$/;"	m
nextPowerOfThree	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nextPowerOfThree { ^pow(3, ceil(log(this) \/ log(3))) }$/;"	m
nextPowerOfTwo	SCClassLibrary/Common/Math/Integer.sc	/^	nextPowerOfTwo { _NextPowerOfTwo }$/;"	m
nextPowerOfTwo	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nextPowerOfTwo { ^this.nextPowerOf(2) }$/;"	m
nextPrime	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	nextPrime { ^this.performUnaryOp('nextPrime') }$/;"	m
nextPrime	SCClassLibrary/Common/Math/Integer.sc	/^	nextPrime { _NextPrime }$/;"	m
nextSlotFor	SCClassLibrary/Common/Collections/SparseArray.sc	/^	nextSlotFor { arg index;$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Collections/Dictionary.sc	/^	nextTimeOnGrid { |clock|$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	nextTimeOnGrid { arg clock;$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Core/Clock.sc	/^	nextTimeOnGrid { arg quant = 1, phase = 0;$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Core/Nil.sc	/^	nextTimeOnGrid { arg clock; ^clock !? { clock.nextTimeOnGrid } }$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	nextTimeOnGrid { arg clock;$/;"	m
nextTimeOnGrid	SCClassLibrary/Common/Streams/Quant.sc	/^	nextTimeOnGrid { | clock |$/;"	m
niceNum	SCClassLibrary/Common/GUI/Grid.sc	/^	niceNum { arg val,round;$/;"	m
ninit	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	ninit { arg argServer;$/;"	m
nisinit	quarks/cruciallib/Instr/MoreSpecs.sc	/^    nisinit { arg n,s,d;$/;"	m
nl	SCClassLibrary/Common/Streams/IOStream.sc	/^	nl { this.put(Char.nl); }$/;"	m
nl	quarks/cruciallib/UncoupledUsefulThings/PrettyPrintStream.sc	/^	nl {$/;"	m
noCheckAdd	SCClassLibrary/Common/Collections/Set.sc	/^	noCheckAdd { arg item;$/;"	m
noEndNumbers	SCClassLibrary/Common/Files/PathName.sc	/^	noEndNumbers {$/;"	m
nodeAt	SCClassLibrary/Common/Collections/LinkedList.sc	/^	nodeAt { arg index;$/;"	m
nodeClass	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	nodeClass { ^IdentityWeighBag }$/;"	m
nodeClass	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	nodeClass { ^WeighBag }$/;"	m
nodeID	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	nodeID { ^(this[\\id].asArray[0]) }$/;"	m
nodeID	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	nodeID { ^nil }$/;"	m
nodeIsPlaying	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	nodeIsPlaying { arg nodeID;$/;"	m
nodeIsPlaying_	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	nodeIsPlaying_ { arg nodeID;$/;"	m
nodeMapChanged	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	nodeMapChanged {$/;"	m
nodeMap_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	nodeMap_ { | map |$/;"	m
nodeType	SCClassLibrary/Common/Collections/Library.sc	/^	nodeType {$/;"	m
nonimpl	SCClassLibrary/QtCollider/QView.sc	/^  nonimpl { arg methodName;$/;"	m
norm	quarks/MathLib/classes/various/Matrix.sc	/^	norm { \/\/ the euclidean norm$/;"	m
norm	quarks/MathLib/classes/various/Quaternion.sc	/^	norm {$/;"	m
normal	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	normal { arg ... associations;$/;"	m
normal	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	normal { arg ... assns;$/;"	m
normalColor_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  normalColor_ { arg aColor;$/;"	m
normalize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	normalize { arg min=0.0, max=1.0;$/;"	m
normalize	SCClassLibrary/Common/Control/Buffer.sc	/^	normalize { arg newmax=1, asWavetable=false;$/;"	m
normalize	SCClassLibrary/Common/Files/SoundFile.sc	/^	normalize { |outPath, newHeaderFormat, newSampleFormat,$/;"	m
normalize	SCClassLibrary/Common/GUI/ControlModel.sc	/^	normalize { |min, max|$/;"	m
normalize	SCClassLibrary/Common/Math/Signal.sc	/^	normalize { arg beginSamp=0, endSamp;$/;"	m
normalize	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	normalize { dict.do({ arg node; node.weigh }) }$/;"	m
normalizeMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	normalizeMsg { arg newmax=1, asWavetable=false;$/;"	m
normalizeSum	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	normalizeSum {$/;"	m
normalizeTransfer	SCClassLibrary/Common/Math/Signal.sc	/^	normalizeTransfer {$/;"	m
not	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	not { ^this.composeUnaryOp('not') }$/;"	m
not	SCClassLibrary/Common/Core/Boolean.sc	/^	not { ^false }$/;"	m
not	SCClassLibrary/Common/Core/Boolean.sc	/^	not { ^this.subclassResponsibility(thisMethod) }$/;"	m
not	SCClassLibrary/Common/Core/Boolean.sc	/^	not { ^true }$/;"	m
not	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	not {	^Not(this)	}$/;"	m
notClosed	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	notClosed { ^dataptr.notNil }$/;"	m
notClosed	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	notClosed { ^dataptr.notNil }$/;"	m
notClosed	SCClassLibrary/QtCollider/QView.sc	/^  notClosed { ^this.isClosed.not }$/;"	m
notEmpty	SCClassLibrary/Common/Collections/Collection.sc	/^	notEmpty { ^this.size > 0 }$/;"	m
notEmpty	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	notEmpty { ^this.isEmpty.not }$/;"	m
notFinalized	SCClassLibrary/Common/Core/Finalize.sc	/^	notFinalized { ^cFunction.notNil }$/;"	m
notNil	SCClassLibrary/Common/Core/Nil.sc	/^	notNil { ^false }$/;"	m
notNil	SCClassLibrary/Common/Core/Object.sc	/^	notNil { ^true }$/;"	m
notPrivOnly	SCClassLibrary/SCDoc/SCDoc.sc	/^    notPrivOnly {$/;"	m
notYetImplemented	SCClassLibrary/Common/Core/Object.sc	/^	notYetImplemented { NotYetImplementedError(nil, this).throw; }$/;"	m
note	SCClassLibrary/Common/Control/MIDIOut.sc	/^	note { ^b }$/;"	m
noteOff	SCClassLibrary/Common/Control/MIDIOut.sc	/^	noteOff { arg chan, note=60, veloc=64;$/;"	m
noteOn	SCClassLibrary/Common/Control/MIDIOut.sc	/^	noteOn { arg chan, note=60, veloc=64;$/;"	m
notify_	SCClassLibrary/Common/Control/Server.sc	/^	notify_ { |flag = true|$/;"	m
nthPrime	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	nthPrime { ^this.performUnaryOp('nthPrime') }$/;"	m
nthPrime	SCClassLibrary/Common/Math/Integer.sc	/^	nthPrime { _NthPrime }$/;"	m
nudgeSet	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	nudgeSet { |param, incr = 0.02, spec|$/;"	m
nudgeVol	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	nudgeVol { |incr = 0.02, spec|$/;"	m
numArgs	SCClassLibrary/Common/Core/Function.sc	/^	numArgs { ^def.numArgs }		\/\/ return number of arguments to the function$/;"	m
numArgs	SCClassLibrary/Common/Core/Kernel.sc	/^	numArgs { _FunDef_NumArgs }		\/\/ return number of arguments to the function$/;"	m
numArs	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	numArs { ^prevState[\\arNames].size }$/;"	m
numAudioBusChannels_	SCClassLibrary/Common/Control/Server.sc	/^	numAudioBusChannels_ {arg numChannels=128;$/;"	m
numAudioChannels	SCClassLibrary/Common/Audio/InOut.sc	/^ 	numAudioChannels {$/;"	m
numBits	SCClassLibrary/Common/Math/Integer.sc	/^	numBits { _NumBits }$/;"	m
numBuffers	SCClassLibrary/Common/Control/Server.sc	/^	numBuffers {$/;"	m
numBuffers_	SCClassLibrary/Common/Control/Server.sc	/^	numBuffers_ { | argNumBuffers |$/;"	m
numChannels	SCClassLibrary/Common/Audio/BufIO.sc	/^	numChannels { ^inputs[0] }$/;"	m
numChannels	SCClassLibrary/Common/Audio/InOut.sc	/^	numChannels {$/;"	m
numChannels	SCClassLibrary/Common/Audio/UGen.sc	/^	numChannels { ^1 }$/;"	m
numChannels	SCClassLibrary/Common/Collections/Array.sc	/^	numChannels { ^this.size }$/;"	m
numChannels	SCClassLibrary/Common/Core/Nil.sc	/^	numChannels { ^nil }$/;"	m
numChannels	SCClassLibrary/Common/Core/Object.sc	/^	numChannels { ^1 }$/;"	m
numChannels	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	numChannels {$/;"	m
numChannels	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	numChannels { ^1 }$/;"	m
numChannels	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	numChannels {  ^if(bus.isNil) { nil } { bus.numChannels } }$/;"	m
numChannels	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	numChannels { ^outs.size }$/;"	m
numChannels	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	numChannels { arg max;$/;"	m
numChannels	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	numChannels { ^nil } \/\/don't know$/;"	m
numChannels	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  numChannels {$/;"	m
numChannels	quarks/cruciallib/Editors/NumberEditor.sc	/^	numChannels { ^1 }$/;"	m
numChannels	quarks/cruciallib/Instr/Instr.sc	/^	numChannels {$/;"	m
numChannels	quarks/cruciallib/Instr/Patch.sc	/^	numChannels {$/;"	m
numChannels	quarks/cruciallib/Players/AbstractPlayer.sc	/^	numChannels { ^1 }$/;"	m
numChannels	quarks/cruciallib/Players/AbstractPlayer.sc	/^	numChannels { ^this.source.numChannels }$/;"	m
numChannels	quarks/cruciallib/Players/AbstractPlayer.sc	/^	numChannels { ^this.voices.first.numChannels }$/;"	m
numChannels	quarks/cruciallib/Players/AudioInPlayer.sc	/^	numChannels { ^2 }$/;"	m
numChannels	quarks/cruciallib/Players/HasSubject.sc	/^	numChannels { ^subject.tryPerform(\\numChannels) ? 1 }$/;"	m
numChannels	quarks/cruciallib/Players/PlayerMixer.sc	/^	numChannels { ^this.players.first.numChannels }$/;"	m
numChannels	quarks/cruciallib/Players/SFP/SFP.sc	/^	numChannels { ^file.numChannels }$/;"	m
numChannels	quarks/cruciallib/Players/Silence.sc	/^	numChannels { ^(spec.numChannels) }$/;"	m
numChannels_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	numChannels_ { arg n;$/;"	m
numChannels_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  numChannels_ { arg n;$/;"	m
numChannels_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  numChannels_ { arg n;$/;"	m
numChans	SCClassLibrary/Common/Control/Volume.sc	/^	numChans { ^numChans ? synthNumChans ? server.options.numOutputBusChannels }$/;"	m
numChans_	SCClassLibrary/Common/Control/Volume.sc	/^	numChans_ { |num|$/;"	m
numColumns	SCClassLibrary/QtCollider/QTreeView.sc	/^  numColumns { ^this.getProperty( \\columnCount ); }$/;"	m
numFiles	SCClassLibrary/Common/Files/Directory.sc	/^	numFiles {$/;"	m
numFrames	SCClassLibrary/Common/Audio/BufIO.sc	/^	numFrames { ^inputs[1] }$/;"	m
numFrames	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	numFrames {$/;"	m
numFrames	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  numFrames { ^this.getProperty( \\frames ); }$/;"	m
numFrames	quarks/cruciallib/Players/SFP/SFP.sc	/^	numFrames { ^file.numFrames }$/;"	m
numFrames	quarks/cruciallib/Sample/Sample.sc	/^	numFrames { ^size }$/;"	m
numInputBusChannels_	SCClassLibrary/Common/Control/Server.sc	/^	numInputBusChannels_ {arg numChannels=8;$/;"	m
numInputs	SCClassLibrary/Common/Audio/UGen.sc	/^	numInputs { ^inputs.size }$/;"	m
numItems	SCClassLibrary/QtCollider/QTreeView.sc	/^  numItems { ^this.getProperty( \\topLevelItemCount ); }$/;"	m
numItems_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	numItems_ { |val| numItems = val.max(1); this.adjust }$/;"	m
numKrs	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	numKrs { ^prevState[\\krNames].size }$/;"	m
numLines	SCClassLibrary/Common/GUI/Inspector.sc	/^	numLines { ^0 }$/;"	m
numLines	SCClassLibrary/Common/GUI/Inspector.sc	/^	numLines {$/;"	m
numMajorTicks_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	numMajorTicks_ {arg ticks;$/;"	m
numMajorTicks_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  numMajorTicks_ {arg number;$/;"	m
numOutputBusChannels_	SCClassLibrary/Common/Control/Server.sc	/^	numOutputBusChannels_ {arg numChannels=8;$/;"	m
numOutputs	SCClassLibrary/Common/Audio/InOut.sc	/^	numOutputs { ^0 }$/;"	m
numOutputs	SCClassLibrary/Common/Audio/Trig.sc	/^	numOutputs { ^0 }$/;"	m
numOutputs	SCClassLibrary/Common/Audio/UGen.sc	/^	numOutputs { ^1 }$/;"	m
numOutputs	SCClassLibrary/Common/Audio/UGen.sc	/^	numOutputs { ^channels.size }$/;"	m
numPrivateAudioBusChannels_	SCClassLibrary/Common/Control/Server.sc	/^	numPrivateAudioBusChannels_ {arg numChannels = 112;$/;"	m
numSteps_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	numSteps_ {arg val;$/;"	m
numSteps_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  numSteps_ {arg val;$/;"	m
numTicks_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	numTicks_ {arg ticks;$/;"	m
numTicks_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  numTicks_ {arg number;$/;"	m
numVars	SCClassLibrary/Common/Core/Function.sc	/^	numVars { ^def.numVars }		\/\/ return number of variables in the function$/;"	m
numVars	SCClassLibrary/Common/Core/Kernel.sc	/^	numVars { _FunDef_NumVars }		\/\/ return number of variables in the function$/;"	m
numberOfGroups	SCClassLibrary/Common/Streams/Ppar.sc	/^	numberOfGroups { ^list.size div: 2 }$/;"	m
numberOfGroups	SCClassLibrary/Common/Streams/Ppar.sc	/^	numberOfGroups { ^list.size }$/;"	m
o	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	o { arg ... args;$/;"	m
object_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	object_ { arg obj;$/;"	m
object_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	object_ { arg obj;$/;"	m
object_	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	object_ { |obj|$/;"	m
object_	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	object_ { |obj|$/;"	m
obtain	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	obtain { arg index, default; ^this[index] ? default }$/;"	m
obtain	SCClassLibrary/Common/Core/Object.sc	/^	obtain { arg index, default;  ^if(index == 0) { this } { default } }$/;"	m
occurrencesOf	SCClassLibrary/Common/Collections/Collection.sc	/^	occurrencesOf { | obj |$/;"	m
octaveRatio	SCClassLibrary/Common/Collections/Scale.sc	/^	octaveRatio {$/;"	m
octcps	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	octcps { ^this.performUnaryOp('octcps') }$/;"	m
octcps	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	octcps { ^this.composeUnaryOp('octcps') }$/;"	m
octcps	SCClassLibrary/Common/Core/Symbol.sc	/^	octcps { ^this }$/;"	m
octcps	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	octcps { _OctCPS; ^this.primitiveFailed }$/;"	m
odd	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	odd { ^this.performUnaryOp('odd') }$/;"	m
odd	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	odd { ^this.composeUnaryOp('odd') }$/;"	m
odd	SCClassLibrary/Common/Core/Symbol.sc	/^	odd { ^this }$/;"	m
odd	SCClassLibrary/Common/Math/Integer.sc	/^	odd { ^(this & 1) == 1 }$/;"	m
offLow	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	offLow { var index = 0;$/;"	m
offset	SCClassLibrary/Common/Math/Signal.sc	/^	offset { arg offset; _SignalOffset ^this.primitiveFailed }$/;"	m
offset_	SCClassLibrary/Common/Audio/Env.sc	/^	offset_ { arg z;$/;"	m
oldMethodsCompat	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	oldMethodsCompat {$/;"	m
on	SCClassLibrary/Common/Streams/IOStream.sc	/^	on { arg aCollection;$/;"	m
onBootAdd	SCClassLibrary/Common/Control/extSystemActions.sc	/^	onBootAdd { arg object;$/;"	m
onBootRemove	SCClassLibrary/Common/Control/extSystemActions.sc	/^	onBootRemove { arg object;$/;"	m
onClose	SCClassLibrary/QtCollider/QWindow.sc	/^  onClose { ^view.onClose }$/;"	m
onCloseEvent	SCClassLibrary/QtCollider/QView.sc	/^  onCloseEvent {$/;"	m
onClose_	SCClassLibrary/QtCollider/QView.sc	/^  onClose_ { arg func;$/;"	m
onClose_	SCClassLibrary/QtCollider/QWindow.sc	/^  onClose_ { arg func; view.onClose_(func) }$/;"	m
onFree	SCClassLibrary/Common/Control/Node.sc	/^	onFree {|func|$/;"	m
onItemChanged_	SCClassLibrary/QtCollider/QTreeView.sc	/^  onItemChanged_ { arg hook;$/;"	m
onJavaScriptMsg_	SCClassLibrary/QtCollider/QWebView.sc	/^  onJavaScriptMsg_ { arg func;$/;"	m
onLinkActivated_	SCClassLibrary/QtCollider/QWebView.sc	/^  onLinkActivated_ { arg func;$/;"	m
onLoadFailed_	SCClassLibrary/QtCollider/QWebView.sc	/^  onLoadFailed_ { arg func;$/;"	m
onLoadFinished_	SCClassLibrary/QtCollider/QWebView.sc	/^  onLoadFinished_ { arg func;$/;"	m
onMove_	SCClassLibrary/QtCollider/QView.sc	/^  onMove_ { arg aFunction;$/;"	m
onPlay	quarks/cruciallib/Players/AbstractPlayer.sc	/^	onPlay { arg func,timeout,listener,oneShot=true,throwErrorOnTimeout=nil;$/;"	m
onPoll	quarks/cruciallib/Instr/instrSupport.sc	/^	onPoll { |func,trig=10|$/;"	m
onQuitAdd	SCClassLibrary/Common/Control/extSystemActions.sc	/^	onQuitAdd { arg object;$/;"	m
onQuitRemove	SCClassLibrary/Common/Control/extSystemActions.sc	/^	onQuitRemove { arg object;$/;"	m
onReady	quarks/cruciallib/Players/AbstractPlayer.sc	/^	onReady { arg func,timeout,listener,oneShot=true,throwErrorOnTimeout=nil;$/;"	m
onReload_	SCClassLibrary/QtCollider/QWebView.sc	/^  onReload_ { arg func;$/;"	m
onResize_	SCClassLibrary/QtCollider/QView.sc	/^  onResize_ { arg aFunction;$/;"	m
onSend	SCClassLibrary/Common/Control/OSCBundle.sc	/^	onSend { arg func;$/;"	m
onStop	quarks/cruciallib/Players/AbstractPlayer.sc	/^	onStop { arg func,timeout,listener,oneShot=true,throwErrorOnTimeout=nil;$/;"	m
onTrig	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	onTrig { |trig,func,value=0.0|$/;"	m
onTrig	quarks/cruciallib/Instr/instrSupport.sc	/^	onTrig { |func,value=0.0|$/;"	m
onWindowActivateEvent	SCClassLibrary/QtCollider/QView.sc	/^  onWindowActivateEvent {$/;"	m
onWindowDeactivateEvent	SCClassLibrary/QtCollider/QView.sc	/^  onWindowDeactivateEvent {$/;"	m
oneShot	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	oneShot {$/;"	m
open	SCClassLibrary/Common/Files/File.sc	/^	open { arg commandLine, mode;$/;"	m
open	SCClassLibrary/Common/Files/File.sc	/^	open { arg pathName, mode;$/;"	m
open	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	open {|path|$/;"	m
open	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	open {|aPath|$/;"	m
open	SCClassLibrary/QtCollider/QTextView.sc	/^  open { arg aString;$/;"	m
open	quarks/cruciallib/Gui/SynthConsole.sc	/^	open { arg onOpenF;$/;"	m
openBundle	SCClassLibrary/Common/Control/Server.sc	/^	openBundle { arg bundle;	\/\/ pass in a bundle that you want to$/;"	m
openCodeFile	SCClassLibrary/Common/Core/Kernel.sc	/^	openCodeFile {$/;"	m
openDoc	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	openDoc { |strings, bounds|$/;"	m
openDocument	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	openDocument { arg selectionStart=0, selectionLength=0;$/;"	m
openEditZone	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	openEditZone { arg flag;$/;"	m
openFiles	SCClassLibrary/DefaultLibrary/Main.sc	/^	openFiles {$/;"	m
openFolder	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	openFolder { arg name, version;$/;"	m
openHelpFile	SCClassLibrary/Common/Core/Kernel.sc	/^	openHelpFile {$/;"	m
openHelpFile	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	openHelpFile {$/;"	m
openOS	SCClassLibrary/Common/Collections/linux/extString_linux.sc	/^	openOS {$/;"	m
openOS	SCClassLibrary/Common/Collections/osx/extString_osx.sc	/^	openOS {$/;"	m
openOS	SCClassLibrary/Common/Collections/windows/extString_windows.sc	/^	openOS {|aPath|$/;"	m
openPorts	SCClassLibrary/DefaultLibrary/Main.sc	/^	openPorts { ^openPorts.copy } \/\/ don't allow the Set to be modified from the outside$/;"	m
openSuper	SCClassLibrary/Common/GUI/Inspector.sc	/^	openSuper {$/;"	m
openTextFile	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	openTextFile { arg selectionStart=0, selectionLength=0;$/;"	m
openUDPPort	SCClassLibrary/DefaultLibrary/Main.sc	/^	openUDPPort {|portNum|$/;"	m
openWikiPage	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	openWikiPage {$/;"	m
openWinCodeFile	SCClassLibrary/Common/Core/Kernel.sc	/^	openWinCodeFile {$/;"	m
operator_	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	operator_ { arg op;$/;"	m
optimalRange	quarks/cruciallib/Instr/instrSupport.sc	/^	optimalRange { arg stdDev=0.3;$/;"	m
optimizeAdd	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeAdd {$/;"	m
optimizeAddNeg	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeAddNeg {$/;"	m
optimizeGraph	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeGraph {$/;"	m
optimizeGraph	SCClassLibrary/Common/Audio/Filter.sc	/^	optimizeGraph {$/;"	m
optimizeGraph	SCClassLibrary/Common/Audio/SynthDef.sc	/^	optimizeGraph {$/;"	m
optimizeGraph	SCClassLibrary/Common/Audio/UGen.sc	/^	optimizeGraph {$/;"	m
optimizeGraph	SCClassLibrary/Common/Audio/UGen.sc	/^	optimizeGraph {}$/;"	m
optimizeSub	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeSub {$/;"	m
optimizeToMulAdd	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeToMulAdd {$/;"	m
optimizeToSum3	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeToSum3 {$/;"	m
optimizeToSum4	SCClassLibrary/Common/Audio/BasicOpsUGen.sc	/^	optimizeToSum4 {$/;"	m
option	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	option { arg ... associations;$/;"	m
option	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	option { arg ... assns;$/;"	m
or	SCClassLibrary/Common/Core/Boolean.sc	/^	or { ^this.subclassResponsibility(thisMethod) }$/;"	m
or	SCClassLibrary/Common/Core/Boolean.sc	/^	or { arg that; ^that.value }$/;"	m
or	SCClassLibrary/Common/Core/Boolean.sc	/^	or { arg that; ^this }$/;"	m
or	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	or { arg constraint;	^Any([this,constraint])	}$/;"	m
order	SCClassLibrary/Common/Collections/Dictionary.sc	/^	order { arg func;$/;"	m
order	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	order { arg function;$/;"	m
order	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	order { ^1 }$/;"	m
order	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	order { ^order }$/;"	m
orderNodes	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	orderNodes { | ... proxies |$/;"	m
orientation_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  orientation_ { arg aSymbol;$/;"	m
orientation_	SCClassLibrary/QtCollider/QSlider.sc	/^  orientation_ { arg aSymbol;$/;"	m
origin	SCClassLibrary/Common/Geometry/Rect.sc	/^	origin { ^Point.new(left, top) }$/;"	m
origin_	SCClassLibrary/Common/Geometry/Rect.sc	/^	origin_ { | pt | left = pt.x; top = pt.y }$/;"	m
oscorr	quarks/MathLib/classes/statistics/extStatistics.sc	/^	oscorr { |that|$/;"	m
out	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	out {$/;"	m
outOfContextReturn	SCClassLibrary/Common/Core/Object.sc	/^	outOfContextReturn { arg method, result;$/;"	m
outSpec	quarks/cruciallib/Instr/Instr.sc	/^	outSpec {$/;"	m
out_	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	out_ { | index |$/;"	m
output	quarks/cruciallib/ServerTools/ServerGui.sc	/^	output { |layout,width=140|$/;"	m
outputBus	SCClassLibrary/Common/Control/Server.sc	/^	outputBus {$/;"	m
outputData	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	outputData {$/;"	m
outputIndex	SCClassLibrary/Common/Audio/UGen.sc	/^	outputIndex { ^0 }$/;"	m
outs_	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	outs_ { | indices |$/;"	m
outset	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	outset { arg val; ^this.quant.obtain(3) }$/;"	m
outsetBy	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	outsetBy {arg h, v;$/;"	m
outset_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	outset_ { arg val; quant = quant.instill(3, val) }$/;"	m
overDub	SCClassLibrary/Common/Math/Signal.sc	/^	overDub { arg aSignal, index=0;$/;"	m
overWrite	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	overWrite { arg aCollection, pos=0;$/;"	m
overWrite	SCClassLibrary/Common/Math/Signal.sc	/^	overWrite { arg aSignal, index=0;$/;"	m
overrides	SCClassLibrary/QtCollider/QView.sc	/^  overrides { arg method; ^this.prOverrides(QView, method) }$/;"	m
overwrite	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	overwrite { | value |$/;"	m
p	SCClassLibrary/Common/Core/Function.sc	/^	p { ^Prout(this) }$/;"	m
p	SCClassLibrary/Common/Core/Thread.sc	/^	p { ^Prout(func) }$/;"	m
package	SCClassLibrary/Common/Quarks/packages.sc	/^	package {$/;"	m
padLeft	SCClassLibrary/Common/Collections/String.sc	/^	padLeft { arg size, string = " ";$/;"	m
padRight	SCClassLibrary/Common/Collections/String.sc	/^	padRight { arg size, string = " ";$/;"	m
pageRect	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  pageRect { ^this.getProperty(\\pageRect) }$/;"	m
pageSize	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  pageSize { ^this.pageRect.size }$/;"	m
pair	SCClassLibrary/Common/Core/Object.sc	/^	pair { arg that; ^[this, that] }$/;"	m
pairs	SCClassLibrary/Common/Core/Object.sc	/^	pairs { arg that;$/;"	m
pairsDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	pairsDo { arg function;$/;"	m
pairsDo	SCClassLibrary/Common/Collections/List.sc	/^	pairsDo { arg function;$/;"	m
pairsDo	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	pairsDo { arg function;$/;"	m
pairsDo	SCClassLibrary/Common/Core/Nil.sc	/^	pairsDo {}$/;"	m
palette	SCClassLibrary/QtCollider/QView.sc	/^  palette {$/;"	m
palette_	SCClassLibrary/QtCollider/QView.sc	/^  palette_ { arg p;$/;"	m
panelSelect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	panelSelect { |panel|$/;"	m
panelSelect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	panelSelect {$/;"	m
paperRect	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  paperRect { ^this.getProperty(\\paperRect) }$/;"	m
papply	quarks/cruciallib/Instr/Instr.sc	/^	papply { arg ... args;$/;"	m
par	SCClassLibrary/Common/Streams/Pspawner.sc	/^	par { | pattern, delta = 0 |$/;"	m
parent	SCClassLibrary/Common/Streams/Stream.sc	/^	parent { ^nil }$/;"	m
parent	SCClassLibrary/QtCollider/QObject.sc	/^  parent { arg class;$/;"	m
parent	SCClassLibrary/QtCollider/QTreeView.sc	/^  parent {$/;"	m
parent	SCClassLibrary/QtCollider/QView.sc	/^  parent { arg class = QView;$/;"	m
parentGroup_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	parentGroup_ { | node |$/;"	m
parentPath	SCClassLibrary/Common/Files/PathName.sc	/^	parentPath {$/;"	m
parents	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	parents { ^nil }$/;"	m
parents	SCClassLibrary/QtCollider/QView.sc	/^  parents {$/;"	m
parse	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	parse { arg pattern, length=inf;$/;"	m
parse	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	parse { arg pattern, length;$/;"	m
parseFile	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	parseFile { arg path, delimiter=$ , blockSize=0, completionFunc;$/;"	m
parseIO	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	parseIO { arg iostream, delimiter=$ , blockSize=0, completionFunc, maxLength=32;$/;"	m
parseYAML	SCClassLibrary/Common/Collections/String.sc	/^	parseYAML {$/;"	m
parseYAMLFile	SCClassLibrary/Common/Collections/String.sc	/^	parseYAMLFile {$/;"	m
partition	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	partition { arg parts=2, min=1;$/;"	m
passiveSelect	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	passiveSelect { arg x;$/;"	m
patchOut	quarks/cruciallib/Players/instrSupport.sc	/^	patchOut { ^ObjectPatchOut(this) }$/;"	m
path	SCClassLibrary/Common/GUI/Document.sc	/^	path {$/;"	m
path	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	path {$/;"	m
path	quarks/cruciallib/Instr/Instr.sc	/^	path { ^path }$/;"	m
path	quarks/cruciallib/Instr/Instr.sc	/^	path { ^ugenClass.filenameSymbol.asString }$/;"	m
pathMatch	SCClassLibrary/Common/Collections/String.sc	/^	pathMatch { _StringPathMatch ^this.primitiveFailed } \/\/ glob$/;"	m
pathMatch	SCClassLibrary/Common/Files/PathName.sc	/^	pathMatch {$/;"	m
pathOnly	SCClassLibrary/Common/Files/PathName.sc	/^	pathOnly {$/;"	m
pathSeparator	SCClassLibrary/Platform/Platform.sc	/^	pathSeparator { ^$\/ }$/;"	m
pathSeparator	SCClassLibrary/Platform/Platform.sc	/^	pathSeparator { ^this.subclassResponsibility }$/;"	m
pathSeparator	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	pathSeparator { ^$\\\\ }$/;"	m
path_	SCClassLibrary/Common/GUI/Document.sc	/^	path_ { |apath|$/;"	m
path_	quarks/cruciallib/Players/AbstractPlayer.sc	/^	path_ { arg p;$/;"	m
pattern_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	pattern_ { arg pat; this.source_(pat) }$/;"	m
pause	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	pause { this.use { ~pauseServerNode.value }  }$/;"	m
pause	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	pause { | pauseTempo| clock.tempo = pauseTempo ? defaultPauseTempo }$/;"	m
pause	SCClassLibrary/Common/Streams/Stream.sc	/^	pause {$/;"	m
pause	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	pause { if(player.notNil) { this.sched { player.pause } } }$/;"	m
pause	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	pause {$/;"	m
pause	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	pause { stream.pause; paused=true }$/;"	m
pause	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	pause { this.stop }$/;"	m
pause	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	pause { | clock, quant = 1 |$/;"	m
pause	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	pause {$/;"	m
pause	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	pause { player.stop }$/;"	m
pauseRecorder	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	pauseRecorder { recorder !? {recorder.pause} }$/;"	m
pauseRecording	SCClassLibrary/Common/Control/Server.sc	/^	pauseRecording {$/;"	m
pauseRecording	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	pauseRecording { arg atTime;$/;"	m
pc1	quarks/MathLib/classes/statistics/extStatistics.sc	/^	pc1 { |e=0.000000000001|$/;"	m
pchRatioKr	quarks/cruciallib/Sample/Sample.sc	/^	pchRatioKr {$/;"	m
pchRatio_	quarks/cruciallib/Players/SFP/SFP.sc	/^	pchRatio_ { arg p;$/;"	m
peak	SCClassLibrary/Common/Math/Signal.sc	/^	peak { _SignalPeak; ^this.primitiveFailed }$/;"	m
peakColor	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  peakColor { ^this.getProperty(\\peakColor) }$/;"	m
peakColor_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  peakColor_ { arg color; this.setProperty(\\peakColor, color) }$/;"	m
peakLevel_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	peakLevel_ { arg val;$/;"	m
peakLevel_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  peakLevel_ { arg val;$/;"	m
peek	SCClassLibrary/Common/Streams/IOStream.sc	/^	peek {$/;"	m
percentile	quarks/MathLib/classes/statistics/extStatistics.sc	/^	percentile { |percent=#[0.25, 0.5, 0.75], interpol=true| $/;"	m
percentile	quarks/MathLib/classes/statistics/extStatistics.sc	/^	percentile { |percent=#[0.25, 0.5, 0.75], interpol=true|$/;"	m
perfectShuffle	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	perfectShuffle {$/;"	m
perform	SCClassLibrary/Common/Core/Object.sc	/^	perform { arg selector ... args;$/;"	m
performBinaryOp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performBinaryOp { arg aSelector, theOperand, adverb;$/;"	m
performBinaryOpOnCartesian	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extNumber.sc	/^	performBinaryOpOnCartesian { arg op, aCartesian, adverb;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Audio/UGen.sc	/^	performBinaryOpOnComplex { arg aSelector, aComplex; ^aComplex.perform(aSelector, this.asComplex) }$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performBinaryOpOnComplex { arg aSelector, aComplex, adverb;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Collections/String.sc	/^	performBinaryOpOnComplex { arg aSelector, aComplex;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	performBinaryOpOnComplex { arg aSelector, aComplex, adverb;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnComplex { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Math/Complex.sc	/^	performBinaryOpOnComplex { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnComplex	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	performBinaryOpOnComplex { arg aSelector, aComplex, adverb; ^aComplex.perform(aSelector, this.asComplex, adverb) }$/;"	m
performBinaryOpOnPoint	SCClassLibrary/Common/Math/Number.sc	/^	performBinaryOpOnPoint { arg op, aPoint, adverb;$/;"	m
performBinaryOpOnQuaternion	quarks/MathLib/classes/various/Quaternion.sc	/^	performBinaryOpOnQuaternion { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnQuaternion	quarks/MathLib/classes/various/Quaternion.sc	/^	performBinaryOpOnQuaternion { arg aSelector, quat, adverb; $/;"	m
performBinaryOpOnSeqColl	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performBinaryOpOnSeqColl { arg aSelector, theOperand, adverb;$/;"	m
performBinaryOpOnSeqColl	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	performBinaryOpOnSeqColl { arg aSelector, aSeqColl, adverb;$/;"	m
performBinaryOpOnSeqColl	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnSeqColl { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnSeqColl	SCClassLibrary/Common/Math/Number.sc	/^	performBinaryOpOnSeqColl { arg aSelector, aSeqColl, adverb;$/;"	m
performBinaryOpOnSignal	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	performBinaryOpOnSignal { arg aSelector, aSignal, adverb;$/;"	m
performBinaryOpOnSignal	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnSignal { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnSignal	SCClassLibrary/Common/Math/Complex.sc	/^	performBinaryOpOnSignal { arg aSelector, aSignal, adverb;$/;"	m
performBinaryOpOnSignal	SCClassLibrary/Common/Math/Signal.sc	/^	performBinaryOpOnSignal { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSignal	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	performBinaryOpOnSignal { arg aSelector, aSignal, adverb;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Collections/String.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Math/Complex.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSimpleNumber	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSimpleNumber	quarks/MathLib/classes/various/Quaternion.sc	/^	performBinaryOpOnSimpleNumber { arg aSelector, aNumber, adverb;$/;"	m
performBinaryOpOnSomething	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnSomething { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnSomething	SCClassLibrary/Common/Core/Symbol.sc	/^	performBinaryOpOnSomething { ^this }$/;"	m
performBinaryOpOnSomething	SCClassLibrary/Common/Geometry/Point.sc	/^	performBinaryOpOnSomething { |aSelector, thing, adverb|$/;"	m
performBinaryOpOnSomething	SCClassLibrary/Common/Geometry/Rect.sc	/^	performBinaryOpOnSomething { |aSelector, thing, adverb|$/;"	m
performBinaryOpOnSomething	SCClassLibrary/Common/Math/Polar.sc	/^	performBinaryOpOnSomething { |aSelector, thing, adverb|$/;"	m
performBinaryOpOnUGen	SCClassLibrary/Common/Core/Object.sc	/^	performBinaryOpOnUGen { arg aSelector, thing, adverb;$/;"	m
performBinaryOpOnUGen	SCClassLibrary/Common/Math/Complex.sc	/^	performBinaryOpOnUGen { arg aSelector, aUGen, adverb;$/;"	m
performBinaryOpOnUGen	SCClassLibrary/Common/Math/Polar.sc	/^	performBinaryOpOnUGen { arg aSelector, aUGen;$/;"	m
performBinaryOpOnUGen	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	performBinaryOpOnUGen { arg aSelector, aUGen;$/;"	m
performDeadCodeElimination	SCClassLibrary/Common/Audio/UGen.sc	/^	performDeadCodeElimination {$/;"	m
performDegreeToKey	SCClassLibrary/Common/Collections/Scale.sc	/^	performDegreeToKey { | degree, stepsPerOctave, accidental = 0 |$/;"	m
performDegreeToKey	SCClassLibrary/Common/Collections/Scale.sc	/^	performDegreeToKey { | scaleDegree, stepsPerOctave, accidental = 0 |$/;"	m
performDegreeToKey	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performDegreeToKey { arg scaleDegree, stepsPerOctave = 12, accidental = 0;$/;"	m
performDegreeToKey	SCClassLibrary/Common/Core/Function.sc	/^	performDegreeToKey { arg scaleDegree, stepsPerOctave = 12, accidental = 0;$/;"	m
performInPlace	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	performInPlace { arg selector, from, to, argList;$/;"	m
performKeyToDegree	SCClassLibrary/Common/Collections/Scale.sc	/^	performKeyToDegree { | degree, stepsPerOctave = 12 |$/;"	m
performKeyToDegree	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performKeyToDegree { | degree, stepsPerOctave = 12 |$/;"	m
performKeyValuePairs	SCClassLibrary/Common/Core/Function.sc	/^	performKeyValuePairs { |selector, pairs|$/;"	m
performKeyValuePairs	SCClassLibrary/Common/Core/Object.sc	/^	performKeyValuePairs { |selector, pairs|$/;"	m
performList	SCClassLibrary/Common/Core/Object.sc	/^	performList { arg selector, arglist;$/;"	m
performMsg	SCClassLibrary/Common/Core/Nil.sc	/^	performMsg {}$/;"	m
performMsg	SCClassLibrary/Common/Core/Object.sc	/^	performMsg { arg msg;$/;"	m
performNearestInList	SCClassLibrary/Common/Collections/Scale.sc	/^	performNearestInList { | degree |$/;"	m
performNearestInList	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performNearestInList { | degree |$/;"	m
performNearestInScale	SCClassLibrary/Common/Collections/Scale.sc	/^	performNearestInScale { | degree, stepsPerOctave=12 | \/\/ collection is sorted$/;"	m
performNearestInScale	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performNearestInScale { arg degree, stepsPerOctave=12; \/\/ collection is sorted$/;"	m
performUnaryOp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	performUnaryOp { arg aSelector;$/;"	m
performWithEnvir	SCClassLibrary/Common/Core/Function.sc	/^	performWithEnvir { |selector, envir|$/;"	m
performWithEnvir	SCClassLibrary/Common/Core/Object.sc	/^	performWithEnvir { |selector, envir|$/;"	m
permute	SCClassLibrary/Common/Collections/Array.sc	/^	permute { arg nthPermutation;$/;"	m
permute	SCClassLibrary/Common/Collections/List.sc	/^	permute { arg nthPermutation;$/;"	m
phase	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	phase { ^this.performUnaryOp('phase') }$/;"	m
phase	SCClassLibrary/Common/Math/Complex.sc	/^	phase { ^atan2(imag, real) }$/;"	m
phase	SCClassLibrary/Common/Math/Polar.sc	/^	phase { ^theta }$/;"	m
phase	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	phase { arg val; ^quant.obtain(1) }$/;"	m
phase	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	phase { ^theta }						\/\/ implemented as a projection$/;"	m
phase_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	phase_ { arg val; quant = quant.instill(1, val) }$/;"	m
phases	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	phases { ^[theta, phi] }$/;"	m
phases	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	phases { ^[ this.theta, 0.0 ] }$/;"	m
phi	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	phi { ^atan2(z, (x.squared + y.squared).sqrt) }$/;"	m
phi	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extNumber.sc	/^	phi { ^0.0 }$/;"	m
phi	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	phi { ^0.0 }$/;"	m
phi	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	phi { ^0.0 }$/;"	m
phi	quarks/MathLib/classes/SpherCoords/extSequenceableCollection.sc	/^	phi { ^this.performUnaryOp('phi') }$/;"	m
pid	SCClassLibrary/DefaultLibrary/Main.sc	/^	pid {$/;"	m
pidRunning	SCClassLibrary/Common/Math/Integer.sc	/^	pidRunning { _PidRunning; ^this.primitiveFailed }$/;"	m
ping	SCClassLibrary/Common/Control/Server.sc	/^	ping { arg n=1, wait=0.1, func;$/;"	m
pipinit	quarks/cruciallib/Players/Silence.sc	/^	pipinit {$/;"	m
pixelSize	SCClassLibrary/QtCollider/QFont.sc	/^  pixelSize { ^( if(hasPointSize){nil}{size} ) }$/;"	m
pixelSize_	SCClassLibrary/QtCollider/QFont.sc	/^  pixelSize_ { arg pixelSize;$/;"	m
pixelStep	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	pixelStep {$/;"	m
pixelStep	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	pixelStep {$/;"	m
pixelStep	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  pixelStep {$/;"	m
pixelStep	SCClassLibrary/QtCollider/QSlider.sc	/^  pixelStep { ^this.getProperty(\\pixelStep) }$/;"	m
pixelStepX	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	pixelStepX { ^(this.bounds.width).reciprocal }$/;"	m
pixelStepX	SCClassLibrary/QtCollider/QSlider2D.sc	/^  pixelStepX {$/;"	m
pixelStepY	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	pixelStepY { ^(this.bounds.height).reciprocal }$/;"	m
pixelStepY	SCClassLibrary/QtCollider/QSlider2D.sc	/^  pixelStepY {$/;"	m
pixels	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	pixels {$/;"	m
pixels_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	pixels_ {|array|$/;"	m
place	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	place { arg view; this.subclassResponsibility(\\place); }$/;"	m
place	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	place { arg view;$/;"	m
place	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	place { arg view;$/;"	m
place	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	place { arg ... args;$/;"	m
plainText	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	plainText { ^this.getProperty(\\plainText); }$/;"	m
plainText	SCClassLibrary/QtCollider/QWebView.sc	/^  plainText { ^this.getProperty( \\plainText ); }$/;"	m
platformClass	SCClassLibrary/Platform/iphone/extMain.sc	/^	platformClass { ^IPhonePlatform }$/;"	m
platformClass	SCClassLibrary/Platform/linux/extMain.sc	/^	platformClass { ^LinuxPlatform }$/;"	m
platformClass	SCClassLibrary/Platform/osx/extMain.sc	/^	platformClass { ^OSXPlatform }$/;"	m
platformClass	SCClassLibrary/Platform/windows/extMain.sc	/^	platformClass { ^WindowsPlatform }$/;"	m
platformDir	SCClassLibrary/Platform/Platform.sc	/^	platformDir { ^this.name.asString }$/;"	m
play	SCClassLibrary/Common/Audio/SynthDef.sc	/^	play { arg target,args,addAction=\\addToHead;$/;"	m
play	SCClassLibrary/Common/Collections/Event.sc	/^	play {$/;"	m
play	SCClassLibrary/Common/Control/Buffer.sc	/^	play { arg loop = false, mul = 1;$/;"	m
play	SCClassLibrary/Common/Control/Bus.sc	/^	play { arg target=0, outbus, fadeTime, addAction=\\addToTail;$/;"	m
play	SCClassLibrary/Common/Control/Score.sc	/^	play { arg server, clock, quant=0.0;$/;"	m
play	SCClassLibrary/Common/Control/SkipJack.sc	/^	play { this.start }$/;"	m
play	SCClassLibrary/Common/Control/Volume.sc	/^	play {arg mute = false;$/;"	m
play	SCClassLibrary/Common/Control/asDefName.sc	/^	play { arg target, outbus = 0, fadeTime = 0.02, addAction=\\addToHead, args;$/;"	m
play	SCClassLibrary/Common/Core/Clock.sc	/^	play { arg task, quant = 1;$/;"	m
play	SCClassLibrary/Common/Core/Clock.sc	/^	play { arg task;$/;"	m
play	SCClassLibrary/Common/Core/Nil.sc	/^	play {}$/;"	m
play	SCClassLibrary/Common/Files/SoundFile.sc	/^	play { | ev, playNow = true |$/;"	m
play	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	play { arg function;$/;"	m
play	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	play { arg function;$/;"	m
play	SCClassLibrary/Common/Math/Signal.sc	/^	play { arg loop=false, mul=0.2, numChannels=1, server;$/;"	m
play	SCClassLibrary/Common/Streams/History.sc	/^	play { |start=0, end, verbose=true|	\/\/ line numbers;$/;"	m
play	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	play {$/;"	m
play	SCClassLibrary/Common/Streams/Patterns.sc	/^	play { arg clock, protoEvent, quant;$/;"	m
play	SCClassLibrary/Common/Streams/Stream.sc	/^	play { arg argClock, doReset = (false), quant;$/;"	m
play	SCClassLibrary/Common/Streams/Stream.sc	/^	play { arg clock, quant;$/;"	m
play	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	play { arg argClock, doReset=false, quant;$/;"	m
play	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	play { arg argClock, protoEvent, quant, doReset=false;$/;"	m
play	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	play { | out, numChannels, group, multi=false, vol, fadeTime, addAction |$/;"	m
play	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	play { | fromIndex, fromNumChannels=2, toIndex, toNumChannels,$/;"	m
play	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	play { this.subclassResponsibility(thisMethod) }$/;"	m
play	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	play {$/;"	m
play	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	play { arg key=\\out, out=0, numChannels=2;$/;"	m
play	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  play { arg bufSize, bus, cycle;$/;"	m
play	quarks/cruciallib/Control/MIDIClock.sc	/^	play {$/;"	m
play	quarks/cruciallib/Gui/SynthConsole.sc	/^	play {$/;"	m
play	quarks/cruciallib/Instr/Instr.sc	/^	play { arg ... args;$/;"	m
play	quarks/cruciallib/Players/AbstractPlayer.sc	/^	play { arg group,atTime,bus;$/;"	m
play	quarks/cruciallib/Sample/Sample.sc	/^	play { \/\/ for testing$/;"	m
playAndDelta	SCClassLibrary/Common/Collections/Event.sc	/^	playAndDelta { | cleanup, mute |$/;"	m
playAndDelta	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	playAndDelta {}$/;"	m
playEditString	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	playEditString { |usePlayN, dropDefaults = false, nameStr|$/;"	m
playN	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	playN { | outs, amps, ins, vol, fadeTime, group, addAction |$/;"	m
playN	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	playN { | out, amp, in, vol, fadeTime, target, addAction |$/;"	m
playNBusToBundle	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	playNBusToBundle { | bundle, outs, amps, ins, bus, vol, fadeTime, group, addAction |$/;"	m
playNDialog	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	playNDialog { | bounds, usePlayN |$/;"	m
playNMode_	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	playNMode_ { |flag = true|$/;"	m
playNString	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	playNString { |dropDefaults = false|$/;"	m
playNToBundle	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	playNToBundle { | bundle, outs, amps, ins, vol, fadeTime, group, addAction |$/;"	m
playNToBundle	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	playNToBundle { | 	bundle,$/;"	m
playNextBar	SCClassLibrary/Common/Core/Clock.sc	/^	playNextBar { arg task; this.schedAbs(this.nextBar, task) }$/;"	m
playOnce	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	playOnce { arg argClock, doReset = (false), quant;$/;"	m
playOnce	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	playOnce { arg argClock, protoEvent, quant;$/;"	m
playStream	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	playStream { | str |$/;"	m
playString	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	playString { |dropDefaults = false|$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	playToBundle { | bundle, out, numChannels,$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	playToBundle { | bundle, fromIndex, fromNumChannels=2, toIndex, toNumChannels,$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	playToBundle { | bundle |$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	playToBundle { | bundle, args |$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	playToBundle { | bundle, args, proxy, addAction = 1 |$/;"	m
playToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	playToBundle { | bundle, extraArgs, target, addAction = 1 |$/;"	m
playToBundle	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	playToBundle { arg bundle, extraArgs, target, addAction=\\addToTail;$/;"	m
playVolume	SCClassLibrary/Common/Control/Volume.sc	/^	playVolume { arg muted = false;$/;"	m
playerIn	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	playerIn { arg object;$/;"	m
playerPattern	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	playerPattern { ^pattern }$/;"	m
playerPattern_	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	playerPattern_ { |playerPattern| pattern = playerPattern }$/;"	m
playingProxies	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	playingProxies { ^object !? { object.arProxyNames({ |px, key| px.monitor.isPlaying }) } ? [] }$/;"	m
playingProxies	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	playingProxies { ^proxyspace.arProxyNames({ |px, key| px.monitor.isPlaying }) }$/;"	m
playingProxies	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	playingProxies { ^this.arProxyNames({ |px, key| px.monitor.isPlaying }) }$/;"	m
plines	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plines { |x, y|$/;"	m
plot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plot { |duration = 0.01, server, bounds, minval, maxval|$/;"	m
plot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plot { |name, bounds, discrete=false, numChannels, minval, maxval|$/;"	m
plot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plot { |name, bounds, minval, maxval|$/;"	m
plot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plot { |size = 400, bounds, minval, maxval, name|$/;"	m
plot	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	plot { arg name, bounds, freeOnClose=false, background=nil, showInfo=true;$/;"	m
plot	quarks/cruciallib/Instr/Instr.sc	/^	plot { arg args,duration=5.0;$/;"	m
plot	quarks/cruciallib/Players/AbstractPlayer.sc	/^	plot { arg duration=5.0, bounds;$/;"	m
plotGraph	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plotGraph { arg n=500, from = 0.0, to = 1.0, name, bounds, discrete = false,$/;"	m
plotHisto	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	plotHisto { arg steps = 100, min, max;$/;"	m
plotTree	SCClassLibrary/Common/GUI/PlusGUI/Control/ServerPlusGUI.sc	/^	plotTree {|interval=0.5|$/;"	m
pointIsInWhichPlot	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	pointIsInWhichPlot { |point|$/;"	m
pointSize	SCClassLibrary/QtCollider/QFont.sc	/^  pointSize { ^( if(hasPointSize){size}{nil} ) }$/;"	m
pointSize_	SCClassLibrary/QtCollider/QFont.sc	/^  pointSize_ { arg pointSize;$/;"	m
points	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	points { |x, y|$/;"	m
pointsTo	SCClassLibrary/Common/Core/Object.sc	/^	pointsTo { arg obj; _ObjectPointsTo; ^this.primitiveFailed }$/;"	m
polar	SCClassLibrary/Common/Math/Number.sc	/^	polar { arg angle; ^Polar.new(this, angle) }$/;"	m
poll	SCClassLibrary/Common/Audio/UGen.sc	/^	poll { arg trig = 10, label, trigid = -1;$/;"	m
poll	SCClassLibrary/Common/Collections/Array.sc	/^	poll { arg trig = 10, label, trigid = -1;$/;"	m
poll	SCClassLibrary/Common/Core/Object.sc	/^	poll { ^this.value }$/;"	m
poll	quarks/cruciallib/Editors/NumberEditor.sc	/^	poll { ^value }$/;"	m
poll	quarks/cruciallib/Players/KrPlayer.sc	/^	poll { ^this }$/;"	m
poll	quarks/cruciallib/Sequencers/BusDriver.sc	/^	poll { ^lastValue }$/;"	m
poll	quarks/cruciallib/Sequencers/BusDriver.sc	/^	poll { ^nil }$/;"	m
poll	quarks/cruciallib/Sequencers/BusDriver.sc	/^	poll { ^value }$/;"	m
polyTouch	SCClassLibrary/Common/Control/MIDIOut.sc	/^	polyTouch { arg chan, note=60, val=64;$/;"	m
pop	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/Environment.sc	/^	pop { ^this.class.pop }$/;"	m
pop	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/LinkedList.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/List.sc	/^	pop { ^array.pop }$/;"	m
pop	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/Set.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Collections/SparseArray.sc	/^	pop {$/;"	m
pop	SCClassLibrary/Common/Core/Nil.sc	/^	pop {}$/;"	m
pop	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	pop { ^this.removeAt(size - 1) }$/;"	m
popFirst	SCClassLibrary/Common/Collections/LinkedList.sc	/^	popFirst {$/;"	m
port	SCClassLibrary/deprecated/deprecated-3.6.sc	/^	port {$/;"	m
port_	SCClassLibrary/deprecated/deprecated-3.6.sc	/^	port_ { |newPort|$/;"	m
pos	SCClassLibrary/Common/Collections/SparseArray.sc	/^	pos {$/;"	m
pos	SCClassLibrary/Common/Files/File.sc	/^	pos { \/\/ current file position$/;"	m
pos_	SCClassLibrary/Common/Files/File.sc	/^	pos_ { arg toPos;$/;"	m
pos_	SCClassLibrary/Common/Streams/IOStream.sc	/^	pos_ { ^this.subclassResponsibility(thisMethod) }$/;"	m
pos_	SCClassLibrary/Common/Streams/IOStream.sc	/^	pos_ { arg toPos;$/;"	m
position	quarks/MathLib/classes/various/Trafo.sc	/^	position {$/;"	m
possibles_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	possibles_ { arg list;$/;"	m
post	SCClassLibrary/Common/Collections/String.sc	/^	post { _PostString }$/;"	m
post	SCClassLibrary/Common/Core/Object.sc	/^	post { this.asString.post }$/;"	m
postCurrentValue	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	postCurrentValue { |x, y|$/;"	m
postDesc	SCClassLibrary/Common/Quarks/Quark.sc	/^	postDesc {$/;"	m
postDoc	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	postDoc { |index|$/;"	m
postInlined	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	postInlined { |index|$/;"	m
postProtectedBacktrace	SCClassLibrary/Common/Core/Error.sc	/^	postProtectedBacktrace {$/;"	m
postString	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	postString {$/;"	m
postString	SCClassLibrary/JITLib/Patterns/extFunction.sc	/^	postString {$/;"	m
postTree	SCClassLibrary/Common/Collections/Library.sc	/^	postTree { arg obj,tabs=0;$/;"	m
postc	SCClassLibrary/Common/Collections/String.sc	/^	postc { "\/\/ ".post; this.post; }$/;"	m
postc	SCClassLibrary/Common/Core/Object.sc	/^	postc { this.asString.postc }$/;"	m
postcln	SCClassLibrary/Common/Collections/String.sc	/^	postcln { "\/\/ ".post; this.postln; }$/;"	m
postcln	SCClassLibrary/Common/Core/Object.sc	/^	postcln { this.asString.postcln; }$/;"	m
postcs	SCClassLibrary/Common/Core/Object.sc	/^	postcs { this.asCompileString.postln }$/;"	m
postf	SCClassLibrary/Common/Collections/String.sc	/^	postf { arg ... items;  ^this.prFormat( items.collect(_.asString) ).post }$/;"	m
postff	SCClassLibrary/backwards_compatibility/extMethods.sc	/^	postff { | size = 8 |$/;"	m
postln	SCClassLibrary/Common/Collections/String.sc	/^	postln { _PostLine }$/;"	m
postln	SCClassLibrary/Common/Core/Object.sc	/^	postln { this.asString.postln; }$/;"	m
postln	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	postln { Post << this }$/;"	m
postmln	quarks/MathLib/classes/various/Matrix.sc	/^	postmln {$/;"	m
postpone	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	postpone { arg time;$/;"	m
pow	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	pow { arg aNumber, adverb; ^this.performBinaryOp('pow', aNumber, adverb) }$/;"	m
pow	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	pow { arg function, adverb; ^this.composeBinaryOp('pow', function, adverb) }$/;"	m
pow	SCClassLibrary/Common/Core/Symbol.sc	/^	pow { ^this }$/;"	m
pow	SCClassLibrary/Common/Math/Complex.sc	/^	pow { arg aNumber; \/\/ return(this ** aNumber)$/;"	m
pow	SCClassLibrary/Common/Math/Number.sc	/^	pow { arg aNumber; ^this.subclassResponsibility(thisMethod) }$/;"	m
pow	SCClassLibrary/Common/Math/Signal.sc	/^	pow { arg aNumber; _Pow; ^aNumber.performBinaryOpOnSignal('pow', this) }$/;"	m
pow	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	pow { arg aNumber, adverb; _Pow; ^aNumber.performBinaryOpOnSimpleNumber('pow', this, adverb) }$/;"	m
pow	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	pow { arg n; var d = this.degree, l = this.offLow, diff = d - l, c0, cs, index;$/;"	m
powerset	SCClassLibrary/Common/Collections/Array.sc	/^	powerset {$/;"	m
powerset	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	powerset {$/;"	m
powerset	SCClassLibrary/Common/Collections/Collection.sc	/^	powerset {$/;"	m
powerset	SCClassLibrary/Common/Collections/Dictionary.sc	/^	powerset {$/;"	m
prAdd	SCClassLibrary/Common/GUI/Document.sc	/^	prAdd {$/;"	m
prAdd	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	prAdd { arg argKey;$/;"	m
prAddCopyMethod	SCClassLibrary/SCDoc/SCDoc.sc	/^    prAddCopyMethod {|node, list|$/;"	m
prAddMenuItem	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	prAddMenuItem { |parent, index, name, hasSubmenu|$/;"	m
prAddMenuSeparator	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	prAddMenuSeparator { |parent, index|$/;"	m
prAddMethodNames	SCClassLibrary/SCDoc/SCDoc.sc	/^    prAddMethodNames {|node, list|$/;"	m
prAddRow	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	prAddRow { rows = rows.add(List.new); }$/;"	m
prAddress	SCClassLibrary/Common/Control/WII.sc	/^	prAddress { |address|$/;"	m
prAllocInit	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prAllocInit { arg classname, initname,args;$/;"	m
prAllocWith	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prAllocWith { arg classname, initname,args;$/;"	m
prApplyFilters	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prApplyFilters {|filterArray, inPlaceBolean, region, maxSize|$/;"	m
prApplyKernel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prApplyKernel {|kernel, crop, inPlace |$/;"	m
prArgv	SCClassLibrary/DefaultLibrary/Main.sc	/^	prArgv {$/;"	m
prAsArray	SCClassLibrary/Common/Audio/Env.sc	/^	prAsArray {$/;"	m
prAsArray	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prAsArray {|type, len|$/;"	m
prAsPyrString	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prAsPyrString {$/;"	m
prAt	SCClassLibrary/Common/Files/Directory.sc	/^	prAt { arg entry, index;$/;"	m
prAttributeRange	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prAttributeRange { |attr|$/;"	m
prAuto	SCClassLibrary/QtCollider/QPalette.sc	/^  prAuto {$/;"	m
prBalanceParens	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prBalanceParens {$/;"	m
prBounds	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	prBounds { arg rect, font;$/;"	m
prBundleSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	prBundleSize {$/;"	m
prCalibration	SCClassLibrary/Common/Control/WII.sc	/^	prCalibration { |calib|$/;"	m
prCat	SCClassLibrary/Common/Collections/String.sc	/^	prCat { arg aString; _ArrayCat }$/;"	m
prChooseFrom	SCClassLibrary/Common/Collections/Library.sc	/^	prChooseFrom { arg dict;$/;"	m
prClear	SCClassLibrary/Common/Core/Clock.sc	/^	prClear {$/;"	m
prClose	SCClassLibrary/Common/Control/OSC.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/Control/SerialPort.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/Control/WII.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/Files/File.sc	/^	prClose { arg pid;$/;"	m
prClose	SCClassLibrary/Common/Files/File.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	prClose { view.prClose }$/;"	m
prClose	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	prClose { dataptr = nil; onClose.value(this); }$/;"	m
prClose	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	prClose { dataptr = nil; action = nil; onClose.value(this); }$/;"	m
prClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prClose { dataptr = nil; onClose.value(this); }$/;"	m
prClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prClose {$/;"	m
prClose	SCClassLibrary/Platform/linux/LID.sc	/^	prClose {$/;"	m
prColor	SCClassLibrary/QtCollider/QPalette.sc	/^  prColor { arg role, group;$/;"	m
prConnect	SCClassLibrary/Common/Control/NetAddr.sc	/^	prConnect {$/;"	m
prConnect	SCClassLibrary/Common/Control/WII.sc	/^	prConnect {$/;"	m
prConnectObject	SCClassLibrary/QtCollider/QObject.sc	/^  prConnectObject { arg signal, object, synchronous = false;$/;"	m
prConnectionClosed	SCClassLibrary/Common/Control/NetAddr.sc	/^	prConnectionClosed {$/;"	m
prConstruct	SCClassLibrary/QtCollider/QObject.sc	/^  prConstruct { arg className, argumentArray;$/;"	m
prDataAvailable	SCClassLibrary/Common/Control/SerialPort.sc	/^	prDataAvailable {$/;"	m
prDealloc	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prDealloc {$/;"	m
prDisconnect	SCClassLibrary/Common/Control/NetAddr.sc	/^	prDisconnect {$/;"	m
prDisconnect	SCClassLibrary/Common/Control/WII.sc	/^	prDisconnect {$/;"	m
prDisconnectObject	SCClassLibrary/QtCollider/QObject.sc	/^  prDisconnectObject { arg signal, object;$/;"	m
prDoAction	SCClassLibrary/QtCollider/BasicViews.sc	/^  prDoAction { arg mods;$/;"	m
prDoStreams	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	prDoStreams {$/;"	m
prDoneAction	SCClassLibrary/Common/Control/SerialPort.sc	/^	prDoneAction {$/;"	m
prDrawAtPoint	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	prDrawAtPoint { arg point, font, color;$/;"	m
prDrawAtPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prDrawAtPoint { arg point, fromRect, operation, fraction;$/;"	m
prDrawInRect	SCClassLibrary/Common/GUI/PlusGUI/Collections/StringPlusGUI.sc	/^	prDrawInRect { arg rect, font, color;$/;"	m
prDrawInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prDrawInRect { arg rect, fromRect, operation, fraction;$/;"	m
prDump	SCClassLibrary/Common/Core/Clock.sc	/^	prDump {$/;"	m
prEnable	SCClassLibrary/Common/Control/WII.sc	/^	prEnable { |onoff|$/;"	m
prEnableButtons	SCClassLibrary/Common/Control/WII.sc	/^	prEnableButtons { |onoff|$/;"	m
prEnableExpansion	SCClassLibrary/Common/Control/WII.sc	/^	prEnableExpansion { |onoff|$/;"	m
prEnableIRSensor	SCClassLibrary/Common/Control/WII.sc	/^	prEnableIRSensor { |onoff|$/;"	m
prEnableMotionSensor	SCClassLibrary/Common/Control/WII.sc	/^	prEnableMotionSensor { |onoff|$/;"	m
prEnableSpeaker	SCClassLibrary/Common/Control/WII.sc	/^	prEnableSpeaker { |onoff |$/;"	m
prEndFullScreen	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prEndFullScreen {$/;"	m
prEndFullScreen	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prEndFullScreen {$/;"	m
prEventCodeSupported	SCClassLibrary/Platform/linux/LID.sc	/^	prEventCodeSupported { | evtType, evtCode |$/;"	m
prEventTypeSupported	SCClassLibrary/Platform/linux/LID.sc	/^	prEventTypeSupported { | evtType |$/;"	m
prFadeTime	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	prFadeTime { ^nodeMap.at(\\fadeTime).value }$/;"	m
prFlat	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	prFlat { |list|$/;"	m
prForEachColumnDataPair	SCClassLibrary/QtCollider/QTreeView.sc	/^  prForEachColumnDataPair { arg data, func;$/;"	m
prFormat	SCClassLibrary/Common/Collections/String.sc	/^	prFormat { arg items; _String_Format ^this.primitiveFailed }$/;"	m
prFree	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prFree {$/;"	m
prFullScreen	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prFullScreen {$/;"	m
prFullScreen	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prFullScreen {$/;"	m
prFunc_	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	prFunc_ {|newFunc|$/;"	m
prGetAbsInfo	SCClassLibrary/Platform/linux/LID.sc	/^	prGetAbsInfo { | evtCode, absInfo |$/;"	m
prGetBackgroundColor	SCClassLibrary/Common/GUI/Document.sc	/^	prGetBackgroundColor { | color |$/;"	m
prGetBackgroundColor	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prGetBackgroundColor { arg color;$/;"	m
prGetBattery	SCClassLibrary/Common/Control/WII.sc	/^	prGetBattery {$/;"	m
prGetBounds	SCClassLibrary/Common/GUI/Document.sc	/^	prGetBounds { | argBounds |$/;"	m
prGetBounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prGetBounds { arg argBounds;$/;"	m
prGetBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prGetBounds { arg argBounds;$/;"	m
prGetBounds	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prGetBounds { arg argBounds;$/;"	m
prGetChildren	SCClassLibrary/QtCollider/QObject.sc	/^  prGetChildren { arg className;$/;"	m
prGetColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prGetColor {|x, y|$/;"	m
prGetFileName	SCClassLibrary/Common/GUI/Document.sc	/^	prGetFileName {$/;"	m
prGetFileName	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prGetFileName {$/;"	m
prGetInfo	SCClassLibrary/Platform/linux/LID.sc	/^	prGetInfo { | info |$/;"	m
prGetInterpolation	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prGetInterpolation {$/;"	m
prGetKeyState	SCClassLibrary/Platform/linux/LID.sc	/^	prGetKeyState { | evtCode |$/;"	m
prGetLastIndex	SCClassLibrary/Common/GUI/Document.sc	/^	prGetLastIndex {$/;"	m
prGetLastIndex	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prGetLastIndex {$/;"	m
prGetLine	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	prGetLine { arg argString;$/;"	m
prGetParent	SCClassLibrary/QtCollider/QObject.sc	/^  prGetParent { arg className;$/;"	m
prGetPixel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prGetPixel {|x,y|$/;"	m
prGetSelectedBackgroundColor	SCClassLibrary/Common/GUI/Document.sc	/^	prGetSelectedBackgroundColor { | color |$/;"	m
prGetTitle	SCClassLibrary/Common/GUI/Document.sc	/^	prGetTitle {$/;"	m
prGetTitle	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prGetTitle {$/;"	m
prGrab	SCClassLibrary/Platform/linux/LID.sc	/^	prGrab { | flag |$/;"	m
prHalt	SCClassLibrary/Common/Core/Object.sc	/^	prHalt { _Halt }$/;"	m
prHandleEvent	SCClassLibrary/Common/Control/WII.sc	/^	prHandleEvent {$/;"	m
prHandleEvent	SCClassLibrary/Platform/linux/LID.sc	/^	prHandleEvent { | evtType, evtCode, evtValue |$/;"	m
prHasColor	SCClassLibrary/QtCollider/QPalette.sc	/^  prHasColor { arg role, group;$/;"	m
prInit	SCClassLibrary/Common/Control/OSC.sc	/^	prInit {$/;"	m
prInit	SCClassLibrary/Common/Control/WII.sc	/^	prInit {$/;"	m
prInit	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prInit { arg argName, argBounds, resizable, border, scroll, view, appmodal = false;$/;"	m
prInit	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	prInit { arg argParent, argBounds,argViewClass;$/;"	m
prInit	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prInit { arg argName, argBounds, resizable, border, scroll, view, appmodal = false;$/;"	m
prInit	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prInit { arg argParent, argBounds, argViewClass;$/;"	m
prInit	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prInit { arg width, height;$/;"	m
prInit	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	prInit { |inevent|$/;"	m
prInit	SCClassLibrary/Platform/linux/LID.sc	/^	prInit { | argPath |$/;"	m
prInit	SCClassLibrary/QtCollider/QPalette.sc	/^  prInit {$/;"	m
prInitFlowViewLayout	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	prInitFlowViewLayout {$/;"	m
prInitFromFile	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prInitFromFile { arg path;$/;"	m
prInitFromURL	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prInitFromURL { arg url;$/;"	m
prInitNode	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	prInitNode {$/;"	m
prInitSpeaker	SCClassLibrary/Common/Control/WII.sc	/^	prInitSpeaker { |format|$/;"	m
prInternalArray	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	prInternalArray {$/;"	m
prInvoke	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prInvoke { arg initname,args, defer=true;$/;"	m
prJSONList	SCClassLibrary/SCDoc/SCDoc.sc	/^    prJSONList {|stream, key, v|$/;"	m
prJSONString	SCClassLibrary/SCDoc/SCDoc.sc	/^    prJSONString {|stream, key, x|$/;"	m
prKeysValuesDo	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	prKeysValuesDo {$/;"	m
prLiveRecord	quarks/cruciallib/Players/PlayerRecorder.sc	/^	prLiveRecord { arg path, atTime, timeOfRequest;$/;"	m
prLoad	quarks/cruciallib/Sample/Sample.sc	/^	prLoad { arg thing,t;$/;"	m
prLoadFinished	SCClassLibrary/QtCollider/QWebView.sc	/^  prLoadFinished { arg ok;$/;"	m
prLoadPixels	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prLoadPixels {arg array, region, startIndex;$/;"	m
prLockFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prLockFocus {$/;"	m
prMakeSynth	quarks/cruciallib/Instr/Instr.sc	/^	prMakeSynth { arg targetStyle,anode,args,bundle,atTime,out=0;$/;"	m
prMuteSpeaker	SCClassLibrary/Common/Control/WII.sc	/^	prMuteSpeaker { |onoff |$/;"	m
prNestedValuesFromDict	SCClassLibrary/Common/Collections/Library.sc	/^	prNestedValuesFromDict { arg dict;$/;"	m
prNext	SCClassLibrary/Common/Streams/Stream.sc	/^	prNext { arg inTime;$/;"	m
prOn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prOn { arg status,func,timeout,listener,oneShot=true,throwErrorOnTimeout=nil;$/;"	m
prOpen	SCClassLibrary/Common/Control/SerialPort.sc	/^	prOpen { | ... args | \/\/ was: | port, baudRate | but that misses out on all the other args?$/;"	m
prOpen	SCClassLibrary/Common/Control/WII.sc	/^	prOpen {$/;"	m
prOpen	SCClassLibrary/Common/Files/File.sc	/^	prOpen { arg pathName, mode;$/;"	m
prOpen	SCClassLibrary/Platform/linux/LID.sc	/^	prOpen { | path |$/;"	m
prOpenRead	SCClassLibrary/Common/Files/SoundFile.sc	/^	prOpenRead { arg pathName;$/;"	m
prOpenUDPPort	SCClassLibrary/DefaultLibrary/Main.sc	/^	prOpenUDPPort {|portNum|$/;"	m
prOpenWrite	SCClassLibrary/Common/Files/SoundFile.sc	/^	prOpenWrite { arg pathName;$/;"	m
prOverrides	SCClassLibrary/QtCollider/QView.sc	/^  prOverrides { arg superclass, method;$/;"	m
prPlay	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	prPlay {$/;"	m
prPlay	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prPlay { arg atTime,bus,timeOfRequest;$/;"	m
prPlaySpeaker	SCClassLibrary/Common/Control/WII.sc	/^	prPlaySpeaker { |play, freq, vol, sample |$/;"	m
prPut	SCClassLibrary/Common/Control/SerialPort.sc	/^	prPut { | byte |$/;"	m
prPutSlot	SCClassLibrary/Common/Collections/SparseArray.sc	/^	prPutSlot { arg nextSlot, index, obj;$/;"	m
prPutTree	SCClassLibrary/Common/Collections/Library.sc	/^	prPutTree { arg keys,items;$/;"	m
prRecord	quarks/cruciallib/Players/PlayerRecorder.sc	/^	prRecord { arg path, endBeat, atTime, timeOfRequest;$/;"	m
prRegisterNotification	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prRegisterNotification {$/;"	m
prRegisterNotification	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	prRegisterNotification {|aNotificationName, obj|$/;"	m
prRelease	SCClassLibrary/QtCollider/QObject.sc	/^  prRelease { heap.remove(this); }$/;"	m
prRemove	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	prRemove {$/;"	m
prRemove	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prRemove {$/;"	m
prRemoveAtPathRecursive	SCClassLibrary/Common/Collections/Library.sc	/^	prRemoveAtPathRecursive { |path, i = 0, item|$/;"	m
prRemoveChild	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	prRemoveChild { |child|$/;"	m
prRemoveChild	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	prRemoveChild { arg child;$/;"	m
prRemoveChild	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prRemoveChild { arg child;$/;"	m
prRemoveMenuItem	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	prRemoveMenuItem {$/;"	m
prResampValues	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	prResampValues {$/;"	m
prReserve	SCClassLibrary/Common/Control/Engine.sc	/^	prReserve { |address, size, availBlock, prevBlock|$/;"	m
prReshape	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	prReshape { |item|$/;"	m
prScanMethodsKeywords	SCClassLibrary/SCDoc/SCDoc.sc	/^    prScanMethodsKeywords {|node|$/;"	m
prSchedulerQueue	SCClassLibrary/Common/Core/Kernel.sc	/^	prSchedulerQueue { ^schedulerQueue }$/;"	m
prSelectLine	SCClassLibrary/Common/GUI/Document.sc	/^	prSelectLine { | line |$/;"	m
prSelectLine	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSelectLine { arg line;$/;"	m
prSend	SCClassLibrary/Common/Control/OSCBundle.sc	/^	prSend { arg server, delta, timeOfRequest;$/;"	m
prSend	SCClassLibrary/Common/Control/OSCBundle.sc	/^	prSend { arg server, delta,timeOfRequest;$/;"	m
prSetAddress	SCClassLibrary/Common/Control/WII.sc	/^	prSetAddress { |address|$/;"	m
prSetBackground	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSetBackground { arg color; \/\/ currently does nothing$/;"	m
prSetBackgroundColor	SCClassLibrary/Common/GUI/Document.sc	/^	prSetBackgroundColor { | color |$/;"	m
prSetBackgroundColor	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetBackgroundColor { arg color;$/;"	m
prSetBounds	SCClassLibrary/Common/GUI/Document.sc	/^	prSetBounds { | argBounds |$/;"	m
prSetBounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prSetBounds { arg argBounds;$/;"	m
prSetBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prSetBounds { arg argBounds;$/;"	m
prSetBounds	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetBounds { arg argBounds;$/;"	m
prSetColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSetColor {|color, x, y|$/;"	m
prSetColor	SCClassLibrary/QtCollider/QPalette.sc	/^  prSetColor { arg color, role, group;$/;"	m
prSetCurve	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prSetCurve { |arr|$/;"	m
prSetCurves	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	prSetCurves { |arr|$/;"	m
prSetFileName	SCClassLibrary/Common/GUI/Document.sc	/^	prSetFileName { | apath |$/;"	m
prSetFileName	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetFileName {|apath|$/;"	m
prSetFont	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetFont { arg font, rangeStart, rangeSize;$/;"	m
prSetInterpolation	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSetInterpolation {|index|$/;"	m
prSetLayout	SCClassLibrary/QtCollider/QView.sc	/^  prSetLayout { arg layout;$/;"	m
prSetLedState	SCClassLibrary/Platform/linux/LID.sc	/^	prSetLedState { |evtCode, evtValue|	\/\/ added by Marije Baalman$/;"	m
prSetMscState	SCClassLibrary/Platform/linux/LID.sc	/^	prSetMscState { |evtCode, evtValue|$/;"	m
prSetName	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	prSetName { arg argName;$/;"	m
prSetName	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	prSetName { arg argName;$/;"	m
prSetName	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSetName { arg newName; \/\/ currently does nothing$/;"	m
prSetNextEvent	SCClassLibrary/Common/Streams/PmonoStreams.sc	/^	prSetNextEvent { |inevent|$/;"	m
prSetPixel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSetPixel {|rgbaInteger, x, y|$/;"	m
prSetSelectedBackgroundColor	SCClassLibrary/Common/GUI/Document.sc	/^	prSetSelectedBackgroundColor { | color |$/;"	m
prSetSelectedBackgroundColor	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetSelectedBackgroundColor { arg color;$/;"	m
prSetState	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	prSetState {|bool|$/;"	m
prSetState	quarks/cruciallib/Gui/ActionButton.sc	/^	prSetState { arg newstate;$/;"	m
prSetStatus	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prSetStatus { arg newStatus;$/;"	m
prSetTitle	SCClassLibrary/Common/GUI/Document.sc	/^	prSetTitle { | argName |$/;"	m
prSetTitle	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prSetTitle { arg argName;$/;"	m
prSetVibration	SCClassLibrary/Common/Control/WII.sc	/^	prSetVibration { |onoff|$/;"	m
prSetViewParams	SCClassLibrary/Common/GUI/Base/EZText.sc	/^	prSetViewParams { \/\/ sets resize and alignment for different layouts$/;"	m
prSimpleNumberSeries	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	prSimpleNumberSeries { arg second, last;$/;"	m
prSplit	SCClassLibrary/Common/Control/Engine.sc	/^	prSplit { |availBlock, n, used = true|$/;"	m
prStart	SCClassLibrary/Common/Core/Clock.sc	/^	prStart { arg tempo;$/;"	m
prStart	SCClassLibrary/Common/Core/Thread.sc	/^	prStart { arg inval;$/;"	m
prStartDrag	SCClassLibrary/QtCollider/QView.sc	/^  prStartDrag { arg label, data, dataAsString;$/;"	m
prStop	SCClassLibrary/Common/Core/Clock.sc	/^	prStop {$/;"	m
prStop	SCClassLibrary/Common/Core/Thread.sc	/^	prStop {$/;"	m
prStop	SCClassLibrary/Common/Streams/Stream.sc	/^	prStop {$/;"	m
prSync	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prSync { 	\/\/ should never be used -- be provided in case$/;"	m
prSysex	SCClassLibrary/Common/Control/MIDIOut.sc	/^	prSysex { arg uid, packet;$/;"	m
prSystem	SCClassLibrary/QtCollider/QPalette.sc	/^  prSystem {$/;"	m
prTileInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prTileInRect { arg rect, fromRect, operation, fraction;$/;"	m
prTry	SCClassLibrary/Common/Core/Function.sc	/^	prTry {$/;"	m
prUnarchive	SCClassLibrary/Common/Collections/Array.sc	/^	prUnarchive { arg slotArray;$/;"	m
prUnixCmd	SCClassLibrary/Common/Collections/String.sc	/^	prUnixCmd {$/;"	m
prUnlace	SCClassLibrary/Common/Collections/Array.sc	/^	prUnlace { arg clumpSize=2, numChan=1;$/;"	m
prUnlockFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prUnlockFocus {$/;"	m
prUpdatePixels	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prUpdatePixels {arg array, startIndex;$/;"	m
prUpdatePixelsInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prUpdatePixelsInRect {arg array, rect, startIndex;$/;"	m
prValidItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  prValidItem { arg treeView_;$/;"	m
prValidItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  prValidItem {$/;"	m
prWiiSetLED	SCClassLibrary/Common/Control/WII.sc	/^	prWiiSetLED { |states|$/;"	m
prWriteName	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	prWriteName { arg layout,name;$/;"	m
prWriteName	quarks/cruciallib/Instr/PatchGui.sc	/^	prWriteName { arg layout,name;$/;"	m
prWriteToFile	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	prWriteToFile { arg path, format;$/;"	m
pr_besselasympt0	quarks/MathLib/classes/various/Bessel.sc	/^	pr_besselasympt0 {$/;"	m
pr_besselasympt1	quarks/MathLib/classes/various/Bessel.sc	/^	pr_besselasympt1 {$/;"	m
pr_calc_j0	quarks/MathLib/classes/various/Bessel.sc	/^	pr_calc_j0 {	$/;"	m
pr_calc_j1	quarks/MathLib/classes/various/Bessel.sc	/^	pr_calc_j1 {$/;"	m
pr_do	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	pr_do { |action, curdict, catpath|$/;"	m
pr_project	quarks/MathLib/classes/gui/ScatterView.sc	/^	pr_project {$/;"	m
praddMethod	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	praddMethod {$/;"	m
prclose	SCClassLibrary/Common/GUI/Document.sc	/^	prclose {$/;"	m
prclose	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prclose {$/;"	m
preferences	SCClassLibrary/Platform/osx/extMain.sc	/^	preferences {$/;"	m
preferencesAction	SCClassLibrary/Platform/osx/extMain.sc	/^	preferencesAction {$/;"	m
preferencesAction_	SCClassLibrary/Platform/osx/extMain.sc	/^	preferencesAction_ { arg f;$/;"	m
preloadData	quarks/cruciallib/Players/SFP/SFP.sc	/^	preloadData { arg startAt=0,endAt,group,bundle,parentSegmentBuffers;$/;"	m
preloadData	quarks/cruciallib/Players/SFP/SFP.sc	/^	preloadData { arg startAt=0,endAt; file.preloadData(startAt,endAt) }$/;"	m
prepare	quarks/cruciallib/Gui/SynthConsole.sc	/^	prepare {$/;"	m
prepareAndQSpawn	quarks/cruciallib/Players/PlayerSocket.sc	/^	prepareAndQSpawn { arg player,releaseTime;$/;"	m
prepareAndSpawn	quarks/cruciallib/Players/PlayerSocket.sc	/^	prepareAndSpawn { arg player,releaseTime;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Instr/InstrSpawner.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Instr/Patch.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Players/PlayerMixer.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareChildrenToBundle	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	prepareChildrenToBundle { arg bundle;$/;"	m
prepareEvent	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	prepareEvent { | event |$/;"	m
prepareForPlay	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prepareForPlay { arg group,private = false,bus;$/;"	m
prepareForPlay	quarks/cruciallib/Players/instrSupport.sc	/^	prepareForPlay { arg group,private,bus;$/;"	m
prepareForProxySynthDef	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	prepareForProxySynthDef { arg proxy;$/;"	m
prepareForProxySynthDef	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	prepareForProxySynthDef { ^this }$/;"	m
prepareForProxySynthDef	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	prepareForProxySynthDef { ^this.subclassResponsibility(thisMethod) }$/;"	m
prepareForProxySynthDef	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	prepareForProxySynthDef { ^{ this.value } }$/;"	m
prepareForProxySynthDef	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	prepareForProxySynthDef { arg proxy;$/;"	m
prepareForRecord	SCClassLibrary/Common/Control/Server.sc	/^	prepareForRecord { arg path;$/;"	m
prepareForRecord	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	prepareForRecord {$/;"	m
prepareForRecord	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	prepareForRecord { arg basePath;$/;"	m
prepareOutput	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	prepareOutput { } \/\/ see subclass$/;"	m
prepareOutput	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	prepareOutput {$/;"	m
preparePartConv	SCClassLibrary/Common/Audio/PartConv.sc	/^	preparePartConv { arg buf, fftsize;$/;"	m
preparePlayer	quarks/cruciallib/Players/HasSubject.sc	/^	preparePlayer { arg player,bus;$/;"	m
preparePlayer	quarks/cruciallib/Players/PlayerSocket.sc	/^	preparePlayer { arg player,onComplete;$/;"	m
preparePlayer	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	preparePlayer { arg player;$/;"	m
prepareToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	prepareToBundle { | argGroup, bundle, addAction = \\addToTail |$/;"	m
prepareToBundle	quarks/cruciallib/Control/MIDIClock.sc	/^	prepareToBundle { arg group,b;$/;"	m
prepareToBundle	quarks/cruciallib/Instr/Instr.sc	/^	prepareToBundle { arg group,bundle;$/;"	m
prepareToBundle	quarks/cruciallib/Instr/InstrSpawner.sc	/^	prepareToBundle { arg agroup,bundle,private = false, bus,defWasLoaded = false;$/;"	m
prepareToBundle	quarks/cruciallib/Instr/Interface.sc	/^	prepareToBundle { arg agroup,bundle,private=false,bus,defWasLoaded = false;$/;"	m
prepareToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	prepareToBundle { arg agroup,bundle,private = false, bus;$/;"	m
prepareToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	prepareToBundle { arg  group,bundle;$/;"	m
prepareToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	prepareToBundle { arg group,bundle;$/;"	m
prepareToBundle	quarks/cruciallib/Sample/Sample.sc	/^	prepareToBundle { arg group,bundle;$/;"	m
prepareToBundle	quarks/cruciallib/Scheduling/TempoBus.sc	/^	prepareToBundle { arg group,bundle;$/;"	m
prevPrime	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	prevPrime { ^this.performUnaryOp('prevPrime') }$/;"	m
prevPrime	SCClassLibrary/Common/Math/Integer.sc	/^	prevPrime { _PrevPrime }$/;"	m
previousPowerOf	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	previousPowerOf { arg base; ^pow(base, ceil(log(this) \/ log(base)) - 1) }$/;"	m
primCleanup	SCClassLibrary/Common/Control/SerialPort.sc	/^	primCleanup {$/;"	m
prime	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	prime { | obj |$/;"	m
primitive	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	primitive {^dataptr;}$/;"	m
primitiveFailed	SCClassLibrary/Common/Core/Object.sc	/^	primitiveFailed {$/;"	m
primitiveIndex	SCClassLibrary/Common/Core/Symbol.sc	/^	primitiveIndex {$/;"	m
prinitByIndex	SCClassLibrary/Common/GUI/Document.sc	/^	prinitByIndex { | idx |$/;"	m
prinitByIndex	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prinitByIndex { arg idx;$/;"	m
prinitByString	SCClassLibrary/Common/GUI/Document.sc	/^	prinitByString { | title, str, makeListener |$/;"	m
prinitByString	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prinitByString { arg title, str, makeListener;$/;"	m
prinsertText	SCClassLibrary/Common/GUI/Document.sc	/^	prinsertText { | dataPtr, txt |$/;"	m
prinsertText	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	prinsertText { arg dataPtr, txt;$/;"	m
print	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  print { |aPrintFunc|$/;"	m
print	quarks/cruciallib/Gui/SynthConsole.sc	/^	print {$/;"	m
printAll	SCClassLibrary/Common/Collections/Collection.sc	/^	printAll { |before, after|$/;"	m
printClassNameOn	SCClassLibrary/Common/Core/Object.sc	/^	printClassNameOn { arg stream;$/;"	m
printItemsOn	SCClassLibrary/Common/Collections/Collection.sc	/^	printItemsOn { | stream |$/;"	m
printItemsOn	SCClassLibrary/Common/Collections/Dictionary.sc	/^	printItemsOn { arg stream, itemsPerLine = 5;$/;"	m
printItemsOn	quarks/MathLib/classes/various/Matrix.sc	/^	printItemsOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Audio/InOut.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Array.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Array2D.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Association.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Collection.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Collections/Event.sc	/^	printOn { arg stream, itemsPerLine = 5;$/;"	m
printOn	SCClassLibrary/Common/Collections/Interval.sc	/^	printOn { arg stream; this.storeOn(stream) }$/;"	m
printOn	SCClassLibrary/Common/Collections/Library.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Pair.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Collections/Scale.sc	/^	printOn { |stream|$/;"	m
printOn	SCClassLibrary/Common/Collections/String.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/Buffer.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/Bus.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/Engine.sc	/^	printOn { |stream| this.storeOn(stream) }$/;"	m
printOn	SCClassLibrary/Common/Control/GeneralHID.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Control/HIDDeviceService.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Control/MIDIOut.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/NetAddr.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Control/Node.sc	/^	printOn { arg stream; stream << this.class.name << "(" << nodeID <<")" }$/;"	m
printOn	SCClassLibrary/Common/Control/Node.sc	/^	printOn { arg stream; stream << this.class.name << "(" <<< defName << " : " << nodeID <<")" }$/;"	m
printOn	SCClassLibrary/Common/Control/OSCService.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	printOn { arg stream; stream << this.class.name << "(" <<* [key, msgType, msgNum, chan, argTemplate] << ")" }$/;"	m
printOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	printOn { arg stream; stream << this.class.name << "(" <<* [key, path, srcID, recvPort, argTemplate] << ")" }$/;"	m
printOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	printOn { arg stream; stream << this.class.name << "(" <<* [msgType, msgNum, chan, argTemplate] << ")" }$/;"	m
printOn	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	printOn { arg stream; stream << this.class.name << "(" <<* [path, srcID, recvPort, argTemplate] << ")" }$/;"	m
printOn	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Control/Server.sc	/^	printOn { |stream|$/;"	m
printOn	SCClassLibrary/Common/Control/WII.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Common/Core/Boolean.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Char.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Color.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Kernel.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Nil.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Object.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Ref.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Core/Symbol.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Files/PathName.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/GUI/ControlModel.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Geometry/Point.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Geometry/Rect.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Math/Complex.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Math/Polar.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Quarks/Quark.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Common/Streams/Quant.sc	/^	printOn { |stream|$/;"	m
printOn	SCClassLibrary/JITLib/Patterns/extPostAsCode.sc	/^	printOn { |stream|$/;"	m
printOn	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	printOn { arg stream;$/;"	m
printOn	SCClassLibrary/Platform/linux/LID.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/Platform/osx/MXHID.sc	/^	printOn { | stream |$/;"	m
printOn	SCClassLibrary/SCDoc/SCDoc.sc	/^    printOn {|stream|$/;"	m
printOn	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	printOn { arg stream;$/;"	m
printOn	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	printOn { arg stream;$/;"	m
printOn	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	printOn { arg stream;$/;"	m
printOn	quarks/MathLib/classes/various/Matrix.sc	/^	printOn { | stream |$/;"	m
printOn	quarks/MathLib/classes/various/Quaternion.sc	/^	printOn { arg stream;$/;"	m
printOn	quarks/MathLib/classes/various/Trafo.sc	/^	printOn { | stream |$/;"	m
printOn	quarks/cruciallib/Instr/Patch.sc	/^	printOn { arg s;$/;"	m
printOn	quarks/cruciallib/Players/instrSupport.sc	/^	printOn { |stream|$/;"	m
printOn	quarks/cruciallib/Sample/Sample.sc	/^	printOn { |stream| this.storeOn(stream) }$/;"	m
printPath	quarks/cruciallib/Gui/SynthConsole.sc	/^	printPath {$/;"	m
printcsAll	SCClassLibrary/Common/Collections/Collection.sc	/^	printcsAll { this.do { | item | item.postcs; }; } \/\/ convenience method$/;"	m
probabilityOf	quarks/MathLib/classes/statistics/informationTheory.sc	/^	probabilityOf { arg obj;$/;"	m
processRest	SCClassLibrary/Common/Streams/Rest.sc	/^	processRest { ^this }$/;"	m
processRest	SCClassLibrary/Common/Streams/Rest.sc	/^	processRest { |inval|$/;"	m
product	SCClassLibrary/Common/Collections/Collection.sc	/^	product { | function |$/;"	m
program	SCClassLibrary/Common/Control/MIDIOut.sc	/^	program { arg chan, num=1;$/;"	m
promptToSave	SCClassLibrary/Common/GUI/Document.sc	/^	promptToSave {$/;"	m
promptToSave_	SCClassLibrary/Common/GUI/Document.sc	/^	promptToSave_ { | bool |$/;"	m
propen	SCClassLibrary/Common/GUI/Document.sc	/^	propen { | path, selectionStart=0, selectionLength=0 |$/;"	m
propen	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	propen { arg path, selectionStart=0, selectionLength=0;$/;"	m
properties	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	properties { ^super.properties ++ #[\\spacing] }$/;"	m
properties	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	properties {$/;"	m
properties	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	properties {$/;"	m
properties	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	properties { ^super.properties ++ #[\\spacing] }$/;"	m
properties	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	properties {$/;"	m
properties	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	properties {$/;"	m
properties	SCClassLibrary/QtCollider/QObject.sc	/^  properties {$/;"	m
protect	SCClassLibrary/Common/Audio/SynthDef.sc	/^			protect {$/;"	m
protect	SCClassLibrary/Common/Audio/SynthDef.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^					protect {$/;"	m
protect	SCClassLibrary/Common/Audio/SynthDesc.sc	/^			protect {$/;"	m
protect	SCClassLibrary/Common/Audio/SynthDesc.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Collections/Environment.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Control/Buffer.sc	/^			protect {$/;"	m
protect	SCClassLibrary/Common/Control/Score.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Control/Server.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Core/Function.sc	/^	protect { arg handler;$/;"	m
protect	SCClassLibrary/Common/Core/Kernel.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Core/Object.sc	/^					protect {$/;"	m
protect	SCClassLibrary/Common/Core/Object.sc	/^			protect {$/;"	m
protect	SCClassLibrary/Common/Files/SoundFile.sc	/^					protect {$/;"	m
protect	SCClassLibrary/Common/Files/SoundFile.sc	/^				protect {$/;"	m
protect	SCClassLibrary/Common/Files/SoundFile.sc	/^			protect {$/;"	m
protect	SCClassLibrary/Common/Files/SoundFile.sc	/^		protect {$/;"	m
protect	SCClassLibrary/Common/Quarks/Quarks.sc	/^					protect {$/;"	m
protect	SCClassLibrary/Common/Streams/History.sc	/^		protect {$/;"	m
protect	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^			protect {$/;"	m
protect	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^		protect { file.putAll(bytes) } { file.close }$/;"	m
protect	SCClassLibrary/QtCollider/QtGUI.sc	/^    protect { this.prSetStyle(styleName) } { |err| if(err.isNil){style = styleName} };$/;"	m
protect	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^			protect {$/;"	m
protect	quarks/cruciallib/Instr/InstrSynthDef.sc	/^		protect {$/;"	m
proxy	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	proxy { ^this.object }$/;"	m
proxyControlClass	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	proxyControlClass { ^PatternControl }$/;"	m
proxyControlClass	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	proxyControlClass { ^StreamControl }$/;"	m
proxyControlClass	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	proxyControlClass {$/;"	m
proxyControlClass	quarks/cruciallib/JITLibCrucialWrappers/wrapCXForNodeProxy.sc	/^	proxyControlClass {$/;"	m
proxyNames	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	proxyNames { |rate, func=true|$/;"	m
proxy_	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	proxy_ { |proxy| ^this.object_(proxy) }$/;"	m
proxy_	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	proxy_ { arg px;$/;"	m
proxy_	SCClassLibrary/JITLib/GUI/ProxyMonitorGui.sc	/^	proxy_ { |inproxy|$/;"	m
proxyspace	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	proxyspace { ^object }$/;"	m
proxyspace	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	proxyspace {$/;"	m
proxyspace_	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	proxyspace_ { |obj| this.object_(obj) }$/;"	m
prune	SCClassLibrary/Common/Audio/UGen.sc	/^	prune { arg min, max, type;$/;"	m
prune	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	prune { arg ... args; ^this.multiChannelPerform('prune', *args) }$/;"	m
pseudoInverse	quarks/MathLib/classes/various/Matrix.sc	/^	pseudoInverse {$/;"	m
psinit	quarks/cruciallib/Players/PlayerSocket.sc	/^	psinit {$/;"	m
pueinit	quarks/cruciallib/Editors/NumberEditor.sc	/^	pueinit { arg initVal,v,l;$/;"	m
pulse	SCClassLibrary/Common/Collections/Harmonics.sc	/^	pulse { arg wavelength=4, iphase=0, duty = 0.5, mul=1.0, add=0.0;$/;"	m
push	SCClassLibrary/Common/Collections/Environment.sc	/^	push { this.class.push(this) }$/;"	m
push	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	push {$/;"	m
push	SCClassLibrary/Common/Core/Nil.sc	/^	push { arg function; ^function.value }$/;"	m
pushForKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	pushForKeycode { arg keycode,requireMask,denyMask,function,description;$/;"	m
pushForUnicode	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	pushForUnicode { arg unicode,requireMask,denyMask,function,description;$/;"	m
put	SCClassLibrary/Common/Collections/Array2D.sc	/^	put { arg row, col, val;$/;"	m
put	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	put { arg index, item;$/;"	m
put	SCClassLibrary/Common/Collections/Bag.sc	/^	put { ^this.shouldNotImplement(thisMethod) }$/;"	m
put	SCClassLibrary/Common/Collections/Dictionary.sc	/^	put { arg key, value;$/;"	m
put	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	put { arg key, obj;$/;"	m
put	SCClassLibrary/Common/Collections/Interval.sc	/^	put { ^this.shouldNotImplement(thisMethod) }$/;"	m
put	SCClassLibrary/Common/Collections/Library.sc	/^	put { arg ... path;$/;"	m
put	SCClassLibrary/Common/Collections/LinkedList.sc	/^	put { arg index, item;$/;"	m
put	SCClassLibrary/Common/Collections/List.sc	/^	put { arg i, item; array.put(i, item) }$/;"	m
put	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	put { arg key, obj;$/;"	m
put	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	put { arg time, item;$/;"	m
put	SCClassLibrary/Common/Collections/SparseArray.sc	/^	put { arg index, obj;$/;"	m
put	SCClassLibrary/Common/Control/SerialPort.sc	/^	put { | byte, timeout=0.005 |$/;"	m
put	SCClassLibrary/Common/GUI/Model.sc	/^	put { arg what, action;$/;"	m
put	SCClassLibrary/Common/Streams/IOStream.sc	/^	put { arg char;$/;"	m
put	SCClassLibrary/Common/Streams/IOStream.sc	/^	put { arg item;$/;"	m
put	SCClassLibrary/Common/Streams/Stream.sc	/^	put { arg item;$/;"	m
put	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	put { arg item; this.write(item); }$/;"	m
put	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	put { | index, obj, channelOffset = 0, extraArgs, now = true |		var container, bundle, orderIndex;$/;"	m
put	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	put {arg key, item; \/\/ any identical item is removed first$/;"	m
put	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	put { arg prevObj, nextObj, weights;$/;"	m
put	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	put { arg prevkey, nextkeys, weights, precision=0.01;$/;"	m
put	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	put { arg i, item;$/;"	m
put	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	put { arg index, obj;$/;"	m
put	quarks/MathLib/classes/various/Matrix.sc	/^	put { arg row, col, val; $/;"	m
put	quarks/cruciallib/Sample/Sample.sc	/^	put { arg i,v;$/;"	m
put	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	put { arg key,value; dict.put(key,value) }$/;"	m
put	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	put { arg key,value; dict.put(key,value) }$/;"	m
putAll	SCClassLibrary/Common/Collections/Dictionary.sc	/^	putAll { arg ... dictionaries;$/;"	m
putAll	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	putAll { arg ... dictionaries;$/;"	m
putAll	SCClassLibrary/Common/Control/SerialPort.sc	/^	putAll { | bytes, timeout=0.005 |$/;"	m
putAll	SCClassLibrary/Common/Streams/IOStream.sc	/^	putAll { arg aCollection;$/;"	m
putAll	SCClassLibrary/Common/Streams/Stream.sc	/^	putAll { arg aCollection;$/;"	m
putAll	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putAll { arg aCollection;$/;"	m
putAll	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	putAll { | list, index = (0), channelOffset = 0 |$/;"	m
putAll	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	putAll { arg args;$/;"	m
putAtPath	SCClassLibrary/Common/Collections/Library.sc	/^	putAtPath { arg path, val;$/;"	m
putChar	SCClassLibrary/Common/Streams/IOStream.sc	/^	putChar { arg aChar; this.put(aChar.ascii); }$/;"	m
putChar	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putChar { arg aChar; _FilePutChar; ^this.primitiveFailed; }$/;"	m
putCheck	SCClassLibrary/Common/Collections/Set.sc	/^	putCheck { arg index, item;$/;"	m
putCol	quarks/MathLib/classes/various/Matrix.sc	/^	putCol { arg col, vals;$/;"	m
putCurve	quarks/cruciallib/Editors/EnvEditor.sc	/^	putCurve { arg i,c;$/;"	m
putDouble	SCClassLibrary/Common/Streams/IOStream.sc	/^	putDouble { arg aFloat;$/;"	m
putDouble	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putDouble { arg aFloat; _FilePutDouble; ^this.primitiveFailed; }$/;"	m
putDoubleLE	SCClassLibrary/Common/Streams/IOStream.sc	/^	putDoubleLE { arg aFloat;$/;"	m
putDoubleLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putDoubleLE { arg aFloat; _FilePutDoubleLE; ^this.primitiveFailed; }$/;"	m
putEach	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	putEach { arg keys, values;$/;"	m
putEach	SCClassLibrary/Common/Collections/Collection.sc	/^	putEach { arg keys, values;$/;"	m
putFirst	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	putFirst { arg obj; if (this.size > 0, { ^this.put(0, obj) }) }$/;"	m
putFloat	SCClassLibrary/Common/Streams/IOStream.sc	/^	putFloat { arg aFloat;$/;"	m
putFloat	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putFloat { arg aFloat; _FilePutFloat; ^this.primitiveFailed; }$/;"	m
putFloatLE	SCClassLibrary/Common/Streams/IOStream.sc	/^	putFloatLE { arg aFloat;$/;"	m
putFloatLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putFloatLE { arg aFloat; _FilePutFloatLE; ^this.primitiveFailed; }$/;"	m
putGet	SCClassLibrary/Common/Collections/Dictionary.sc	/^	putGet { arg key, value;$/;"	m
putIfNotDefault	SCClassLibrary/Common/Collections/SparseArray.sc	/^	putIfNotDefault { arg i, item;$/;"	m
putInt16	SCClassLibrary/Common/Streams/IOStream.sc	/^	putInt16 { arg anInteger;$/;"	m
putInt16	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putInt16 { arg anInteger; _FilePutInt16; ^this.primitiveFailed; }$/;"	m
putInt16LE	SCClassLibrary/Common/Streams/IOStream.sc	/^	putInt16LE { arg anInteger;$/;"	m
putInt16LE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putInt16LE { arg anInteger; _FilePutInt16LE; ^this.primitiveFailed; }$/;"	m
putInt32	SCClassLibrary/Common/Streams/IOStream.sc	/^	putInt32 { arg anInteger;$/;"	m
putInt32	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putInt32 { arg anInteger; _FilePutInt32; ^this.primitiveFailed; }$/;"	m
putInt32LE	SCClassLibrary/Common/Streams/IOStream.sc	/^	putInt32LE { arg anInteger;$/;"	m
putInt32LE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putInt32LE { arg anInteger; _FilePutInt32LE; ^this.primitiveFailed; }$/;"	m
putInt8	SCClassLibrary/Common/Streams/IOStream.sc	/^	putInt8 { arg anInteger; this.put(anInteger & 255); }$/;"	m
putInt8	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putInt8 { arg anInteger; _FilePutInt8; ^this.primitiveFailed; }$/;"	m
putLast	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	putLast { arg obj; if (this.size > 0, { ^this.put(this.size - 1, obj) }) }$/;"	m
putLevel	quarks/cruciallib/Editors/EnvEditor.sc	/^	putLevel { arg i,l;$/;"	m
putN	SCClassLibrary/Common/Streams/Stream.sc	/^	putN { arg n, item;$/;"	m
putPairs	SCClassLibrary/Common/Collections/Dictionary.sc	/^	putPairs { arg args;$/;"	m
putPascalString	SCClassLibrary/Common/Streams/IOStream.sc	/^	putPascalString { arg aString;$/;"	m
putPascalString	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putPascalString { arg aString;$/;"	m
putPlayer	quarks/cruciallib/Players/PlayerMixer.sc	/^	putPlayer { arg i,pl;$/;"	m
putRow	quarks/MathLib/classes/various/Matrix.sc	/^	putRow { arg row, vals;$/;"	m
putSeries	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	putSeries { arg first, second, last, value;$/;"	m
putSeries	SCClassLibrary/Common/Collections/List.sc	/^	putSeries { arg first, second, last, value;$/;"	m
putSeries	SCClassLibrary/Common/Collections/SparseArray.sc	/^	putSeries { arg first, second, last, value;$/;"	m
putSeries	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	putSeries { | first, second, last, value |$/;"	m
putSpec	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	putSpec { |key, obj|$/;"	m
putString	SCClassLibrary/Common/Streams/IOStream.sc	/^	putString { arg aString;$/;"	m
putString	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putString { arg aString; _FilePutString; ^this.primitiveFailed; }$/;"	m
putString0	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	putString0 { arg aString;$/;"	m
putTime	quarks/cruciallib/Editors/EnvEditor.sc	/^	putTime { arg i,t;$/;"	m
putTree	SCClassLibrary/Common/Collections/Library.sc	/^	putTree { arg ... items;$/;"	m
pvcalc	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	pvcalc { |numframes, func, frombin=0, tobin, zeroothers=0|$/;"	m
pvcalc2	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	pvcalc2 { |chain2, numframes, func, frombin=0, tobin, zeroothers=0|$/;"	m
pvcollect	SCClassLibrary/Common/Audio/FFTUnpacking.sc	/^	pvcollect { |numframes, func, frombin=0, tobin, zeroothers=0|$/;"	m
pxKey	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	pxKey { ^this.name }$/;"	m
pxKey_	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	pxKey_ { |key| ^this.name_(key) }$/;"	m
pxMons	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	pxMons { ^arGuis }		\/\/ should work in some cases$/;"	m
pyramid	SCClassLibrary/Common/Collections/Array.sc	/^	pyramid { arg patternType=1; \/\/ an integer from 1-10$/;"	m
pyramid	SCClassLibrary/Common/Collections/List.sc	/^	pyramid { arg patternType=1; \/\/ an integer from 1-10$/;"	m
pyramidg	SCClassLibrary/Common/Collections/Array.sc	/^	pyramidg { arg patternType=1;$/;"	m
qrespawnPlayer	quarks/cruciallib/Players/PlayerSocket.sc	/^	qrespawnPlayer { arg releaseTime;$/;"	m
qsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	qsched { arg quantize,function;$/;"	m
qsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	qsched { arg quantize,server,bundle,onArrival;$/;"	m
qspawnPlayer	quarks/cruciallib/Players/PlayerSocket.sc	/^	qspawnPlayer { arg player,releaseTime;$/;"	m
quant	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quant { ^quant ??  { this.class.defaultQuant } }$/;"	m
quant	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quant { ^source.quant }$/;"	m
quant	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	quant { ^nil }$/;"	m
quantBeat	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quantBeat { arg val; ^quant.obtain(0) }$/;"	m
quantBeat_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quantBeat_ { arg val; quant = quant.instill(0, val) }$/;"	m
quantSetBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	quantSetBounds { |view,rect|$/;"	m
quant_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quant_ { arg val; quant = val }$/;"	m
quant_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quant_ { arg val; super.quant = val; source.quant = val }$/;"	m
quant_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	quant_ { arg val;$/;"	m
quant_	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	quant_ { arg val;$/;"	m
quantize	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	quantize { arg quantum = 1.0, tolerance = 0.05, strength = 1.0;$/;"	m
quantize	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	quantize { | ... proxies |$/;"	m
quarks	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	quarks {$/;"	m
quarks	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	quarks {$/;"	m
query	SCClassLibrary/Common/Control/Buffer.sc	/^	query {$/;"	m
query	SCClassLibrary/Common/Control/Node.sc	/^	query {$/;"	m
queryAllNodes	SCClassLibrary/Common/Control/Server.sc	/^	queryAllNodes { arg queryControls = false;$/;"	m
queryDone	SCClassLibrary/Common/Control/Buffer.sc	/^	queryDone {$/;"	m
queryTree	SCClassLibrary/Common/Control/Node.sc	/^	queryTree { \/\/|action|$/;"	m
quickSort	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	quickSort { arg function;$/;"	m
quickSortRange	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	quickSortRange { arg i, j, function;$/;"	m
quine	quarks/MathLib/classes/various/quine.sc	/^	quine { ^this.asCompileString ++ ".quine" }$/;"	m
quit	SCClassLibrary/Common/Control/Server.sc	/^	quit {$/;"	m
quit	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	quit {$/;"	m
quit	SCClassLibrary/QtCollider/QStethoscope.sc	/^  quit {$/;"	m
quit	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  quit {$/;"	m
quitInProcess	SCClassLibrary/Common/Control/Server.sc	/^	quitInProcess {$/;"	m
quote	SCClassLibrary/Common/Collections/String.sc	/^	quote {$/;"	m
qwake	quarks/cruciallib/Players/PlayerSocket.sc	/^	qwake { this.qspawnPlayer(lastPlayer); }$/;"	m
r	SCClassLibrary/Common/Core/Function.sc	/^	r { ^Routine(this) }$/;"	m
r	SCClassLibrary/Common/Math/SimpleNumber.sc	/^			r {$/;"	m
raddeg	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	raddeg { ^this.performUnaryOp('raddeg') }$/;"	m
raddeg	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	raddeg { ^this.composeUnaryOp('raddeg') }$/;"	m
raddeg	SCClassLibrary/Common/Core/Symbol.sc	/^	raddeg { ^this }$/;"	m
raddeg	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	raddeg { ^this*180\/pi }$/;"	m
ramp	SCClassLibrary/Common/Collections/Harmonics.sc	/^	ramp { arg start=1.0, step;$/;"	m
ramp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ramp { ^this.performUnaryOp('ramp') }$/;"	m
ramp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ramp { ^this.composeUnaryOp('ramp') }$/;"	m
ramp	SCClassLibrary/Common/Core/Symbol.sc	/^	ramp { ^this }$/;"	m
ramp	SCClassLibrary/Common/Math/Signal.sc	/^	ramp { _Ramp; ^this.primitiveFailed }$/;"	m
ramp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ramp { _Ramp; ^this.primitiveFailed }$/;"	m
rand	SCClassLibrary/Common/Collections/Harmonics.sc	/^	rand { arg lo=0.0, hi=1.0;$/;"	m
rand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rand { ^this.performUnaryOp('rand') }$/;"	m
rand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rand { ^this.composeUnaryOp('rand') }$/;"	m
rand	SCClassLibrary/Common/Core/Symbol.sc	/^	rand { ^this }$/;"	m
rand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rand { _Rand; ^this.primitiveFailed }$/;"	m
rand	quarks/cruciallib/Editors/NumberEditor.sc	/^	rand { arg standardDeviation = 0.15,mean;$/;"	m
rand	quarks/cruciallib/Editors/NumberEditor.sc	/^	rand {$/;"	m
rand	quarks/cruciallib/Instr/Patch.sc	/^	rand { arg standardDeviation=0.15;$/;"	m
rand2	SCClassLibrary/Common/Collections/Harmonics.sc	/^	rand2 { arg val=1.0;$/;"	m
rand2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rand2 { ^this.performUnaryOp('rand2') }$/;"	m
rand2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rand2 { ^this.composeUnaryOp('rand2') }$/;"	m
rand2	SCClassLibrary/Common/Core/Symbol.sc	/^	rand2 { ^this }$/;"	m
rand2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rand2 { _Rand2; ^this.primitiveFailed }$/;"	m
randData	SCClassLibrary/Common/Core/Thread.sc	/^	randData {$/;"	m
randData_	SCClassLibrary/Common/Core/Thread.sc	/^	randData_ { arg data;$/;"	m
randSeed_	SCClassLibrary/Common/Core/Thread.sc	/^	randSeed_ { arg seed;$/;"	m
randomize	SCClassLibrary/QtCollider/QSlider2D.sc	/^  randomize {$/;"	m
range	SCClassLibrary/Common/Audio/Env.sc	/^	range { arg lo = 0.0, hi = 1.0;$/;"	m
range	SCClassLibrary/Common/Audio/Osc.sc	/^	range { arg min = 0, max = 1;$/;"	m
range	SCClassLibrary/Common/Audio/UGen.sc	/^ 	range { arg lo = 0.0, hi = 1.0;$/;"	m
range	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	range { arg ... args; ^this.multiChannelPerform('range', *args) }$/;"	m
range	SCClassLibrary/Common/GUI/ControlModel.sc	/^	range { ^maxval - minval }$/;"	m
range	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	range {$/;"	m
range	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	range {$/;"	m
range	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  range {$/;"	m
rangeText	SCClassLibrary/Common/GUI/Document.sc	/^	rangeText { | rangestart=0, rangesize=1 |$/;"	m
rangeText	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	rangeText { arg rangestart=0, rangesize=1;$/;"	m
range_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	range_ { arg val;$/;"	m
range_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	range_ { arg val;$/;"	m
range_	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  range_ { arg aFloat;$/;"	m
rank	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	rank {$/;"	m
rank	SCClassLibrary/Common/Core/Object.sc	/^	rank { ^0 }$/;"	m
rankVals	quarks/MathLib/classes/statistics/extStatistics.sc	/^	rankVals { |greatestFirst=true|$/;"	m
rate	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	rate { ^\\scalar }$/;"	m
rate	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rate {$/;"	m
rate	SCClassLibrary/Common/Core/Nil.sc	/^	rate { ^nil }$/;"	m
rate	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rate { ^'scalar' } \/\/ scalarRate constant$/;"	m
rate	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	rate {  ^if(bus.isNil) { \\scalar } { bus.rate } }$/;"	m
rate	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	rate { ^a.rate }$/;"	m
rate	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	rate {$/;"	m
rate	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	rate { ^nil }$/;"	m
rate	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  rate {$/;"	m
rate	quarks/cruciallib/Control/MIDIPlayer.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Editors/NumberEditor.sc	/^	rate { ^spec.rate } \/\/ \\scalar or \\static$/;"	m
rate	quarks/cruciallib/Editors/NumberEditor.sc	/^	rate { ^spec.rate } \/\/ probably scalar$/;"	m
rate	quarks/cruciallib/Instr/Instr.sc	/^	rate {$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\audio }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\demand }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\noncontrol } \/\/ builds the constant into the synthDef$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\noncontrol }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\scalar }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^\\stream }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^if(static,\\noncontrol,\\control) }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate { ^itemSpec.rate }$/;"	m
rate	quarks/cruciallib/Instr/MoreSpecs.sc	/^	rate {^\\noncontrol }$/;"	m
rate	quarks/cruciallib/Instr/Patch.sc	/^	rate {$/;"	m
rate	quarks/cruciallib/Instr/instrSupport.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Instr/instrSupport.sc	/^	rate { ^\\noncontrol }$/;"	m
rate	quarks/cruciallib/Players/AbstractPlayer.sc	/^	rate { ^\\audio }$/;"	m
rate	quarks/cruciallib/Players/AbstractPlayer.sc	/^	rate { ^this.source.rate }$/;"	m
rate	quarks/cruciallib/Players/AbstractPlayer.sc	/^	rate { ^this.voices.first.rate }$/;"	m
rate	quarks/cruciallib/Players/KrPlayer.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Players/Patching.sc	/^	rate { ^\\audio }$/;"	m
rate	quarks/cruciallib/Players/Patching.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Players/Patching.sc	/^	rate { ^\\noncontrol }$/;"	m
rate	quarks/cruciallib/Players/Patching.sc	/^	rate { ^\\scalar }$/;"	m
rate	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	rate { ^a.rate }$/;"	m
rate	quarks/cruciallib/Players/PlayerMixer.sc	/^	rate { ^\\audio }$/;"	m
rate	quarks/cruciallib/Players/Silence.sc	/^	rate { ^spec.rate }$/;"	m
rate	quarks/cruciallib/Players/instrSupport.sc	/^	rate { ^\\noncontrol } \/\/ my bad. was \\scalar, this should have been \\noncontrol$/;"	m
rate	quarks/cruciallib/Players/instrSupport.sc	/^	rate { ^\\stream }$/;"	m
rate	quarks/cruciallib/Sample/Sample.sc	/^	rate { ^\\noncontrol }$/;"	m
rate	quarks/cruciallib/Scheduling/TempoBus.sc	/^	rate { ^\\control }$/;"	m
rate	quarks/cruciallib/Sequencers/BusDriver.sc	/^	rate { ^\\control }$/;"	m
rateMethod	quarks/cruciallib/Instr/InstrBrowser.sc	/^    rateMethod {$/;"	m
rateNumber	SCClassLibrary/Common/Audio/UGen.sc	/^	rateNumber {$/;"	m
rate_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	rate_ { arg argRate=\\audio;$/;"	m
rate_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  rate_ { arg argRate=\\audio;$/;"	m
rate_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  rate_ { arg argRate=\\audio;$/;"	m
ratesFor	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		ratesFor { arg keys;$/;"	m
ratio	SCClassLibrary/Common/GUI/ControlModel.sc	/^	ratio { ^maxval \/ minval }$/;"	m
ratiomidi	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ratiomidi { ^this.performUnaryOp('ratiomidi') }$/;"	m
ratiomidi	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ratiomidi { ^this.composeUnaryOp('ratiomidi') }$/;"	m
ratiomidi	SCClassLibrary/Common/Core/Symbol.sc	/^	ratiomidi { ^this }$/;"	m
ratiomidi	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ratiomidi { _RatioMIDI; ^this.primitiveFailed }$/;"	m
ratios	SCClassLibrary/Common/Collections/Scale.sc	/^	ratios {$/;"	m
rawValue	SCClassLibrary/Common/Control/GeneralHID.sc	/^	rawValue {$/;"	m
rawValue	SCClassLibrary/Platform/linux/LID.sc	/^	rawValue {$/;"	m
read	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	read { arg path;$/;"	m
read	SCClassLibrary/Common/Control/Buffer.sc	/^	read { arg argpath, fileStartFrame = 0, numFrames = -1,$/;"	m
read	SCClassLibrary/Common/Control/SerialPort.sc	/^	read {$/;"	m
read	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	read { |startframe=0, frames, block=64, closeFile=true|$/;"	m
read	SCClassLibrary/Common/Streams/IOStream.sc	/^	read { |array|$/;"	m
read	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	read { ^this.all }$/;"	m
read	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	read { arg buffer;$/;"	m
read	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	read { | proxies |$/;"	m
read	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  read { arg startframe, frames, block, closeFile, doneAction;$/;"	m
read	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	read { arg prevObj, nextObj;$/;"	m
read	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	read { arg prevkey, nextkey;$/;"	m
read	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	read {$/;"	m
readAllSignal	SCClassLibrary/Common/Files/File.sc	/^	readAllSignal {$/;"	m
readAllString	SCClassLibrary/Common/Files/File.sc	/^	readAllString {$/;"	m
readAllStringHTML	SCClassLibrary/Common/Files/File.sc	/^	readAllStringHTML {$/;"	m
readAllStringRTF	SCClassLibrary/Common/Files/File.sc	/^	readAllStringRTF {$/;"	m
readChannel	SCClassLibrary/Common/Control/Buffer.sc	/^	readChannel { arg argpath, fileStartFrame = 0, numFrames = -1,$/;"	m
readChannelMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	readChannelMsg { arg argpath, fileStartFrame = 0, numFrames = -1,$/;"	m
readData	SCClassLibrary/Common/Files/SoundFile.sc	/^	readData { arg rawArray;$/;"	m
readFile	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readFile { arg aSoundFile, startframe, frames, block, closeFile, doneAction;$/;"	m
readFileWithTask	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readFileWithTask { arg aSoundFile, startframe, frames, block, doneAction, showProgress;$/;"	m
readFromBus	SCClassLibrary/Common/Control/NodeControl.sc	/^	readFromBus { arg bus;$/;"	m
readFromBus	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	readFromBus { | busses |$/;"	m
readFromBus	quarks/cruciallib/Players/Patching.sc	/^	readFromBus { arg bus;$/;"	m
readFromStream	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	readFromStream { |stream, method|$/;"	m
readFromStream	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	readFromStream { |stream|$/;"	m
readHeaderAsString	SCClassLibrary/Common/Files/SoundFile.sc	/^	readHeaderAsString {$/;"	m
readLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	readLE { arg buffer;$/;"	m
readMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	readMsg { arg argpath, fileStartFrame = 0, numFrames = -1,$/;"	m
readNoUpdate	SCClassLibrary/Common/Control/Buffer.sc	/^	readNoUpdate { arg argpath, fileStartFrame = 0, numFrames = -1,$/;"	m
readOnly	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  readOnly {$/;"	m
readOnly_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	readOnly_ { arg val;$/;"	m
readOnly_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  readOnly_ { arg bool;$/;"	m
readProgress	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readProgress { ^this.getProperty( \\readProgress ); }$/;"	m
readSelection	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readSelection { arg block, closeFile; ^this.nonimpl("readSelection"); }$/;"	m
readSelectionWithTask	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readSelectionWithTask { ^this.nonimpl("readSelectionWithTask"); }$/;"	m
readSynthDef	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	readSynthDef { arg stream, keepDef=false;$/;"	m
readSynthDef2	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	readSynthDef2 { arg stream, keepDef=false;$/;"	m
readUGenSpec	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	readUGenSpec { arg stream;$/;"	m
readUGenSpec2	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	readUGenSpec2 { arg stream;$/;"	m
readUpTo	SCClassLibrary/Common/Streams/IOStream.sc	/^	readUpTo { arg delimiter = $\\f;$/;"	m
readWithTask	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  readWithTask { arg startframe, frames, block, doneAction, showProgress;$/;"	m
readable	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	readable {$/;"	m
readyForPlay	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	readyForPlay { ^stream.notNil }$/;"	m
readyForPlay	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	readyForPlay { ^synthDef.notNil }$/;"	m
readyForPlay	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	readyForPlay { ^true }$/;"	m
readyForPlay	quarks/cruciallib/Players/AbstractPlayer.sc	/^	readyForPlay { ^[\\readyForPlay,\\isPlaying,\\isStopped,\\isStopping].includes(status) }$/;"	m
real	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	real { ^this.performUnaryOp('real') }$/;"	m
real	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	real { ^this }$/;"	m
real	SCClassLibrary/Common/Math/Number.sc	/^	real { ^this }$/;"	m
real	SCClassLibrary/Common/Math/Polar.sc	/^	real { ^rho * cos(theta) }$/;"	m
real	SCClassLibrary/Common/Math/Signal.sc	/^	real { ^this }$/;"	m
real	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	real { ^this.x }$/;"	m
realPath	SCClassLibrary/Common/Collections/String.sc	/^	realPath {$/;"	m
realloc	SCClassLibrary/Common/Control/Bus.sc	/^	realloc {$/;"	m
realloc	quarks/cruciallib/ServerTools/SharedBus.sc	/^	realloc {$/;"	m
reallocBusIfNeeded	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	reallocBusIfNeeded { \/\/ bus is reallocated only if the server was not booted on creation.$/;"	m
reboot	SCClassLibrary/Common/Control/Server.sc	/^	reboot { arg func; \/\/ func is evaluated when server is off$/;"	m
rebuild	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	rebuild {$/;"	m
rebuildTree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	rebuildTree {$/;"	m
recalcChannels	SCClassLibrary/Common/Control/Server.sc	/^	recalcChannels {$/;"	m
recall	SCClassLibrary/Common/Control/Module.sc	/^	recall {$/;"	m
receiveDrag	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	receiveDrag {|x,y|$/;"	m
receiveDrag	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	receiveDrag { |x, y|$/;"	m
receiveDrag	SCClassLibrary/QtCollider/QView.sc	/^  receiveDrag { arg x, y;$/;"	m
receiveDragHandler_	SCClassLibrary/QtCollider/QView.sc	/^  receiveDragHandler_ { arg handler;$/;"	m
receiveEvent	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	receiveEvent { ^nil }$/;"	m
reciprocal	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	reciprocal { ^this.performUnaryOp('reciprocal') }$/;"	m
reciprocal	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	reciprocal { ^this.composeUnaryOp('reciprocal') }$/;"	m
reciprocal	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	reciprocal { _Recip; ^this.primitiveFailed }$/;"	m
reciprocal	quarks/MathLib/classes/various/Quaternion.sc	/^	reciprocal {$/;"	m
recompile	SCClassLibrary/DefaultLibrary/Main.sc	/^	recompile { platform.recompile }$/;"	m
recompile	SCClassLibrary/Platform/Platform.sc	/^	recompile { _Recompile }$/;"	m
record	SCClassLibrary/Common/Control/Server.sc	/^	record { |path|$/;"	m
record	SCClassLibrary/Common/Streams/Patterns.sc	/^	record { |path, headerFormat = "AIFF", sampleFormat = "float", numChannels = 2, dur = nil, fadeTime = 0.2, clock(TempoClock.default), protoEvent(Event.default), server(Server.default), out = 0|$/;"	m
record	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	record { arg paused=false;$/;"	m
record	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	record { arg key, path, headerFormat="aiff", sampleFormat="int16";$/;"	m
record	quarks/cruciallib/Gui/SynthConsole.sc	/^	record {$/;"	m
record	quarks/cruciallib/Players/AbstractPlayer.sc	/^	record { arg path,endBeat,onComplete,recHeaderFormat, recSampleFormat,atTime;$/;"	m
record	quarks/cruciallib/Players/PlayerRecorder.sc	/^	record { arg path,endBeat,onComplete,atTime;$/;"	m
record	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	record { arg atTime;$/;"	m
recordNRT	SCClassLibrary/Common/Control/Score.sc	/^	recordNRT { arg oscFilePath, outputFilePath, inputFilePath, sampleRate = 44100, headerFormat =$/;"	m
recover	SCClassLibrary/Common/Control/NetAddr.sc	/^	recover { ^this }$/;"	m
recover	SCClassLibrary/Common/Control/NetAddr.sc	/^	recover {$/;"	m
rectWindow	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rectWindow { ^this.performUnaryOp('rectWindow') }$/;"	m
rectWindow	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rectWindow { ^this.composeUnaryOp('rectWindow') }$/;"	m
rectWindow	SCClassLibrary/Common/Core/Symbol.sc	/^	rectWindow { ^this }$/;"	m
rectWindow	SCClassLibrary/Common/Math/Signal.sc	/^	rectWindow { _RectWindow; ^this.primitiveFailed }$/;"	m
rectWindow	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rectWindow { _RectWindow; ^this.primitiveFailed }$/;"	m
recvOSCbundle	SCClassLibrary/DefaultLibrary/Main.sc	/^	recvOSCbundle { arg time, replyAddr, recvPort ... msgs;$/;"	m
recvOSCmessage	SCClassLibrary/DefaultLibrary/Main.sc	/^	recvOSCmessage { arg time, replyAddr, recvPort, msg;$/;"	m
red	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	red {$/;"	m
redirectTextFile	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	redirectTextFile {|url|$/;"	m
redraw	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	redraw {$/;"	m
reduce	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	reduce { arg operator;$/;"	m
reduce	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	reduce { arg excluding, method=\\end;$/;"	m
reduceFuncProxy	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	reduceFuncProxy { arg args, protect=true;$/;"	m
reduceFuncProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	reduceFuncProxy { arg args;$/;"	m
reduceFuncProxy	SCClassLibrary/JITLib/Patterns/extFunction.sc	/^	reduceFuncProxy { arg args;$/;"	m
reduceFuncProxy	SCClassLibrary/JITLib/Patterns/extFunction.sc	/^	reduceFuncProxy {$/;"	m
ref	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ref { ^this.composeUnaryOp('asRef') }$/;"	m
reference	SCClassLibrary/Common/Core/Object.sc	/^	reference { ^Ref.new(this) }$/;"	m
reference	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	reference { \/\/returns array$/;"	m
reference	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  reference { ^this.getProperty(\\reference) }$/;"	m
reference_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	reference_ { arg val;$/;"	m
reference_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  reference_ { arg array;$/;"	m
reflow	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	reflow {$/;"	m
reflowAll	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	reflowAll {$/;"	m
reflowAll	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	reflowAll {$/;"	m
reflowDeep	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	reflowDeep {$/;"	m
refresh	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	refresh { view.refresh }$/;"	m
refresh	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/Common/Streams/Stream.sc	/^	refresh {$/;"	m
refresh	SCClassLibrary/QtCollider/QView.sc	/^  refresh {$/;"	m
refresh	SCClassLibrary/QtCollider/QWindow.sc	/^  refresh { view.refresh; }$/;"	m
refresh	quarks/MathLib/classes/gui/ScatterView.sc	/^	refresh {$/;"	m
refresh	quarks/MathLib/classes/gui/ScatterView2.sc	/^	refresh {$/;"	m
refresh	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	refresh {$/;"	m
refresh	quarks/cruciallib/Instr/InstrBrowser.sc	/^    refresh {$/;"	m
refreshInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	refreshInRect {|b|$/;"	m
register	SCClassLibrary/Common/Control/Node.sc	/^	register { arg assumePlaying=false;$/;"	m
register	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	register { arg node, assumePlaying=false;$/;"	m
register	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	register { this.subclassResponsibility(thisMethod) } \/\/ register this dispatcher to listen for its message type$/;"	m
register	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	register {$/;"	m
register	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	register { arg obj; $/;"	m
register	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	register { arg keycode,shift,caps,opt,cntl,function,description;$/;"	m
register	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^	register { arg key,shift,caps,opt,cntl,function,description;$/;"	m
register	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	register { arg unicode,shift,caps,opt,cntl,function,description;$/;"	m
registerAsNext	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	registerAsNext { arg obj;$/;"	m
registerKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	registerKeycode { arg modifier,keycode,function;$/;"	m
registerKeycode	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^	registerKeycode { arg keycode,shift,caps,opt,cntl,function,description;$/;"	m
registerKeycodeAll	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	registerKeycodeAll { arg ... sets;$/;"	m
registerNotification	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	registerNotification {$/;"	m
registerServer	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	registerServer {$/;"	m
registerUnicode	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	registerUnicode { arg modifier,unicode,function;$/;"	m
registerUnicodeAll	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	registerUnicodeAll { arg ... sets;$/;"	m
reject	SCClassLibrary/Common/Collections/Collection.sc	/^	reject { | function |$/;"	m
reject	SCClassLibrary/Common/Collections/Dictionary.sc	/^	reject { arg function;$/;"	m
reject	SCClassLibrary/Common/Collections/SparseArray.sc	/^	reject { arg function;$/;"	m
reject	SCClassLibrary/Common/Core/Nil.sc	/^	reject {}$/;"	m
reject	SCClassLibrary/Common/Streams/Patterns.sc	/^	reject { arg function;$/;"	m
reject	SCClassLibrary/Common/Streams/Stream.sc	/^	reject { arg function;$/;"	m
reject	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reject { arg constraint;$/;"	m
rejectAs	SCClassLibrary/Common/Collections/Collection.sc	/^	rejectAs { | function, class |$/;"	m
rejectAs	SCClassLibrary/Common/Core/Nil.sc	/^	rejectAs {}$/;"	m
rejectInPlace	SCClassLibrary/Common/Collections/SparseArray.sc	/^	rejectInPlace { arg function;$/;"	m
rejectMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	rejectMsg { | selector ... args |$/;"	m
relativeBeats2secs	quarks/cruciallib/Players/SFP/SFP.sc	/^	relativeBeats2secs { arg beats; ^(beats * (this.tempo.reciprocal )) }$/;"	m
relativeOrigin	SCClassLibrary/QtCollider/QView.sc	/^  relativeOrigin { ^true }$/;"	m
relativeOrigin_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	relativeOrigin_ {  }$/;"	m
relativeSecs2beats	quarks/cruciallib/Players/SFP/SFP.sc	/^	relativeSecs2beats { arg secs; ^(secs * (this.tempo )) }$/;"	m
release	SCClassLibrary/Common/Control/Node.sc	/^	release { arg releaseTime;$/;"	m
release	SCClassLibrary/Common/Core/Nil.sc	/^	release {}$/;"	m
release	SCClassLibrary/Common/Core/Object.sc	/^	release {$/;"	m
release	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	release { |releaseTime| this.use { ~releaseServerNode.value(releaseTime) }  }$/;"	m
release	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	release {$/;"	m
release	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	release { | fadeTime |$/;"	m
release	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	release { arg fadeTime;$/;"	m
release	quarks/cruciallib/Players/AbstractPlayer.sc	/^	release { arg releaseTime,atTime;$/;"	m
releaseAndFreeToBundle	quarks/cruciallib/JITLibCrucialWrappers/wrapCXForNodeProxy.sc	/^	releaseAndFreeToBundle { arg releaseTime=(0.0), bundle;$/;"	m
releaseArgs	quarks/cruciallib/Instr/Patch.sc	/^	releaseArgs {$/;"	m
releaseBus	quarks/cruciallib/Scheduling/TempoBus.sc	/^	releaseBus {$/;"	m
releaseBus	quarks/cruciallib/ServerTools/SharedBus.sc	/^	releaseBus { arg supposedOwner;$/;"	m
releaseBusses	quarks/cruciallib/Players/Patching.sc	/^	releaseBusses {$/;"	m
releaseDependants	SCClassLibrary/Common/Core/Object.sc	/^	releaseDependants {$/;"	m
releaseMsg	SCClassLibrary/Common/Control/Node.sc	/^	releaseMsg { arg releaseTime;$/;"	m
releaseNode_	SCClassLibrary/Common/Audio/Env.sc	/^	releaseNode_ { arg z;$/;"	m
releaseTime	SCClassLibrary/Common/Audio/Env.sc	/^	releaseTime {$/;"	m
releaseToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	releaseToBundle { arg releaseTime = 0.1,bundle;$/;"	m
releaseToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	releaseToBundle { arg releaseTime,bundle;$/;"	m
releaseToBundle	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	releaseToBundle { arg releaseTime,bundle;$/;"	m
releaseVoice	quarks/cruciallib/Players/PlayerSocket.sc	/^	releaseVoice { arg releaseTime;$/;"	m
reload	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	reload { this.setProperty(\\reload);}$/;"	m
reload	SCClassLibrary/QtCollider/QWebView.sc	/^  reload { this.invokeMethod( 'reload' ); }$/;"	m
reloadBuffer	quarks/cruciallib/Sample/Sample.sc	/^	reloadBuffer {$/;"	m
remove	SCClassLibrary/Common/Collections/Bag.sc	/^	remove { arg item, count=1;$/;"	m
remove	SCClassLibrary/Common/Collections/Collection.sc	/^	remove { ^this.subclassResponsibility(thisMethod) }$/;"	m
remove	SCClassLibrary/Common/Collections/Dictionary.sc	/^	remove { ^this.shouldNotImplement(thisMethod) }$/;"	m
remove	SCClassLibrary/Common/Collections/Library.sc	/^	remove { ^this.shouldNotImplement(thisMethod) }$/;"	m
remove	SCClassLibrary/Common/Collections/LinkedList.sc	/^	remove { arg obj;$/;"	m
remove	SCClassLibrary/Common/Collections/LinkedList.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	remove { arg obj;$/;"	m
remove	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	remove { arg item;$/;"	m
remove	SCClassLibrary/Common/Collections/Set.sc	/^	remove { arg item;$/;"	m
remove	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/Control/OSC.sc	/^	remove { arg child;$/;"	m
remove	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/Control/OSCresponder.sc	/^	remove { all.remove(this) }$/;"	m
remove	SCClassLibrary/Common/Control/OSCresponder.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	remove {|funcProxy| this.subclassResponsibility(thisMethod) } \/\/ proxies call this to remove themselves from this dispatcher; should unregister if needed$/;"	m
remove	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	remove {|funcProxy|$/;"	m
remove	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	remove {|removeFunc| func = func.removeFunc(removeFunc); this.changed(\\function); }$/;"	m
remove	SCClassLibrary/Common/Core/Nil.sc	/^	remove {}$/;"	m
remove	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	remove { slider.remove }$/;"	m
remove	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	remove { view.remove}$/;"	m
remove	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	remove { arg view; this.subclassResponsibility(\\remove); }$/;"	m
remove	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	remove { }$/;"	m
remove	SCClassLibrary/Common/GUI/Model.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	remove { arg view, reflow = true;$/;"	m
remove	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Common/Quarks/Quark.sc	/^	remove {$/;"	m
remove	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	remove {$/;"	m
remove	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	remove {$/;"	m
remove	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	remove {$/;"	m
remove	SCClassLibrary/QtCollider/QView.sc	/^  remove {$/;"	m
remove	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	remove { arg item;$/;"	m
remove	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	remove { arg key, nextKey;$/;"	m
remove	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	remove { arg item, ntimes=1;$/;"	m
remove	quarks/cruciallib/Gui/SynthConsole.sc	/^	remove {$/;"	m
remove	quarks/cruciallib/Gui/Updater.sc	/^	remove {$/;"	m
remove	quarks/cruciallib/ServerTools/ServerGui.sc	/^	remove {$/;"	m
remove	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	remove { this.clear }$/;"	m
remove	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	remove { this.clear }$/;"	m
removeAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	removeAction { arg func, selector=\\action;$/;"	m
removeAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	removeAction { arg func, selector=\\action;$/;"	m
removeAction	SCClassLibrary/QtCollider/QView.sc	/^  removeAction { arg func, selector=\\action;$/;"	m
removeAll	SCClassLibrary/Common/Collections/Collection.sc	/^	removeAll { | list | list.do { | item | this.remove(item) } }$/;"	m
removeAll	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	removeAll {$/;"	m
removeAll	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	removeAll {$/;"	m
removeAll	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	removeAll {$/;"	m
removeAll	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeAll { | fadeTime | this.removeAt(nil, fadeTime) }$/;"	m
removeAll	SCClassLibrary/QtCollider/QView.sc	/^  removeAll {$/;"	m
removeAll	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	removeAll { arg item;$/;"	m
removeAllFilters	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	removeAllFilters {$/;"	m
removeAllSuchThat	SCClassLibrary/Common/Collections/Collection.sc	/^	removeAllSuchThat { | function |$/;"	m
removeAllSuchThat	SCClassLibrary/Common/Collections/SparseArray.sc	/^	removeAllSuchThat { arg function;$/;"	m
removeAllToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeAllToBundle { | bundle, fadeTime |$/;"	m
removeAntecedent	SCClassLibrary/Common/Audio/UGen.sc	/^	removeAntecedent { arg ugen;$/;"	m
removeAt	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	removeAt { |name|$/;"	m
removeAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	removeAt { arg index;$/;"	m
removeAt	SCClassLibrary/Common/Collections/Dictionary.sc	/^	removeAt { arg key;$/;"	m
removeAt	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	removeAt { arg key;$/;"	m
removeAt	SCClassLibrary/Common/Collections/Library.sc	/^	removeAt {$/;"	m
removeAt	SCClassLibrary/Common/Collections/LinkedList.sc	/^	removeAt { arg index;$/;"	m
removeAt	SCClassLibrary/Common/Collections/List.sc	/^	removeAt { arg index; ^array.removeAt(index); }$/;"	m
removeAt	SCClassLibrary/Common/Collections/ObjectTable.sc	/^	removeAt { arg key;$/;"	m
removeAt	SCClassLibrary/Common/Collections/SparseArray.sc	/^	removeAt { arg index, obj;$/;"	m
removeAt	SCClassLibrary/Common/Collections/SparseArray.sc	/^	removeAt { arg index;$/;"	m
removeAt	SCClassLibrary/Common/Streams/History.sc	/^	removeAt { |index|$/;"	m
removeAt	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeAt { | index, fadeTime |$/;"	m
removeAt	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	removeAt { arg key, item;$/;"	m
removeAt	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	removeAt { arg index; var res; $/;"	m
removeAt	quarks/MathLib/classes/various/Matrix.sc	/^	removeAt { arg row; ^this.removeRow(row); }$/;"	m
removeAtFail	SCClassLibrary/Common/Collections/Dictionary.sc	/^	removeAtFail { arg key, function;$/;"	m
removeAtPath	SCClassLibrary/Common/Collections/Library.sc	/^	removeAtPath { arg path;$/;"	m
removeAtSlot	SCClassLibrary/Common/Collections/SparseArray.sc	/^	removeAtSlot { arg slot;$/;"	m
removeChild	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	removeChild { arg responder;$/;"	m
removeChild	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	removeChild {|child|$/;"	m
removeCol	quarks/MathLib/classes/various/Matrix.sc	/^	removeCol { arg col;	$/;"	m
removeDependant	SCClassLibrary/Common/Core/Nil.sc	/^	removeDependant {}$/;"	m
removeDependant	SCClassLibrary/Common/Core/Object.sc	/^	removeDependant { arg dependant;$/;"	m
removeEmptyAt	SCClassLibrary/Common/Collections/Library.sc	/^	removeEmptyAt { arg ...path;$/;"	m
removeEmptyAtPath	SCClassLibrary/Common/Collections/Library.sc	/^	removeEmptyAtPath { arg path;$/;"	m
removeEvery	SCClassLibrary/Common/Collections/Collection.sc	/^	removeEvery { | list | this.removeAllSuchThat(list.includes(_)) }$/;"	m
removeFail	SCClassLibrary/Common/Collections/Dictionary.sc	/^	removeFail { ^this.shouldNotImplement(thisMethod) }$/;"	m
removeFail	SCClassLibrary/Common/Collections/Library.sc	/^	removeFail { ^this.shouldNotImplement(thisMethod) }$/;"	m
removeFilter	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	removeFilter {|filter|$/;"	m
removeFirst	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeFirst { | fadeTime | this.removeAt(objects.indices.first, fadeTime) }$/;"	m
removeFromFreed	SCClassLibrary/Common/Control/Engine.sc	/^	removeFromFreed { |block|$/;"	m
removeFromOnClose	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	removeFromOnClose { | function | onClose = onClose.removeFunc(function) }$/;"	m
removeFromOnClose	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	removeFromOnClose { | function | onClose = onClose.removeFunc(function) }$/;"	m
removeFunc	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	removeFunc { arg function;$/;"	m
removeFunc	SCClassLibrary/Common/Core/Nil.sc	/^	removeFunc { ^this }$/;"	m
removeFunc	SCClassLibrary/Common/Core/Object.sc	/^	removeFunc { arg function; if(this === function) { ^nil } }$/;"	m
removeFuncFrom	SCClassLibrary/Common/Core/Object.sc	/^	removeFuncFrom { arg variableName, function;$/;"	m
removeItem	SCClassLibrary/QtCollider/QTreeView.sc	/^  removeItem { arg item; this.invokeMethod( \\removeItem, item ); }$/;"	m
removeLast	SCClassLibrary/Common/Streams/History.sc	/^	removeLast { this.removeAt(lines.size - 1) }$/;"	m
removeLast	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeLast { | fadeTime | this.removeAt(objects.indices.last, fadeTime) }$/;"	m
removeMethod	SCClassLibrary/Common/osx/objC/scide_scapp/SCNSObject.sc	/^	removeMethod {$/;"	m
removeNeutral	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	removeNeutral {$/;"	m
removeOSCRecvFunc	SCClassLibrary/DefaultLibrary/Main.sc	/^	removeOSCRecvFunc { |func| prRecvOSCFunc = prRecvOSCFunc.removeFunc(func) }$/;"	m
removeOnClose	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	removeOnClose { arg updater;$/;"	m
removeOnClose	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	removeOnClose { arg dependant;$/;"	m
removeOnClose	quarks/cruciallib/Gui/Updater.sc	/^	removeOnClose { arg layout;$/;"	m
removePlayerAt	quarks/cruciallib/Players/PlayerMixer.sc	/^	removePlayerAt { arg pli;$/;"	m
removeRecorder	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	removeRecorder {$/;"	m
removeReplaceKey	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	removeReplaceKey { |replaced|$/;"	m
removeReplaceKey	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	removeReplaceKey { |replaced|$/;"	m
removeResponders	quarks/cruciallib/Control/MIDIPlayer.sc	/^	removeResponders {$/;"	m
removeRow	quarks/MathLib/classes/various/Matrix.sc	/^	removeRow { arg row; $/;"	m
removeServer	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	removeServer { |server|$/;"	m
removeSynthDefCache	quarks/cruciallib/Instr/Patch.sc	/^	removeSynthDefCache {$/;"	m
removeToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	removeToBundle { | bundle, index, fadeTime |$/;"	m
removeUGen	SCClassLibrary/Common/Audio/SynthDef.sc	/^	removeUGen { arg ugen;$/;"	m
removeUndo	SCClassLibrary/Common/GUI/Document.sc	/^	removeUndo {$/;"	m
removeUniqueMethod	SCClassLibrary/Common/Core/Object.sc	/^	removeUniqueMethod { arg selector;$/;"	m
removeUniqueMethods	SCClassLibrary/Common/Core/Object.sc	/^	removeUniqueMethods {$/;"	m
removeValue	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	removeValue {|value|$/;"	m
removeView	SCClassLibrary/QtCollider/QTreeView.sc	/^  removeView { arg column;$/;"	m
removeWhenDone	SCClassLibrary/Common/Control/OSCresponder.sc	/^	removeWhenDone {$/;"	m
removedFromScheduler	SCClassLibrary/Common/Core/Object.sc	/^	removedFromScheduler { ^this }$/;"	m
removedFromScheduler	SCClassLibrary/Common/Streams/Stream.sc	/^	removedFromScheduler { | freeNodes = true |$/;"	m
removedFromScheduler	SCClassLibrary/Common/Streams/Stream.sc	/^	removedFromScheduler {$/;"	m
removing	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	removing { arg item;$/;"	m
render	SCClassLibrary/Common/Control/asScore/asScore.sc	/^	render { arg path, maxTime=60, sampleRate = 44100,$/;"	m
reorder	SCClassLibrary/Common/Control/Server.sc	/^	reorder { arg nodeList, target, addAction=\\addToHead;$/;"	m
repeat	SCClassLibrary/Common/Core/Object.sc	/^	repeat { arg repeats = inf; ^Pn(this, repeats).asStream }$/;"	m
repeat	SCClassLibrary/Common/Streams/Patterns.sc	/^	repeat { arg n=inf; ^Pn(this, n) }$/;"	m
repeat	SCClassLibrary/Common/Streams/Stream.sc	/^	repeat { arg repeats = inf;$/;"	m
replace	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	replace { arg find, replace;$/;"	m
replace	SCClassLibrary/Common/Collections/String.sc	/^	replace { arg find, replace;$/;"	m
replace	quarks/MathLib/classes/MarkovSet/FuzzyDictionary.sc	/^	replace { arg item, by;$/;"	m
replace	quarks/cruciallib/Instr/Instr.sc	/^	replace { arg anode,args,bundle,atTime,out=0;$/;"	m
replaceFile	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	replaceFile {$/;"	m
replaceFunc	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	replaceFunc { arg find, replace;$/;"	m
replaceFunc	SCClassLibrary/Common/Core/Nil.sc	/^	replaceFunc { }$/;"	m
replaceFunc	SCClassLibrary/Common/Core/Object.sc	/^	replaceFunc { arg find, replace; if(this === find) { ^replace } }$/;"	m
replaceName	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	replaceName { |key|$/;"	m
replaceOSCRecvFunc	SCClassLibrary/DefaultLibrary/Main.sc	/^	replaceOSCRecvFunc { |func, newFunc| prRecvOSCFunc = prRecvOSCFunc.replaceFunc(func, newFunc) }$/;"	m
replaceUGen	SCClassLibrary/Common/Audio/SynthDef.sc	/^	replaceUGen { arg a, b;$/;"	m
reply	SCClassLibrary/Common/Control/OSC.sc	/^	reply { arg oscAddress ... args;$/;"	m
report	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	report { arg key;$/;"	m
report	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	report {$/;"	m
report	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	report {$/;"	m
reportError	SCClassLibrary/Common/Core/Error.sc	/^	reportError {$/;"	m
reportError	SCClassLibrary/Common/Core/Object.sc	/^	reportError {$/;"	m
repositoryArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	repositoryArgs { ^[this.key, this.source] }$/;"	m
repositoryArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	repositoryArgs { ^this.storeArgs }$/;"	m
reread	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	reread {$/;"	m
resamp0	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	resamp0 { arg newSize;$/;"	m
resamp1	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	resamp1 { arg newSize;$/;"	m
resampledDomainSpec	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	resampledDomainSpec {$/;"	m
resampledSize	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	resampledSize {$/;"	m
reserve	SCClassLibrary/Common/Control/Engine.sc	/^	reserve { |address, size = 1, warn = true|$/;"	m
reset	SCClassLibrary/Common/Control/Engine.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Control/MIDIOut.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Control/Volume.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Core/Object.sc	/^	reset { ^this }$/;"	m
reset	SCClassLibrary/Common/Core/Thread.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Quarks/Quark.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	reset { a.reset }$/;"	m
reset	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	reset { a.reset; arglist.do({ arg item; item.reset }) }$/;"	m
reset	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	reset { a.reset; b.reset }$/;"	m
reset	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	reset { vala = nil; a.reset; b.reset }$/;"	m
reset	SCClassLibrary/Common/Streams/FuncStreamAsRoutine.sc	/^	reset { ^resetFunc.value }$/;"	m
reset	SCClassLibrary/Common/Streams/IOStream.sc	/^	reset { super.reset; collection = collection.extend(0) }$/;"	m
reset	SCClassLibrary/Common/Streams/IOStream.sc	/^	reset { this.pos = 0; }$/;"	m
reset	SCClassLibrary/Common/Streams/Stream.sc	/^	reset { once = true }$/;"	m
reset	SCClassLibrary/Common/Streams/Stream.sc	/^	reset { originalStream.reset }$/;"	m
reset	SCClassLibrary/Common/Streams/Stream.sc	/^	reset { routine.reset; super.reset }$/;"	m
reset	SCClassLibrary/Common/Streams/Stream.sc	/^	reset {$/;"	m
reset	SCClassLibrary/Common/Streams/TabFileReader.sc	/^	reset { stream.reset }$/;"	m
reset	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	reset { reset = reset ? 0 + 1 }$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reset { a.reset; b.reset }$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reset { constraint.reset }$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reset { list.do({ arg l; l.reset }) }$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reset {$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	reset {}$/;"	m
reset	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	reset { stack = [] }$/;"	m
resetIndices	SCClassLibrary/Common/Collections/SparseArray.sc	/^	resetIndices { arg step = 1, offset = 0;$/;"	m
resetNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	resetNodeMap {$/;"	m
resetRoutine	quarks/cruciallib/Sequencers/BusDriver.sc	/^	resetRoutine {$/;"	m
reshape	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	reshape { arg ... shape;$/;"	m
reshapeLike	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	reshapeLike { arg another, indexing=\\wrapAt;$/;"	m
resize	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	resize {$/;"	m
resize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	resize {$/;"	m
resize	quarks/cruciallib/Gui/CXMenu.sc	/^	resize {$/;"	m
resizeBy	SCClassLibrary/Common/Geometry/Rect.sc	/^	resizeBy { arg h, v;$/;"	m
resizeEvent	SCClassLibrary/QtCollider/QView.sc	/^  resizeEvent { onResize.value(this) }$/;"	m
resizeTo	SCClassLibrary/Common/Geometry/Rect.sc	/^	resizeTo { arg h, v;$/;"	m
resizeTo	SCClassLibrary/QtCollider/QView.sc	/^  resizeTo { arg width, height;$/;"	m
resizeToFit	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	resizeToFit { arg reflow = false,tryParent = false;$/;"	m
resizeToFit	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	resizeToFit { arg reflow=false,center=false;$/;"	m
resizeToFit	quarks/cruciallib/Gui/osx/scide_scapp/deprecated-3.5.sc	/^	resizeToFit {$/;"	m
resize_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	resize_ { arg r; view.resize_(r) }$/;"	m
resize_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	resize_ { arg resize;$/;"	m
resize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	resize_ { arg resize;$/;"	m
resize_	SCClassLibrary/QtCollider/QView.sc	/^  resize_ { arg anInt;$/;"	m
resolveRelative	SCClassLibrary/Common/Collections/String.sc	/^	resolveRelative {$/;"	m
resourceDir	SCClassLibrary/Platform/Platform.sc	/^	resourceDir { _Platform_resourceDir }$/;"	m
respawn	quarks/cruciallib/Instr/Patch.sc	/^	respawn { arg atTime;$/;"	m
respawnMixerToBundle	quarks/cruciallib/Players/PlayerMixer.sc	/^	respawnMixerToBundle { arg bundle;$/;"	m
respond	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	respond { arg src,chan,num,value;$/;"	m
respond	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	respond { arg method, msg;$/;"	m
responder	quarks/cruciallib/Control/CCBank.sc	/^	responder { arg key, function;$/;"	m
respondsTo	SCClassLibrary/Common/Core/Object.sc	/^	respondsTo { arg aSymbol; _ObjectRespondsTo; ^this.primitiveFailed }$/;"	m
restoreCurrentEnvironment	SCClassLibrary/Common/GUI/Document.sc	/^	restoreCurrentEnvironment {$/;"	m
restoreHistory	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	restoreHistory {$/;"	m
resume	SCClassLibrary/Common/Core/Thread.sc	/^	resume { arg inval;$/;"	m
resume	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	resume { this.use { ~resumeServerNode.value }  }$/;"	m
resume	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	resume {  clock.tempo = tempo }$/;"	m
resume	SCClassLibrary/Common/Streams/Stream.sc	/^	resume { arg argClock, quant;$/;"	m
resume	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	resume { arg clock, quant;$/;"	m
resume	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	resume {$/;"	m
resume	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	resume { this.start }$/;"	m
resume	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	resume { | clock, quant = 1 |$/;"	m
resume	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	resume { | clock, quant = 1.0 |$/;"	m
resume	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	resume { player.play }$/;"	m
reverse	SCClassLibrary/Common/Collections/Array.sc	/^	reverse {$/;"	m
reverse	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	reverse {$/;"	m
reverse	SCClassLibrary/Common/Collections/List.sc	/^	reverse {$/;"	m
reverse	SCClassLibrary/Common/Math/Signal.sc	/^	reverse { arg beginSamp=0, endSamp;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/Common/Audio/UGen.sc	/^	reverseComposeBinaryOp { arg aSelector, aUGen;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	reverseComposeBinaryOp { arg aSelector, something, adverb;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/Common/Streams/Patterns.sc	/^	reverseComposeBinaryOp { arg operator, pattern, adverb;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/Common/Streams/Stream.sc	/^	reverseComposeBinaryOp { arg argSelector, argStream, adverb;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	reverseComposeBinaryOp { arg aSelector, something, adverb;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	reverseComposeBinaryOp { arg aSelector, something, adverb;$/;"	m
reverseComposeBinaryOp	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	reverseComposeBinaryOp { | aSelector, something |$/;"	m
reverseComposeBinaryOp	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	reverseComposeBinaryOp { arg aSelector, something;$/;"	m
reverseComposeBinaryOp	quarks/cruciallib/Players/AbstractPlayer.sc	/^	reverseComposeBinaryOp { arg operator, pattern;$/;"	m
reverseDo	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	reverseDo { arg function;$/;"	m
reverseDo	SCClassLibrary/Common/Collections/LinkedList.sc	/^	reverseDo { arg function;$/;"	m
reverseDo	SCClassLibrary/Common/Collections/List.sc	/^	reverseDo { arg function;$/;"	m
reverseDo	SCClassLibrary/Common/Core/Nil.sc	/^	reverseDo {}$/;"	m
reverseDo	SCClassLibrary/Common/Math/Float.sc	/^	reverseDo { arg function;$/;"	m
reverseDo	SCClassLibrary/Common/Math/Integer.sc	/^	reverseDo { arg function;$/;"	m
reverseDo	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	reverseDo { arg function;$/;"	m
rewriteList	SCClassLibrary/Common/Streams/Prewrite.sc	/^	rewriteList { arg list, inval, level;$/;"	m
rewriteString	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewriteString { arg rules, level=1, contextSize, parseRules=true, contextFree;$/;"	m
rewriteString	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewriteString { arg rules, level=1, contextSize; \/\/ the whole string is rewrittenten at once$/;"	m
rewritingContextFree	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewritingContextFree {^false }$/;"	m
rewritingContextFree	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewritingContextFree {^true }$/;"	m
rewritingRuleSize	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewritingRuleSize { ^this.first.size }$/;"	m
rewritingRuleSize	quarks/MathLib/classes/LazyLindenmayer/extStringRewrite.sc	/^	rewritingRuleSize { ^this.size }$/;"	m
rgbaArray	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	rgbaArray {$/;"	m
rho	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rho { ^this.performUnaryOp('rho') }$/;"	m
rho	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rho {  ^this.composeUnaryOp('rho') }$/;"	m
rho	SCClassLibrary/Common/Geometry/Point.sc	/^	rho { ^hypot(x, y) }$/;"	m
rho	SCClassLibrary/Common/Math/Complex.sc	/^	rho { ^hypot(real, imag) }$/;"	m
rho	SCClassLibrary/Common/Math/Number.sc	/^	rho { ^this }$/;"	m
rho	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	rho { ^(x.squared + y.squared + z.squared).sqrt }$/;"	m
right	SCClassLibrary/Common/Geometry/Rect.sc	/^	right { ^left + width }$/;"	m
rightBottom	SCClassLibrary/Common/Geometry/Rect.sc	/^	rightBottom { ^Point.new(this.right, this.bottom) }$/;"	m
rightShift	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rightShift { arg aNumber, adverb; ^this.performBinaryOp('rightShift', aNumber, adverb) }$/;"	m
rightShift	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rightShift { arg function, adverb; ^this.composeBinaryOp('rightShift', function, adverb) }$/;"	m
rightShift	SCClassLibrary/Common/Core/Symbol.sc	/^	rightShift { ^this }$/;"	m
rightShift	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rightShift { arg aNumber=1, adverb; _ShiftRight; ^aNumber.performBinaryOpOnSimpleNumber('rightShift', this, adverb) }$/;"	m
rightTop	SCClassLibrary/Common/Geometry/Rect.sc	/^	rightTop { ^Point.new(this.right, this.top) }$/;"	m
right_	SCClassLibrary/Common/Geometry/Rect.sc	/^	right_ { |r| left = left - (this.right - r) }$/;"	m
ring1	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ring1 { arg aNumber, adverb; ^this.performBinaryOp('ring1', aNumber, adverb) }$/;"	m
ring1	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ring1 { arg function, adverb; ^this.composeBinaryOp('ring1', function, adverb) }$/;"	m
ring1	SCClassLibrary/Common/Math/Signal.sc	/^	ring1 { arg aNumber; _Ring1; ^aNumber.performBinaryOpOnSignal('ring1', this) }$/;"	m
ring1	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ring1 { arg aNumber, adverb; _Ring1; ^aNumber.performBinaryOpOnSimpleNumber('ring1', this, adverb) }$/;"	m
ring2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ring2 { arg aNumber, adverb; ^this.performBinaryOp('ring2', aNumber, adverb) }$/;"	m
ring2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ring2 { arg function, adverb; ^this.composeBinaryOp('ring2', function, adverb) }$/;"	m
ring2	SCClassLibrary/Common/Math/Signal.sc	/^	ring2 { arg aNumber; _Ring2; ^aNumber.performBinaryOpOnSignal('ring2', this) }$/;"	m
ring2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ring2 { arg aNumber, adverb; _Ring2; ^aNumber.performBinaryOpOnSimpleNumber('ring2', this, adverb) }$/;"	m
ring3	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ring3 { arg aNumber, adverb; ^this.performBinaryOp('ring3', aNumber, adverb) }$/;"	m
ring3	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ring3 { arg function, adverb; ^this.composeBinaryOp('ring3', function, adverb) }$/;"	m
ring3	SCClassLibrary/Common/Math/Signal.sc	/^	ring3 { arg aNumber; _Ring3; ^aNumber.performBinaryOpOnSignal('ring3', this) }$/;"	m
ring3	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ring3 { arg aNumber, adverb; _Ring3; ^aNumber.performBinaryOpOnSimpleNumber('ring3', this, adverb) }$/;"	m
ring4	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	ring4 { arg aNumber, adverb; ^this.performBinaryOp('ring4', aNumber, adverb) }$/;"	m
ring4	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	ring4 { arg function, adverb; ^this.composeBinaryOp('ring4', function, adverb) }$/;"	m
ring4	SCClassLibrary/Common/Math/Signal.sc	/^	ring4 { arg aNumber; _Ring4; ^aNumber.performBinaryOpOnSignal('ring4', this) }$/;"	m
ring4	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	ring4 { arg aNumber, adverb; _Ring4; ^aNumber.performBinaryOpOnSimpleNumber('ring4', this, adverb) }$/;"	m
rip	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	rip {$/;"	m
rmsColor	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  rmsColor { ^this.getProperty(\\rmsColor) }$/;"	m
rmsColor_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  rmsColor_ { arg color; this.setProperty(\\rmsColor, color) }$/;"	m
rninit	SCClassLibrary/Common/Control/Node.sc	/^	rninit {$/;"	m
rot	quarks/MathLib/classes/gui/ScatterView.sc	/^	rot {|rX, rY, rZ|$/;"	m
rotMatrix	quarks/MathLib/classes/various/Trafo.sc	/^	rotMatrix {$/;"	m
rotate	SCClassLibrary/Common/Collections/Array.sc	/^	rotate { arg n=1;$/;"	m
rotate	SCClassLibrary/Common/Collections/List.sc	/^	rotate { arg n=1;$/;"	m
rotate	SCClassLibrary/Common/Collections/String.sc	/^	rotate { arg n = 1;$/;"	m
rotate	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rotate { arg function; ^this.composeBinaryOp('rotate', function) }$/;"	m
rotate	SCClassLibrary/Common/Geometry/Point.sc	/^	rotate { arg angle; \/\/ in radians$/;"	m
rotate	SCClassLibrary/Common/Math/Polar.sc	/^	rotate { arg angle; \/\/ in radians$/;"	m
rotate	SCClassLibrary/Common/Math/Signal.sc	/^	rotate { arg n=1;$/;"	m
rotate	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	rotate { arg angle; \/\/ XY-plane, in radians$/;"	m
rotate	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	rotate { arg angle; \/\/ XY-plane, in radians$/;"	m
rotateXY	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	rotateXY { arg angle; \/\/ XY-plane, in radians$/;"	m
rotateXY	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	rotateXY { arg angle; \/\/ XY-plane,in radians$/;"	m
rotateXZ	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	rotateXZ { arg angle; \/\/ XZ-plane, in radians$/;"	m
rotateXZ	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	rotateXZ { arg angle; \/\/ XZ-plane, in radians$/;"	m
rotateYZ	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	rotateYZ { arg angle; \/\/ YZ-plane, in radians$/;"	m
rotateYZ	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	rotateYZ { arg angle; \/\/ YZ-plane,in radians$/;"	m
round	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	round { arg aNumber=1, adverb; ^this.performBinaryOp('round', aNumber, adverb) }$/;"	m
round	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	round { arg function=1, adverb; ^this.composeBinaryOp('round', function, adverb) }$/;"	m
round	SCClassLibrary/Common/Core/Color.sc	/^	round { arg val=0.01;$/;"	m
round	SCClassLibrary/Common/Core/Symbol.sc	/^	round { ^this }$/;"	m
round	SCClassLibrary/Common/Geometry/Point.sc	/^	round { arg quant;$/;"	m
round	SCClassLibrary/Common/Math/Complex.sc	/^	round { arg aNumber = 1.0;$/;"	m
round	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	round { arg aNumber=1.0, adverb; _Round; ^aNumber.performBinaryOpOnSimpleNumber('round', this, adverb) }$/;"	m
round	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	round { arg quant;$/;"	m
roundRange	SCClassLibrary/Common/GUI/ControlModel.sc	/^	roundRange { |base = 10|$/;"	m
roundUp	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	roundUp { arg aNumber=1, adverb; ^this.performBinaryOp('roundUp', aNumber, adverb) }$/;"	m
roundUp	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	roundUp { arg function=1, adverb; ^this.composeBinaryOp('roundUp', function, adverb) }$/;"	m
roundUp	SCClassLibrary/Common/Core/Symbol.sc	/^	roundUp { ^this }$/;"	m
roundUp	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	roundUp { arg aNumber=1.0, adverb; _RoundUp; ^aNumber.performBinaryOpOnSimpleNumber('roundUp', this, adverb) }$/;"	m
rowAt	SCClassLibrary/Common/Collections/Array2D.sc	/^	rowAt { arg ri;$/;"	m
rows	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	rows { ^rows.copy }$/;"	m
rows	quarks/MathLib/classes/various/Matrix.sc	/^	rows {$/;"	m
rowsDo	SCClassLibrary/Common/Collections/Array2D.sc	/^	rowsDo { arg func;$/;"	m
rrand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	rrand { arg aNumber, adverb; ^this.performBinaryOp('rrand', aNumber, adverb) }$/;"	m
rrand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	rrand { arg function, adverb; ^this.composeBinaryOp('rrand', function, adverb) }$/;"	m
rrand	SCClassLibrary/Common/Core/Symbol.sc	/^	rrand { ^this }$/;"	m
rrand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	rrand { arg aNumber, adverb; _RandRange; ^aNumber.performBinaryOpOnSimpleNumber('rrand', this, adverb) }$/;"	m
run	SCClassLibrary/Common/Control/Node.sc	/^	run { "run has no effect on RootNode".warn; }$/;"	m
run	SCClassLibrary/Common/Control/Node.sc	/^	run { arg flag=true;$/;"	m
run	SCClassLibrary/Common/Core/Kernel.sc	/^	run {$/;"	m
run	SCClassLibrary/Common/Core/Thread.sc	/^	run { arg inval;$/;"	m
run	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	run {$/;"	m
run	SCClassLibrary/DefaultLibrary/Main.sc	/^	run { \/\/ used to be called by command-R, customisation now via CocoaMenuItem$/;"	m
run	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	run { | clock, quant, flag = true |$/;"	m
run	SCClassLibrary/QtCollider/QStethoscope.sc	/^  run {$/;"	m
run	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  run {$/;"	m
runInTerminal	SCClassLibrary/Common/Collections/linux/extString_linux.sc	/^	runInTerminal {|shell="sh"|$/;"	m
runInTerminal	SCClassLibrary/Common/Collections/osx/extString_osx.sc	/^	runInTerminal { | shell="\/bin\/bash" |$/;"	m
runInTerminal	SCClassLibrary/Common/Collections/windows/extString_windows.sc	/^	runInTerminal {$/;"	m
runModal	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	runModal {$/;"	m
runModal	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	runModal {|window|$/;"	m
runMsg	SCClassLibrary/Common/Control/Node.sc	/^	runMsg { arg flag=true;$/;"	m
runUpdate	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	runUpdate {  skipjack.start }$/;"	m
runUpdate	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	runUpdate { skipjack.start; }$/;"	m
runUpdate	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	runUpdate { editor.runUpdate; skippy.start; }$/;"	m
rxErrors	SCClassLibrary/Common/Control/SerialPort.sc	/^	rxErrors {$/;"	m
sampleFormat	quarks/cruciallib/Gui/SynthConsole.sc	/^	sampleFormat {$/;"	m
sampleRate	quarks/cruciallib/Players/SFP/SFP.sc	/^	sampleRate { ^file.sampleRate }$/;"	m
sampleRateIr	quarks/cruciallib/Sample/Sample.sc	/^	sampleRateIr {$/;"	m
sampleRateKr	quarks/cruciallib/Sample/Sample.sc	/^	sampleRateKr {$/;"	m
sampleTempoIr	quarks/cruciallib/Sample/Sample.sc	/^	sampleTempoIr {$/;"	m
sampleTempoKr	quarks/cruciallib/Sample/Sample.sc	/^	sampleTempoKr { \/\/ issue: if new sample is loaded, send the tempo to which synths ?$/;"	m
saturationBlend	SCClassLibrary/Common/Core/Color.sc	/^	saturationBlend { arg aColor, blend=0.0;$/;"	m
save	SCClassLibrary/Common/Control/Module.sc	/^	save {$/;"	m
save	quarks/cruciallib/Gui/SynthConsole.sc	/^	save { arg title="save",minWidth=100;$/;"	m
save	quarks/cruciallib/Players/AbstractPlayer.sc	/^	save { arg apath;$/;"	m
save	quarks/cruciallib/Sample/SampleGui.sc	/^	save {$/;"	m
saveAs	quarks/cruciallib/Gui/SynthConsole.sc	/^	saveAs { arg onSaveF,default;$/;"	m
saveAs	quarks/cruciallib/Sample/SampleGui.sc	/^	saveAs {$/;"	m
saveCS	SCClassLibrary/Common/Streams/History.sc	/^	saveCS { |path, forward=false|$/;"	m
saveConsole	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	saveConsole { arg layout;$/;"	m
saveCurrentEnvironment	SCClassLibrary/Common/GUI/Document.sc	/^	saveCurrentEnvironment {$/;"	m
saveStory	SCClassLibrary/Common/Streams/History.sc	/^	saveStory { |path|$/;"	m
saveToFile	SCClassLibrary/Common/Control/Score.sc	/^	saveToFile { arg path;$/;"	m
scalar	quarks/cruciallib/Players/Patching.sc	/^	scalar { arg scalarPatchIn;$/;"	m
scale	SCClassLibrary/Common/Geometry/Point.sc	/^	scale { arg scale;$/;"	m
scale	SCClassLibrary/Common/Math/Polar.sc	/^	scale { arg scale;$/;"	m
scale	SCClassLibrary/Common/Math/Signal.sc	/^	scale { arg scale; _SignalScale ^this.primitiveFailed }$/;"	m
scale	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	scale { arg scale;$/;"	m
scale	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	scale { arg scale;$/;"	m
scaleAndWrite	SCClassLibrary/Common/Files/SoundFile.sc	/^	scaleAndWrite { |outFile, scale, startFrame, numFrames, chunkSize, threaded = false|$/;"	m
scaleByAlpha	SCClassLibrary/Common/Core/Color.sc	/^	scaleByAlpha {$/;"	m
scaleDur	SCClassLibrary/Common/Streams/Patterns.sc	/^	scaleDur { arg x; ^Pmulp(\\dur, x, this) }$/;"	m
scaleneg	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	scaleneg { arg aNumber, adverb; ^this.performBinaryOp('scaleneg', aNumber, adverb) }$/;"	m
scaleneg	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	scaleneg { arg function, adverb; ^this.composeBinaryOp('scaleneg', function, adverb) }$/;"	m
scaleneg	SCClassLibrary/Common/Math/Signal.sc	/^	scaleneg { arg aNumber; _ScaleNeg; ^aNumber.performBinaryOpOnSignal('scaleneg', this) }$/;"	m
scaleneg	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	scaleneg { arg aNumber, adverb; _ScaleNeg; ^aNumber.performBinaryOpOnSimpleNumber('scaleneg', this, adverb) }$/;"	m
scalesWhenResized	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	scalesWhenResized {$/;"	m
scalesWhenResized_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	scalesWhenResized_ { arg flag; \/\/ to test$/;"	m
scan	SCClassLibrary/Common/Files/Directory.sc	/^	scan { arg func;$/;"	m
scanFiles	SCClassLibrary/Common/Files/Directory.sc	/^	scanFiles { arg func;$/;"	m
scanFor	SCClassLibrary/Common/Collections/Dictionary.sc	/^	scanFor { arg argKey;$/;"	m
scanFor	SCClassLibrary/Common/Collections/Set.sc	/^	scanFor { arg argKey;$/;"	m
scanFor	SCClassLibrary/Common/Collections/Set.sc	/^	scanFor { arg obj;$/;"	m
scanForNextIndex	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	scanForNextIndex { arg index, prevIndex, order=1;$/;"	m
scatArgs	SCClassLibrary/Common/Collections/String.sc	/^	scatArgs { arg ... items; ^this.scatList(items) }$/;"	m
scatList	SCClassLibrary/Common/Collections/String.sc	/^	scatList { arg list;$/;"	m
sched	SCClassLibrary/Common/Control/OSCBundle.sc	/^	sched { arg time=0.0, func;$/;"	m
sched	SCClassLibrary/Common/Core/Clock.sc	/^	sched { arg delta, item;$/;"	m
sched	SCClassLibrary/Common/Core/Clock.sc	/^	sched { | delta, item |$/;"	m
sched	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	sched { arg func;$/;"	m
sched	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	sched { |delta, function|$/;"	m
sched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	sched { arg beats,function;$/;"	m
sched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	sched { arg beats,server,bundle,onArrival,onSend;$/;"	m
schedAbs	SCClassLibrary/Common/Core/Clock.sc	/^	schedAbs { arg beat, item;$/;"	m
schedAbs	SCClassLibrary/Common/Core/Clock.sc	/^	schedAbs { | time, item |$/;"	m
schedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	schedAbs { arg beat,function;$/;"	m
schedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	schedAbs { arg beat,server,bundle,onArrival;$/;"	m
schedAtTime	quarks/cruciallib/Scheduling/OSCSched.sc	/^	schedAtTime { arg atTime,server,bundle;$/;"	m
schedBundle	SCClassLibrary/Common/Control/schedBundle.sc	/^	schedBundle {  arg bundle,server,timeOfRequest;$/;"	m
schedBundle	SCClassLibrary/Common/Control/schedBundle.sc	/^	schedBundle { arg bundle,server,timeOfRequest;$/;"	m
schedBundleArrayOnClock	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	schedBundleArrayOnClock { |clock, bundleArray, lag = 0, server, latency|$/;"	m
schedBundleArrayOnClock	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	schedBundleArrayOnClock { |clock, bundleArray, lag = 0, server, latency|$/;"	m
schedSend	SCClassLibrary/Common/Control/OSCBundle.sc	/^	schedSend { arg server, clock, quant;$/;"	m
schedSync	SCClassLibrary/Common/Control/Server.sc	/^	schedSync { arg func;$/;"	m
schedule	SCClassLibrary/Common/Audio/UGen.sc	/^	schedule { arg outStack;$/;"	m
scope	SCClassLibrary/Common/GUI/PlusGUI/Control/UGen-scope.sc	/^	scope { arg name = "UGen Scope", bufsize = 4096, zoom = 1.0;$/;"	m
scope	SCClassLibrary/Common/GUI/PlusGUI/Control/server-scope.sc	/^	scope { arg bufsize = 4096, zoom;$/;"	m
scope	SCClassLibrary/Common/GUI/PlusGUI/Control/server-scope.sc	/^	scope { arg numChannels, index = 0, bufsize = 4096, zoom = (1), rate = \\audio;$/;"	m
scope	SCClassLibrary/Common/GUI/PlusGUI/Control/server-scope.sc	/^	scope { arg numChannels, outbus = 0, fadeTime = 0.05, bufsize = 4096, zoom;$/;"	m
scope	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	scope { | bufsize = 4096, zoom |$/;"	m
scope	quarks/cruciallib/Gui/SynthConsole.sc	/^	scope { arg duration=0.5;$/;"	m
scramble	SCClassLibrary/Common/Collections/Array.sc	/^	scramble {$/;"	m
scramble	SCClassLibrary/Common/Collections/List.sc	/^	scramble {$/;"	m
scramble	SCClassLibrary/Common/Collections/String.sc	/^	scramble {$/;"	m
screen	SCClassLibrary/Common/Core/Color.sc	/^	screen { arg aColor, opacity=1.0;$/;"	m
scroll	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	scroll { arg ... args;$/;"	m
scroll	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	scroll {| amount |	\/\/ +\/- range in viewFrames$/;"	m
scroll	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	scroll { arg func,bounds,autohidesScrollers=true,autoScrolls=true,$/;"	m
scroll	SCClassLibrary/Common/GUI/viewExtensions.sc	/^	scroll { arg func,bounds,$/;"	m
scroll	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  scroll { arg fraction; \/\/ a fraction of the visible range$/;"	m
scroll	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	scroll { arg func,bounds,autohidesScrollers=true,autoScrolls=true,$/;"	m
scrollPos	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  scrollPos { ^this.getProperty( \\scrollPos ); } \/\/ a fraction of the full scrolling range$/;"	m
scrollTo	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	scrollTo { | position |		\/\/ absolute. from 0 to 1$/;"	m
scrollTo	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  scrollTo { arg fraction; \/\/ a fraction of the full scrolling range$/;"	m
scrollToEnd	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	scrollToEnd {$/;"	m
scrollToEnd	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  scrollToEnd { this.invokeMethod( \\scrollToEnd ); }$/;"	m
scrollToStart	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	scrollToStart {$/;"	m
scrollToStart	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  scrollToStart { this.invokeMethod( \\scrollToStart ); }$/;"	m
scroll_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  scroll_ { arg aBool;$/;"	m
scroll_step_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  scroll_step_ { arg aFloat;$/;"	m
scurry	quarks/cruciallib/Instr/InstrSpawner.sc	/^	scurry { arg by=10;$/;"	m
scurve	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	scurve { ^this.performUnaryOp('scurve') }$/;"	m
scurve	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	scurve { ^this.composeUnaryOp('scurve') }$/;"	m
scurve	SCClassLibrary/Common/Core/Symbol.sc	/^	scurve { ^this }$/;"	m
scurve	SCClassLibrary/Common/Math/Signal.sc	/^	scurve { _SCurve; ^this.primitiveFailed }$/;"	m
scurve	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	scurve { _SCurve; ^this.primitiveFailed }$/;"	m
search	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	search { |query, ignoreCase=true|$/;"	m
search	quarks/cruciallib/Instr/InstrBrowser.sc	/^    search { arg q;$/;"	m
searchClasses	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	searchClasses { |string, rootNumber, matchCase, addHistory = true|$/;"	m
secStamp	SCClassLibrary/Common/Math/Date.sc	/^	secStamp {$/;"	m
seconds	SCClassLibrary/Common/Core/Clock.sc	/^	seconds { ^thisThread.seconds }$/;"	m
seconds_	SCClassLibrary/Common/Core/Clock.sc	/^	seconds_ { | newSeconds |$/;"	m
seconds_	SCClassLibrary/Common/Core/Nil.sc	/^	seconds_ {}$/;"	m
seconds_	SCClassLibrary/Common/Core/Thread.sc	/^	seconds_ { arg inSeconds; seconds = inSeconds; beats = clock.secs2beats(inSeconds); }$/;"	m
secretDefArgs	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	secretDefArgs {$/;"	m
secretObjects	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	secretObjects {$/;"	m
secs2bars	quarks/cruciallib/Scheduling/Tempo.sc	/^	secs2bars { arg secs; ^tempo * secs * beatsPerBarr }$/;"	m
secs2beats	SCClassLibrary/Common/Control/asScore/ScoreStreamPlayer.sc	/^	secs2beats { | beats | ^beats }$/;"	m
secs2beats	SCClassLibrary/Common/Core/Clock.sc	/^	secs2beats { arg secs;$/;"	m
secs2beats	quarks/cruciallib/Players/SFP/SFP.sc	/^	secs2beats { arg secs;$/;"	m
secs2beats	quarks/cruciallib/Scheduling/Tempo.sc	/^	secs2beats { arg secs; ^tempo * secs }$/;"	m
secs2frames	quarks/cruciallib/Players/SFP/SFP.sc	/^	secs2frames { arg secs; ^(secs * this.sampleRate ) }$/;"	m
sect	SCClassLibrary/Common/Collections/Collection.sc	/^	sect { | that |$/;"	m
sect	SCClassLibrary/Common/Collections/Set.sc	/^	sect { arg that;$/;"	m
sect	SCClassLibrary/Common/Geometry/Rect.sc	/^	sect { arg aRect;$/;"	m
section	SCClassLibrary/Common/Control/Score.sc	/^	section { arg start = 0, end, configevents;$/;"	m
seeds_	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	seeds_ { arg collection;$/;"	m
seek	SCClassLibrary/Common/Files/File.sc	/^	seek { arg offset = 0, origin = 0;$/;"	m
seek	SCClassLibrary/Common/Files/SoundFile.sc	/^	seek { arg offset = 0, origin = 0;$/;"	m
select	SCClassLibrary/Common/Collections/Collection.sc	/^	select { | function |$/;"	m
select	SCClassLibrary/Common/Collections/Dictionary.sc	/^	select { arg function;$/;"	m
select	SCClassLibrary/Common/Collections/SparseArray.sc	/^	select { arg function;$/;"	m
select	SCClassLibrary/Common/Core/Nil.sc	/^	select {}$/;"	m
select	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	select { arg index; \/\/this means no refresh;$/;"	m
select	SCClassLibrary/Common/Streams/Patterns.sc	/^	select { arg function;$/;"	m
select	SCClassLibrary/Common/Streams/Stream.sc	/^	select { arg function;$/;"	m
select	SCClassLibrary/QtCollider/QTextView.sc	/^  select { arg start, size;$/;"	m
select	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	select { arg x;$/;"	m
select	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	select { arg constraint;$/;"	m
select	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^    select { arg i;$/;"	m
selectAll	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	selectAll {| index |	\/\/ selection index$/;"	m
selectAll	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectAll { arg index; this.setSelection( index, [0, this.numFrames] ); }$/;"	m
selectAll	quarks/cruciallib/Sample/SampleGui.sc	/^	selectAll { 	sigG.setSelection(0,model.size) }$/;"	m
selectAs	SCClassLibrary/Common/Collections/Collection.sc	/^	selectAs { | function, class |$/;"	m
selectAs	SCClassLibrary/Common/Core/Nil.sc	/^	selectAs {}$/;"	m
selectByIndex	quarks/cruciallib/Editors/NumberEditor.sc	/^	selectByIndex { arg index;$/;"	m
selectInPlace	SCClassLibrary/Common/Collections/SparseArray.sc	/^	selectInPlace { arg function;$/;"	m
selectIndex	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectIndex { arg index; \/\/this means that the view will be refreshed$/;"	m
selectIndex	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  selectIndex { arg index;$/;"	m
selectItem	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	selectItem { arg item;$/;"	m
selectLine	SCClassLibrary/Common/GUI/Document.sc	/^	selectLine { | line |$/;"	m
selectMsg	SCClassLibrary/Common/Collections/Collection.sc	/^	selectMsg { | selector ... args |$/;"	m
selectNone	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	selectNone {| index |	 \/\/ selection index$/;"	m
selectNone	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectNone { arg index; this.setSelection( index, [0, 0] ); }$/;"	m
selectRange	SCClassLibrary/Common/GUI/Document.sc	/^	selectRange { | start=0, length=0 |$/;"	m
selectRange	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectRange {arg start=0, length=0;$/;"	m
selectUnderlinedText	SCClassLibrary/Common/GUI/Document.sc	/^	selectUnderlinedText { | clickPos |$/;"	m
selectUnderlinedText	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectUnderlinedText { arg clickPos;$/;"	m
selectedBackground	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectedBackground {$/;"	m
selectedBackground_	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectedBackground_ { | color |$/;"	m
selectedData	quarks/cruciallib/Sample/SampleGui.sc	/^	selectedData { ^model.signal.collect({arg s; s.copyRange(sigG.selectionStart,sigG.selectionEnd) }) }$/;"	m
selectedIndex	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	selectedIndex { ^selected }$/;"	m
selectedItem	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	selectedItem { ^labelArray.at(selected) }$/;"	m
selectedKeys	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	selectedKeys {  ^proxymixer.selectedKeys }$/;"	m
selectedKeys	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	selectedKeys { ^this.perform(selectMethod) }$/;"	m
selectedKeys	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	selectedKeys { ^this.perform(selectMethod) }$/;"	m
selectedKeysValues	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	selectedKeysValues {$/;"	m
selectedLabel	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	selectedLabel { ^labelArray.at(selected) }$/;"	m
selectedRangeLocation	SCClassLibrary/Common/GUI/Document.sc	/^	selectedRangeLocation {$/;"	m
selectedRangeLocation	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectedRangeLocation {$/;"	m
selectedRangeSize	SCClassLibrary/Common/GUI/Document.sc	/^	selectedRangeSize {$/;"	m
selectedRangeSize	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectedRangeSize {$/;"	m
selectedString	SCClassLibrary/Common/GUI/Document.sc	/^	selectedString {$/;"	m
selectedString	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	selectedString {$/;"	m
selectedString	SCClassLibrary/QtCollider/QTextView.sc	/^  selectedString {$/;"	m
selectedStringColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectedStringColor {$/;"	m
selectedStringColor	SCClassLibrary/QtCollider/QListView.sc	/^  selectedStringColor {$/;"	m
selectedStringColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectedStringColor_ { arg color;$/;"	m
selectedStringColor_	SCClassLibrary/QtCollider/QListView.sc	/^  selectedStringColor_ { arg color;$/;"	m
selectedString_	SCClassLibrary/Common/GUI/Document.sc	/^	selectedString_ { | txt |$/;"	m
selectedString_	SCClassLibrary/QtCollider/QTextView.sc	/^  selectedString_ { arg string; this.setProperty( \\selectedString, string ); }$/;"	m
selectedText	SCClassLibrary/Common/GUI/Document.sc	/^	selectedText {$/;"	m
selectedText	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	selectedText { ^this.getProperty(\\selectedText); }$/;"	m
selectedText	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	selectedText {$/;"	m
selectedText	SCClassLibrary/QtCollider/QWebView.sc	/^  selectedText { ^this.getProperty( \\selectedText ); }$/;"	m
selection	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	selection { |index|$/;"	m
selection	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  selection { ^this.getProperty( \\selectionIndexes );}$/;"	m
selection	SCClassLibrary/QtCollider/QListView.sc	/^  selection { ^ this.getProperty(\\selection) }$/;"	m
selection	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selection { arg index; ^this.invokeMethod( \\selection, index, true ); }$/;"	m
selectionAction_	SCClassLibrary/QtCollider/QListView.sc	/^  selectionAction_ { arg func;$/;"	m
selectionColor	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  selectionColor { ^this.getProperty(\\selectionColor) }$/;"	m
selectionColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectionColor_ { arg acolor;$/;"	m
selectionColor_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  selectionColor_ { arg color; this.setProperty(\\selectionColor, color) }$/;"	m
selectionDuration	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectionDuration { arg index; ^this.nonimpl("selectionDuration"); }$/;"	m
selectionEnd	quarks/cruciallib/Sample/SampleGui.sc	/^	selectionEnd {^sigG.selectionEnd }$/;"	m
selectionMode	SCClassLibrary/QtCollider/QListView.sc	/^  selectionMode {$/;"	m
selectionMode_	SCClassLibrary/QtCollider/QListView.sc	/^  selectionMode_ { arg mode;$/;"	m
selectionSize	SCClassLibrary/Common/GUI/Document.sc	/^	selectionSize {$/;"	m
selectionSize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	selectionSize {$/;"	m
selectionSize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectionSize {$/;"	m
selectionSize	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  selectionSize {$/;"	m
selectionSize	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectionSize { arg index;$/;"	m
selectionSize	SCClassLibrary/QtCollider/QTextView.sc	/^  selectionSize {$/;"	m
selectionSize	quarks/cruciallib/Sample/SampleGui.sc	/^	selectionSize { ^(sigG.selectionEnd - sigG.selectionStart) }$/;"	m
selectionSize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	selectionSize_ { arg aval;$/;"	m
selectionSize_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  selectionSize_ { arg anInt;$/;"	m
selectionStart	SCClassLibrary/Common/GUI/Document.sc	/^	selectionStart {$/;"	m
selectionStart	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	selectionStart {$/;"	m
selectionStart	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectionStart { arg index;$/;"	m
selectionStart	SCClassLibrary/QtCollider/QTextView.sc	/^  selectionStart {$/;"	m
selectionStart	quarks/cruciallib/Sample/SampleGui.sc	/^	selectionStart { ^sigG.selectionStart }$/;"	m
selectionStartTime	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selectionStartTime { arg index; ^this.nonimpl("selectionStartTime"); }$/;"	m
selections	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  selections { ^this.getProperty( \\selections ); }$/;"	m
selects	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	selects { |aRect|$/;"	m
semitones	SCClassLibrary/Common/Collections/Scale.sc	/^	semitones {$/;"	m
send	SCClassLibrary/Common/Audio/SynthDef.sc	/^	send { arg server, completionMsg;$/;"	m
send	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	send { arg server, completionMsg;$/;"	m
send	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	send { |aServer, tryToLoadReconstructedDefs = true|$/;"	m
send	SCClassLibrary/Common/Control/MIDIOut.sc	/^	send { arg outport, uid, len, hiStatus, loStatus, a=0, b=0, late;$/;"	m
send	SCClassLibrary/Common/Control/OSC.sc	/^	send { arg oscAddress ... args;$/;"	m
send	SCClassLibrary/Common/Control/OSCBundle.sc	/^	send { arg server, time, timeOfRequest;$/;"	m
send	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	send { arg server, nodeID, latency;$/;"	m
send	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	send { | extraArgs, index, freeLast = true |$/;"	m
sendAll	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sendAll { | extraArgs, freeLast = true |$/;"	m
sendAllToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sendAllToBundle { | bundle, extraArgs |$/;"	m
sendArray	SCClassLibrary/Common/Control/OSC.sc	/^	sendArray { arg array;$/;"	m
sendAtTime	SCClassLibrary/Common/Control/OSCBundle.sc	/^	sendAtTime { arg server, atTime, timeOfRequest; \/\/ offset by preparation$/;"	m
sendBundle	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendBundle { arg time ... args;$/;"	m
sendBundle	SCClassLibrary/Common/Control/Server.sc	/^	sendBundle { arg time ... msgs;$/;"	m
sendClumpedBundles	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendClumpedBundles { arg time ... args;$/;"	m
sendCollection	SCClassLibrary/Common/Control/Buffer.sc	/^	sendCollection { arg collection, startFrame = 0, wait = -1, action;$/;"	m
sendEach	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sendEach { | extraArgs, freeLast = true |$/;"	m
sendEachToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sendEachToBundle { | bundle, extraArgs |$/;"	m
sendMsg	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendMsg { arg ... args;$/;"	m
sendMsg	SCClassLibrary/Common/Control/Server.sc	/^	sendMsg { arg ... msg;$/;"	m
sendMsgSync	SCClassLibrary/Common/Control/Server.sc	/^	sendMsgSync { arg condition ... args;$/;"	m
sendNoTags	SCClassLibrary/Common/Control/OSC.sc	/^	sendNoTags { arg oscAddress ... args;$/;"	m
sendNotifyRequest	SCClassLibrary/Common/Control/Server.sc	/^	sendNotifyRequest { arg flag=true;$/;"	m
sendOSC	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	sendOSC { | msg |$/;"	m
sendObjectToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sendObjectToBundle { | bundle, object, extraArgs, index |$/;"	m
sendRaw	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendRaw { arg rawArray;$/;"	m
sendRaw	SCClassLibrary/Common/Control/OSC.sc	/^	sendRaw { arg rawArray;$/;"	m
sendRaw	SCClassLibrary/Common/Control/Server.sc	/^	sendRaw { arg rawArray;$/;"	m
sendStatusMsg	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendStatusMsg {$/;"	m
sendStatusMsg	SCClassLibrary/Common/Control/NetAddr.sc	/^	sendStatusMsg {} \/\/ ignore status messages$/;"	m
sendSynthDef	SCClassLibrary/Common/Control/Server.sc	/^	sendSynthDef { arg name, dir;$/;"	m
sendSynthDef	SCClassLibrary/Common/Control/Volume.sc	/^	sendSynthDef {$/;"	m
sendToNode	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	sendToNode { arg node, latency;$/;"	m
separate	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	separate { arg function = true;$/;"	m
seq	SCClassLibrary/Common/Core/Ref.sc	/^	seq { | pat | value = pat.embedInStream(this) }$/;"	m
seq	SCClassLibrary/Common/Streams/Pspawner.sc	/^	seq { | pat |$/;"	m
series	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	series { arg second, last;$/;"	m
seriesFill	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	seriesFill { arg start, step;$/;"	m
seriesIter	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	seriesIter { arg second, last;$/;"	m
servStr	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	servStr {$/;"	m
server	SCClassLibrary/Common/Control/NodeControl.sc	/^	server { ^node.server }$/;"	m
server	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	server { ^proxymixer.proxyspace.server }$/;"	m
server	quarks/cruciallib/Players/Patching.sc	/^	server { ^group.server }$/;"	m
server	quarks/cruciallib/Players/Patching.sc	/^	server { ^nodeControl.server }$/;"	m
server	quarks/cruciallib/Players/PlayerRecorder.sc	/^	server { ^player.server ? Server.default }$/;"	m
server	quarks/cruciallib/Scheduling/TempoBus.sc	/^	server { ^bus.server }$/;"	m
serverRunning_	SCClassLibrary/Common/Control/Server.sc	/^	serverRunning_ { arg val;$/;"	m
server_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	server_ { | inServer |$/;"	m
server_	SCClassLibrary/QtCollider/QScope2.sc	/^  server_ { arg server;$/;"	m
set	SCClassLibrary/Common/Audio/BufIO.sc	/^	set { arg values, offset = 0;$/;"	m
set	SCClassLibrary/Common/Control/Buffer.sc	/^	set { arg index,float ... morePairs;$/;"	m
set	SCClassLibrary/Common/Control/Bus.sc	/^	set { arg ... values; \/\/ shouldn't be larger than this.numChannels$/;"	m
set	SCClassLibrary/Common/Control/MIDIOut.sc	/^	set { arg inStatus, inPort, inChan, inB, inC, inThread;$/;"	m
set	SCClassLibrary/Common/Control/Node.sc	/^	set { arg ... args;$/;"	m
set	SCClassLibrary/Common/Core/Color.sc	/^	set {$/;"	m
set	SCClassLibrary/Common/Core/Function.sc	/^	set { arg ... args; ^this.valueArray(args) }$/;"	m
set	SCClassLibrary/Common/Core/Nil.sc	/^	set {}$/;"	m
set	SCClassLibrary/Common/Core/Ref.sc	/^	set { arg thing; value = thing }$/;"	m
set	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	set { arg label, spec, argAction, initVal, initAction = false;$/;"	m
set	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^	set { arg label, spec, argAction, initVal, initAction=false;$/;"	m
set	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	set { arg label, spec, argAction, initVal, initAction = false;$/;"	m
set	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	set { arg label, spec, argAction, initVal, initAction = false;$/;"	m
set	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	set {arg ... values;$/;"	m
set	SCClassLibrary/Common/Geometry/Point.sc	/^	set { arg argX=0, argY=0; x = argX; y = argY; }$/;"	m
set	SCClassLibrary/Common/Geometry/Rect.sc	/^	set { arg argLeft=0, argTop=0, argWidth=0, argHeight=0;$/;"	m
set	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	set { | ... args |$/;"	m
set	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	set { arg ... args; \/\/ key, val ...$/;"	m
set	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	set { arg ... args;$/;"	m
set	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	set { arg ... args;$/;"	m
set	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	set { arg val;$/;"	m
set	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	set { | ... args | \/\/ pairs of keys or indices and value$/;"	m
set	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	set { | ... args |$/;"	m
set	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	set {}$/;"	m
set	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  set { arg offset=0, data;$/;"	m
set	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	set { arg argX=0, argY=0, argZ=0; x = argX; y = argY; z = argZ;}$/;"	m
set	quarks/cruciallib/Editors/NumberEditor.sc	/^	set { arg val;$/;"	m
set	quarks/cruciallib/Instr/Patch.sc	/^	set { arg index, value;$/;"	m
setAdditions	SCClassLibrary/SCDoc/SCDoc.sc	/^    setAdditions {|a|$/;"	m
setAlignment	SCClassLibrary/QtCollider/QLayout.sc	/^  setAlignment { arg item, align;$/;"	m
setAll	SCClassLibrary/Common/Control/Bus.sc	/^	setAll { arg value;$/;"	m
setAlpha	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	setAlpha { arg a;$/;"	m
setArrayToBundle	quarks/cruciallib/Sample/Sample.sc	/^	setArrayToBundle { arg a,b;$/;"	m
setAt	SCClassLibrary/Common/Control/Bus.sc	/^	setAt { |offset ... values|$/;"	m
setBit	SCClassLibrary/Common/Math/Integer.sc	/^	setBit { arg bitNumber, bool = true; _SetBit ^this.primitiveFailed }$/;"	m
setBusIndex	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  setBusIndex { arg index;$/;"	m
setButtonColor	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	setButtonColor { arg butt,color;$/;"	m
setByKeys	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setByKeys { |newKeys|$/;"	m
setByKeys	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	setByKeys { |newKeys, newSettings|$/;"	m
setCollection	SCClassLibrary/Common/Collections/List.sc	/^	setCollection { arg aColl;$/;"	m
setColor	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	setColor {|color, x, y|$/;"	m
setColor	SCClassLibrary/QtCollider/QPalette.sc	/^  setColor { arg color, role, group;$/;"	m
setColor	SCClassLibrary/QtCollider/QTreeView.sc	/^  setColor { arg column, color;$/;"	m
setColors	SCClassLibrary/Common/GUI/Base/EZText.sc	/^	setColors { arg stringBackground, stringColor, textBackground, textStringColor,$/;"	m
setConstructionMode	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setConstructionMode {|flag|$/;"	m
setConstructionMode	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setConstructionMode { |flag|$/;"	m
setControlBusValue	SCClassLibrary/Common/Control/Server.sc	/^	setControlBusValue {$/;"	m
setControlBusValue	SCClassLibrary/Common/Control/Server.sc	/^	setControlBusValue {|busIndex, value|$/;"	m
setControlBusValues	SCClassLibrary/Common/Control/Server.sc	/^	setControlBusValues {$/;"	m
setControlBusValues	SCClassLibrary/Common/Control/Server.sc	/^	setControlBusValues {|busIndex, valueArray|$/;"	m
setControlNames	SCClassLibrary/Common/Audio/SynthDef.sc	/^	setControlNames {arg controlUGens, cn;$/;"	m
setConvert	quarks/MathLib/classes/patterns/extSetPattern.sc	/^	setConvert {$/;"	m
setCtlnum	quarks/cruciallib/Control/CCBank.sc	/^	setCtlnum { arg ccr,ctlnum;$/;"	m
setCurrent	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	setCurrent { current = this; }$/;"	m
setCurrent	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	setCurrent { |window|$/;"	m
setCurrentSheet	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	setCurrentSheet {|sheet| currentSheet = sheet;}$/;"	m
setCurrentSheet	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	setCurrentSheet {|sheet| currentSheet = sheet;}$/;"	m
setCurve	quarks/cruciallib/Editors/EnvEditor.sc	/^	setCurve {arg c;$/;"	m
setCycle	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  setCycle { arg frames;$/;"	m
setData	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setData { arg data, block, startframe=0, channels=1, samplerate=44100;$/;"	m
setDeepInput	quarks/cruciallib/Instr/Patch.sc	/^	setDeepInput { arg ai,ag,offset=0;$/;"	m
setDefault	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	setDefault { default = this }$/;"	m
setDefault	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	setDefault { default = this }$/;"	m
setDefault	SCClassLibrary/QtCollider/QFont.sc	/^  setDefault { arg class;$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setDefaults {$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	setDefaults { |options|$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^	setDefaults { |options|$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^	setDefaults { |options|$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	setDefaults {$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	setDefaults {$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	setDefaults { |options|$/;"	m
setDefaults	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	setDefaults {$/;"	m
setDeferredTaskInterval	SCClassLibrary/DefaultLibrary/Main.sc	/^	setDeferredTaskInterval { |interval| platform.setDeferredTaskInterval(interval) }$/;"	m
setDeferredTaskInterval	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	setDeferredTaskInterval { |interval| _SetDeferredTaskInterval }$/;"	m
setDeviation	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setDeviation { arg deviation, average;$/;"	m
setDeviation	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setDeviation { arg deviation, average;$/;"	m
setDeviation	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  setDeviation { arg deviation, average;$/;"	m
setDictionary	SCClassLibrary/Common/Collections/Bag.sc	/^	setDictionary { arg n;$/;"	m
setDragEventsEnabled	SCClassLibrary/QtCollider/QView.sc	/^  setDragEventsEnabled { arg enabled;$/;"	m
setEdButs	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	setEdButs {$/;"	m
setEditable	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setEditable { arg index, boolean;$/;"	m
setEditable	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setEditable { arg index, flag;$/;"	m
setEditableSelectionSize	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setEditableSelectionSize { arg index, editable; ^this.nonimpl("setEditableSelectionSize"); }$/;"	m
setEditableSelectionStart	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setEditableSelectionStart { arg index, editable; ^this.nonimpl("setEditableSelectionStart"); }$/;"	m
setEnv	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setEnv { arg env, minValue, maxValue, minTime, maxTime;$/;"	m
setEnv	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setEnv { arg env;$/;"	m
setEventHandlerEnabled	SCClassLibrary/QtCollider/QObject.sc	/^  setEventHandlerEnabled { arg event, enabled=true;$/;"	m
setExtent	SCClassLibrary/Common/Geometry/Rect.sc	/^	setExtent { arg argWidth=0, argHeight=0;$/;"	m
setField	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setField { |index, key, value, sameKey = false|$/;"	m
setField	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	setField { |index, key, value, sameKey = false|$/;"	m
setFill	SCClassLibrary/Common/Core/Color.sc	/^	setFill {$/;"	m
setFillColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setFillColor { arg index, color;$/;"	m
setFillColor	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setFillColor { arg index, color;$/;"	m
setFont	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	setFont {arg font, rangeStart= -1, rangeSize=100;$/;"	m
setFont	SCClassLibrary/QtCollider/QTextView.sc	/^  setFont { arg aFont, intStart, intSize;$/;"	m
setFont	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	setFont { | ...args |$/;"	m
setFontFamily	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	setFontFamily { arg generic, specific;$/;"	m
setFontFamily	SCClassLibrary/QtCollider/QWebView.sc	/^  setFontFamily { arg generic, specific;$/;"	m
setFromCmdString	SCClassLibrary/Platform/windows/extServerOptions.sc	/^	setFromCmdString { arg str;$/;"	m
setFunc	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setFunc { |key|$/;"	m
setFunc	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^	setFunc { |key|$/;"	m
setGroup	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	setGroup { | args, useLatency = false |$/;"	m
setGroupToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	setGroupToBundle { arg g,b;$/;"	m
setInnerExtent	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	setInnerExtent { arg w,h; \/\/ resize window keeping top left corner fixed$/;"	m
setInnerExtent	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	setInnerExtent { arg w,h; \/\/ resize window keeping top left corner fixed$/;"	m
setInnerExtent	SCClassLibrary/QtCollider/QWindow.sc	/^  setInnerExtent { arg w, h;$/;"	m
setInput	quarks/cruciallib/Instr/Patch.sc	/^	setInput { arg ai,ag;$/;"	m
setInput	quarks/cruciallib/Instr/Patch.sc	/^	setInput { arg index, newArg;$/;"	m
setInputBus	quarks/cruciallib/Players/PlayerSocket.sc	/^	setInputBus { arg abus;$/;"	m
setInputBus	quarks/cruciallib/Players/Silence.sc	/^	setInputBus { arg bus;$/;"	m
setKeyFilter	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	setKeyFilter { |key| filters.put(0, key); this.filterLines; }$/;"	m
setLEDState	SCClassLibrary/Common/Control/WII.sc	/^	setLEDState { |id,state|$/;"	m
setLEDState	SCClassLibrary/Platform/linux/LID.sc	/^	setLEDState { |evtCode, evtValue |$/;"	m
setMSCState	SCClassLibrary/Platform/linux/LID.sc	/^	setMSCState { |evtCode, evtValue |$/;"	m
setMeterAtBeat	SCClassLibrary/Common/Core/Clock.sc	/^	setMeterAtBeat { arg newBeatsPerBar, beats;$/;"	m
setMinColumnWidth	SCClassLibrary/QtCollider/QLayout.sc	/^  setMinColumnWidth { arg column, width;$/;"	m
setMinRowHeight	SCClassLibrary/QtCollider/QLayout.sc	/^  setMinRowHeight { arg row, height;$/;"	m
setMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	setMsg { arg index,float ... morePairs;$/;"	m
setMsg	SCClassLibrary/Common/Control/Bus.sc	/^	setMsg { arg ... values;$/;"	m
setMsg	SCClassLibrary/Common/Control/Node.sc	/^	setMsg { arg ... args;$/;"	m
setMsg	SCClassLibrary/Common/Control/NodeControl.sc	/^	setMsg { arg value; ^[15, node.nodeID,index, value] }$/;"	m
setN	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	setN { arg n;$/;"	m
setNAlpha	quarks/MathLib/classes/Polynomials/GenLaguerre.sc	/^	setNAlpha { arg n, a;$/;"	m
setNodeControl	quarks/cruciallib/Players/Silence.sc	/^	setNodeControl { arg nc;$/;"	m
setNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	setNodeMap { | map, xfade = true |$/;"	m
setPairs	SCClassLibrary/Common/Control/Bus.sc	/^	setPairs { | ... pairs|$/;"	m
setParent	SCClassLibrary/QtCollider/QObject.sc	/^  setParent { arg parent;$/;"	m
setPatchOut	quarks/cruciallib/Editors/NumberEditor.sc	/^	setPatchOut { arg po; patchOut = po }$/;"	m
setPatchOut	quarks/cruciallib/Players/AbstractPlayer.sc	/^	setPatchOut { arg po; \/\/ not while playing$/;"	m
setPixel	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	setPixel {|rgbaInteger, x, y|$/;"	m
setPixels	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	setPixels {|array, region=nil, start=0|$/;"	m
setProperties	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	setProperties { |... pairs|$/;"	m
setProperties	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	setProperties { arg numChannels, index, bufsize=4096, zoom, rate;$/;"	m
setProperties	SCClassLibrary/QtCollider/QStethoscope.sc	/^  setProperties { arg numChannels, index, bufsize=4096, zoom, rate;$/;"	m
setProperties	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  setProperties { arg numChannels, index, bufsize, zoom, rate;$/;"	m
setProperty	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setProperty { arg key, value;$/;"	m
setProperty	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setProperty { |key, value|$/;"	m
setProperty	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setProperty { arg key, value;$/;"	m
setProperty	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setProperty { |key, value|$/;"	m
setProperty	SCClassLibrary/QtCollider/QObject.sc	/^  setProperty { arg property, value, direct=true;$/;"	m
setPropertyList	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setPropertyList { arg list;$/;"	m
setPropertyList	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setPropertyList { arg list;$/;"	m
setPropertyWithAction	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setPropertyWithAction { arg symbol, obj;$/;"	m
setPropertyWithAction	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setPropertyWithAction { arg symbol, obj;$/;"	m
setRate	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  setRate { arg rate; \/\/ 0 = audio, 1 = control$/;"	m
setRates	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		setRates { arg args;$/;"	m
setRates	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	setRates { | ... args |$/;"	m
setResizeFixed	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	setResizeFixed { |resizeHandle|$/;"	m
setSelection	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	setSelection { |index, selection|$/;"	m
setSelection	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setSelection { arg index, selection;$/;"	m
setSelection	quarks/cruciallib/Sample/SampleGui.sc	/^	setSelection {arg s,e; sigG.setSelection(s,e) }$/;"	m
setSelectionColor	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setSelectionColor { arg index, color; this.invokeMethod( \\setSelectionColor, [index,color] ); }$/;"	m
setSelectionSize	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setSelectionSize { arg index, frames;$/;"	m
setSelectionStart	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  setSelectionStart { arg index, frame;$/;"	m
setSharedControl	SCClassLibrary/Common/Control/Server.sc	/^	setSharedControl { arg num, value;$/;"	m
setShortCut	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	setShortCut {|string, alt = false, ctrl = false|$/;"	m
setSize	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	setSize { arg width, height; \/\/ to test$/;"	m
setSlot	SCClassLibrary/Common/GUI/Inspector.sc	/^	setSlot {$/;"	m
setSlots	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	setSlots { arg array;$/;"	m
setSlots	SCClassLibrary/Common/Core/Object.sc	/^	setSlots { arg array;$/;"	m
setSource	quarks/cruciallib/Players/PlayerSocket.sc	/^	setSource { arg s,atTime,releaseTime;$/;"	m
setSourceLikeInPbind	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	setSourceLikeInPbind { arg obj;$/;"	m
setSourceToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	setSourceToBundle { arg aplayer,bundle,releaseTime=0.2;$/;"	m
setSourceToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	setSourceToBundle { arg s,bundle,releaseTime;$/;"	m
setSpan	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setSpan { arg lo, hi;$/;"	m
setSpan	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setSpan { arg lo, hi;$/;"	m
setSpan	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  setSpan { arg lo, hi;$/;"	m
setSpanActive	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	setSpanActive { arg lo, hi;$/;"	m
setSpanActive	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setSpanActive { arg lo, hi;$/;"	m
setSpanActive	SCClassLibrary/QtCollider/QRangeSlider.sc	/^  setSpanActive { arg lo, hi;$/;"	m
setStrFilter	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^	setStrFilter { |str| filters.put(1, str); this.filterLines; }$/;"	m
setStretch	SCClassLibrary/QtCollider/QLayout.sc	/^  setStretch { arg item, stretch;$/;"	m
setString	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setString { arg index, astring;$/;"	m
setString	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setString { arg index, string;$/;"	m
setString	SCClassLibrary/QtCollider/QTextView.sc	/^  setString { arg aString, intStart, intSize;$/;"	m
setString	SCClassLibrary/QtCollider/QTreeView.sc	/^  setString { arg column, string;$/;"	m
setStringColor	SCClassLibrary/QtCollider/QTextView.sc	/^  setStringColor { arg aColor, intStart, intSize;$/;"	m
setStroke	SCClassLibrary/Common/Core/Color.sc	/^	setStroke {$/;"	m
setSynchronous	SCClassLibrary/Common/Control/Bus.sc	/^	setSynchronous { |... values|$/;"	m
setTempoAtBeat	SCClassLibrary/Common/Core/Clock.sc	/^	setTempoAtBeat { arg newTempo, beats;$/;"	m
setTempoAtBeat	SCClassLibrary/JITLib/ProxySpace/TempoBusClock.sc	/^	setTempoAtBeat { arg newTempo, beats;$/;"	m
setTempoAtSec	SCClassLibrary/Common/Core/Clock.sc	/^	setTempoAtSec { arg newTempo, secs;$/;"	m
setTempoAtSec	SCClassLibrary/JITLib/ProxySpace/TempoBusClock.sc	/^	setTempoAtSec { arg newTempo, secs;$/;"	m
setTextColor	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	setTextColor { arg color,  rangeStart = -1, rangeSize = 0;$/;"	m
setTextColor	SCClassLibrary/QtCollider/QTreeView.sc	/^  setTextColor { arg column, color;$/;"	m
setTextColor	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	setTextColor { | ...args |$/;"	m
setThumbHeight	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setThumbHeight { arg index, height;$/;"	m
setThumbHeight	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setThumbHeight { arg index, height;$/;"	m
setThumbSize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setThumbSize { arg index, size;$/;"	m
setThumbSize	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setThumbSize { arg index, size;$/;"	m
setThumbWidth	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setThumbWidth { arg index, width;$/;"	m
setThumbWidth	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  setThumbWidth { arg index, width;$/;"	m
setToRanger	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setToRanger { |index, key, value, sameKey|$/;"	m
setToSlider	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setToSlider { |index, key, value, sameKey|$/;"	m
setToText	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	setToText { |index, key, value, sameKey = false|$/;"	m
setTopLeftBounds	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	setTopLeftBounds { |rect,menuSpacer=45|$/;"	m
setTopLeftBounds	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	setTopLeftBounds { |rect,menuSpacer=45|$/;"	m
setUnmappedValue	quarks/cruciallib/Editors/NumberEditor.sc	/^	setUnmappedValue { arg unipolar,change=true;$/;"	m
setValue	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	setValue { |arrays, findSpecs = true, refresh = true|$/;"	m
setView	SCClassLibrary/QtCollider/QTreeView.sc	/^  setView { arg column, view;$/;"	m
setVolumeRange	SCClassLibrary/Common/Control/Volume.sc	/^	setVolumeRange { arg argMin, argMax;$/;"	m
setXY	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setXY { arg x, y;$/;"	m
setXY	SCClassLibrary/QtCollider/QSlider2D.sc	/^  setXY { arg x, y;$/;"	m
setXYActive	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	setXYActive { arg x, y;$/;"	m
setXYActive	SCClassLibrary/QtCollider/QSlider2D.sc	/^  setXYActive { arg x, y;$/;"	m
setZoom	SCClassLibrary/Common/GUI/Grid.sc	/^	setZoom { arg min,max;$/;"	m
setenv	SCClassLibrary/Common/Collections/String.sc	/^	setenv { arg value;$/;"	m
seti	SCClassLibrary/Common/Control/Node.sc	/^	seti { arg ... args; \/\/ args are [key, index, value, key, index, value ...]$/;"	m
setn	SCClassLibrary/Common/Control/Buffer.sc	/^	setn { arg ... args;$/;"	m
setn	SCClassLibrary/Common/Control/Bus.sc	/^	setn { arg values;$/;"	m
setn	SCClassLibrary/Common/Control/Node.sc	/^	setn { arg ... args;$/;"	m
setn	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	setn { arg ... args; this.set(*args)  }$/;"	m
setn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	setn { | ... args |$/;"	m
setnAt	SCClassLibrary/Common/Control/Bus.sc	/^	setnAt { |offset, values|$/;"	m
setnMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	setnMsg { arg ... args;$/;"	m
setnMsg	SCClassLibrary/Common/Control/Bus.sc	/^	setnMsg { arg values;$/;"	m
setnMsg	SCClassLibrary/Common/Control/Node.sc	/^	setnMsg { arg ... args;$/;"	m
setnSynchronous	SCClassLibrary/Common/Control/Bus.sc	/^	setnSynchronous {|values|$/;"	m
settingClass	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		settingClass {$/;"	m
settingClass	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	settingClass {$/;"	m
settingKeys	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	settingKeys {$/;"	m
sfpBody	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	sfpBody { arg layout;$/;"	m
shallowCopy	SCClassLibrary/Common/Core/Function.sc	/^	shallowCopy { ^this }$/;"	m
shallowCopy	SCClassLibrary/Common/Core/Kernel.sc	/^	shallowCopy { ^this }$/;"	m
shallowCopy	SCClassLibrary/Common/Core/Object.sc	/^	shallowCopy { _ObjectShallowCopy; ^this.primitiveFailed }$/;"	m
shape	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	shape {$/;"	m
shape	SCClassLibrary/Common/Core/Object.sc	/^	shape { ^nil }$/;"	m
shape	quarks/MathLib/classes/various/Matrix.sc	/^	shape {$/;"	m
shapeNumber	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	shapeNumber { arg shapeName;$/;"	m
shared	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	shared { ^false }$/;"	m
shelf	SCClassLibrary/Common/Collections/Harmonics.sc	/^	shelf { arg start, end, startLevel = 1.0, endLevel = 0.0;$/;"	m
shellQuote	SCClassLibrary/Common/Collections/String.sc	/^	shellQuote {$/;"	m
shift	SCClassLibrary/Common/Collections/Array.sc	/^	shift { arg n, filler = 0.0;$/;"	m
shift	SCClassLibrary/Common/GUI/ControlModel.sc	/^	shift { |amount = 1|$/;"	m
shift	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	shift { arg x=0, y=0;$/;"	m
shift	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	shift { arg ... associations;$/;"	m
shift	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	shift { arg ... assns;$/;"	m
shift_scale_	SCClassLibrary/QtCollider/BasicViews.sc	/^  shift_scale_ { arg aFloat;$/;"	m
shmScopeAvailable	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	shmScopeAvailable {$/;"	m
shouldAddObject	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	shouldAddObject { | obj | ^obj.readyForPlay } \/\/ shared node proxy overrides this$/;"	m
shouldNotImplement	SCClassLibrary/Common/Core/Object.sc	/^	shouldNotImplement { arg method;$/;"	m
show	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	show {$/;"	m
showClassBrowser	SCClassLibrary/DefaultLibrary/Main.sc	/^	showClassBrowser {$/;"	m
showDialog	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  showDialog { |aOkFunc, aCancelFunc|$/;"	m
showHelp	SCClassLibrary/Common/Core/Kernel.sc	/^	showHelp {$/;"	m
showHelp	SCClassLibrary/DefaultLibrary/Main.sc	/^	showHelp {$/;"	m
showHelpBrowser	SCClassLibrary/DefaultLibrary/Main.sc	/^	showHelpBrowser {$/;"	m
showHelpSearch	SCClassLibrary/DefaultLibrary/Main.sc	/^	showHelpSearch {$/;"	m
showIndex_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	showIndex_ { arg abool;$/;"	m
showIndex_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  showIndex_ { arg aBool;$/;"	m
showKeyFor	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	showKeyFor { |key| ^(replaceKeys[key] ? key) }$/;"	m
shutdown	SCClassLibrary/Common/Core/Kernel.sc	/^	shutdown {$/;"	m
shutdown	SCClassLibrary/DefaultLibrary/Main.sc	/^	shutdown { \/\/ at recompile, quit$/;"	m
shutdown	SCClassLibrary/Platform/Platform.sc	/^	shutdown { }$/;"	m
shutdown	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	shutdown {$/;"	m
shutdown	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	shutdown {$/;"	m
sign	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sign { ^this.performUnaryOp('sign') }$/;"	m
sign	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sign { ^this.composeUnaryOp('sign') }$/;"	m
sign	SCClassLibrary/Common/Core/Symbol.sc	/^	sign { ^this }$/;"	m
sign	SCClassLibrary/Common/Math/Signal.sc	/^	sign { _Sign; ^this.primitiveFailed }$/;"	m
sign	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sign { _Sign; ^this.primitiveFailed }$/;"	m
signal	SCClassLibrary/Common/Core/Condition.sc	/^	signal {$/;"	m
signal	SCClassLibrary/Common/Core/Semaphore.sc	/^	signal {$/;"	m
signalRange	SCClassLibrary/Common/Audio/MacUGens.sc	/^	signalRange { ^\\unipolar }$/;"	m
signalRange	SCClassLibrary/Common/Audio/Noise.sc	/^	signalRange { ^\\unipolar }$/;"	m
signalRange	SCClassLibrary/Common/Audio/Osc.sc	/^	signalRange { ^\\unipolar }$/;"	m
signalRange	SCClassLibrary/Common/Audio/Trig.sc	/^	signalRange { ^\\unipolar }$/;"	m
signalRange	SCClassLibrary/Common/Audio/UGen.sc	/^	signalRange { ^\\bipolar }$/;"	m
signtest	quarks/MathLib/classes/statistics/extStatistics.sc	/^	signtest { |that, twotailed=true|$/;"	m
silent	SCClassLibrary/Common/Streams/Plambda.sc	/^	silent { return = Event.silent }$/;"	m
simplePath	SCClassLibrary/Common/Quarks/LocalQuarks.sc	/^	simplePath {$/;"	m
simplifyStoreArgs	SCClassLibrary/Common/Core/Object.sc	/^	simplifyStoreArgs { arg args;$/;"	m
simplifyStoreArgs	quarks/cruciallib/Players/AbstractPlayer.sc	/^	simplifyStoreArgs { arg args; ^args }$/;"	m
sin	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sin { ^this.performUnaryOp('sin') }$/;"	m
sin	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sin { ^this.composeUnaryOp('sin') }$/;"	m
sin	SCClassLibrary/Common/Core/Symbol.sc	/^	sin { ^this }$/;"	m
sin	SCClassLibrary/Common/Math/Signal.sc	/^	sin { _Sin; ^this.primitiveFailed }$/;"	m
sin	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sin { _Sin; ^this.primitiveFailed }$/;"	m
sine	SCClassLibrary/Common/Collections/Harmonics.sc	/^	sine { arg wavelength=4, iphase=0.5pi, mul=1.0, add=0.0;$/;"	m
sine1	SCClassLibrary/Common/Control/Buffer.sc	/^	sine1 { arg amps,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sine1Msg	SCClassLibrary/Common/Control/Buffer.sc	/^	sine1Msg { arg amps,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sine2	SCClassLibrary/Common/Control/Buffer.sc	/^	sine2 { arg freqs, amps,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sine2Msg	SCClassLibrary/Common/Control/Buffer.sc	/^	sine2Msg { arg freqs, amps,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sine3	SCClassLibrary/Common/Control/Buffer.sc	/^	sine3 { arg freqs, amps, phases,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sine3Msg	SCClassLibrary/Common/Control/Buffer.sc	/^	sine3Msg { arg freqs, amps, phases,normalize=true,asWavetable=true,clearFirst=true;$/;"	m
sineFill	SCClassLibrary/Common/Math/Signal.sc	/^	sineFill { arg amplitudes, phases;$/;"	m
sineFill2	SCClassLibrary/Common/Math/Signal.sc	/^	sineFill2 { arg list;$/;"	m
sinh	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sinh { ^this.performUnaryOp('sinh') }$/;"	m
sinh	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sinh { ^this.composeUnaryOp('sinh') }$/;"	m
sinh	SCClassLibrary/Common/Core/Symbol.sc	/^	sinh { ^this }$/;"	m
sinh	SCClassLibrary/Common/Math/Signal.sc	/^	sinh { _SinH; ^this.primitiveFailed }$/;"	m
sinh	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sinh { _SinH; ^this.primitiveFailed }$/;"	m
size	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	size { _BasicSize }$/;"	m
size	SCClassLibrary/Common/Collections/Collection.sc	/^	size {$/;"	m
size	SCClassLibrary/Common/Collections/Interval.sc	/^	size { ^end - start div: step + 1 }$/;"	m
size	SCClassLibrary/Common/Collections/List.sc	/^	size { ^array.size }$/;"	m
size	SCClassLibrary/Common/Collections/Pair.sc	/^	size { var i = 0, link;$/;"	m
size	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	size {$/;"	m
size	SCClassLibrary/Common/Collections/Scale.sc	/^	size {$/;"	m
size	SCClassLibrary/Common/Collections/SparseArray.sc	/^	size { ^indices.size }$/;"	m
size	SCClassLibrary/Common/Collections/SparseArray.sc	/^	size {$/;"	m
size	SCClassLibrary/Common/Core/Object.sc	/^	size { ^0 }$/;"	m
size	SCClassLibrary/Common/Geometry/Rect.sc	/^	size { ^Size(width,height) }$/;"	m
size	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  size { ^this.getProperty(\\sliderCount) }$/;"	m
size	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	size { ^dict.size } $/;"	m
size	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	size { ^items.size }$/;"	m
size	quarks/cruciallib/Sample/Sample.sc	/^	size {$/;"	m
sizeHint	SCClassLibrary/QtCollider/QView.sc	/^  sizeHint { ^this.getProperty(\\sizeHint) }$/;"	m
sizeHint	SCClassLibrary/QtCollider/QWindow.sc	/^  sizeHint { ^view.sizeHint }$/;"	m
size_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	size_ { arg val; if(window.notNil) { window.bounds = this.makeBounds(val) } }$/;"	m
size_	SCClassLibrary/Common/Geometry/Rect.sc	/^	size_ { |sz| width = sz.width; height = sz.height }$/;"	m
size_	SCClassLibrary/QtCollider/QFont.sc	/^  size_ { arg pixelSize; this.pixelSize_( pixelSize ); }$/;"	m
size_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  size_ { arg int; this.setProperty( \\sliderCount, int ) }$/;"	m
size_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  size_ { arg val; if(window.notNil) { window.bounds = this.makeBounds(val) } }$/;"	m
size_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  size_ { arg value;$/;"	m
skdinit	quarks/cruciallib/Sequencers/BusDriver.sc	/^	skdinit {$/;"	m
skew	quarks/MathLib/classes/statistics/extStatistics.sc	/^	skew { arg mean;	\/\/ supply mean if known$/;"	m
skewPop	quarks/MathLib/classes/statistics/extStatistics.sc	/^	skewPop { arg mean;	\/\/ supply mean if known$/;"	m
skin	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	skin { ^GUI.skins[\\jitSmall] }$/;"	m
skin	SCClassLibrary/QtCollider/deprecated-3.5.sc	/^  skin { this.deprecated( thisMethod ); ^nil }$/;"	m
skin_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	skin_ { arg newskin;$/;"	m
skip	SCClassLibrary/Common/Streams/IOStream.sc	/^	skip { arg n;$/;"	m
sleep	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sleep {$/;"	m
sleep	SCClassLibrary/Platform/osx/extMain.sc	/^	sleep {$/;"	m
slew	SCClassLibrary/Common/Audio/UGen.sc	/^	slew { arg up = 1, down = 1;$/;"	m
slew	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	slew { arg ... args; ^this.multiChannelPerform('slew', *args) }$/;"	m
slice	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slice { arg ... cuts;$/;"	m
slice	SCClassLibrary/Common/Core/Object.sc	/^	slice { ^this }$/;"	m
slide	SCClassLibrary/Common/Collections/Array.sc	/^	slide { arg windowLength=3, stepSize=1;$/;"	m
slide	SCClassLibrary/Common/Collections/List.sc	/^	slide { arg windowLength=3, stepSize=1;$/;"	m
slider	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	slider { arg layout, bounds;$/;"	m
slot	SCClassLibrary/Platform/linux/LID.sc	/^	slot { | evtType, evtCode |$/;"	m
slotAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slotAt { arg index;$/;"	m
slotAt	SCClassLibrary/Common/Core/Object.sc	/^	slotAt { arg index;$/;"	m
slotFor	SCClassLibrary/Common/Collections/SparseArray.sc	/^	slotFor { arg index;$/;"	m
slotIndex	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slotIndex { arg key;$/;"	m
slotIndex	SCClassLibrary/Common/Core/Object.sc	/^	slotIndex { arg key;$/;"	m
slotKey	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slotKey { arg index;$/;"	m
slotKey	SCClassLibrary/Common/Core/Object.sc	/^	slotKey { arg index;$/;"	m
slotPut	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slotPut { arg index, value;$/;"	m
slotPut	SCClassLibrary/Common/Core/Object.sc	/^	slotPut { arg index, value;$/;"	m
slotSize	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	slotSize {$/;"	m
slotSize	SCClassLibrary/Common/Core/Object.sc	/^	slotSize {$/;"	m
slotValuesDo	SCClassLibrary/Common/Core/Object.sc	/^	slotValuesDo { arg function;$/;"	m
slotsDo	SCClassLibrary/Common/Core/Object.sc	/^	slotsDo { arg function;$/;"	m
smallGui	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	smallGui { arg layout;$/;"	m
smallGui	quarks/cruciallib/Gui/gui.sc	/^	smallGui { arg  ... args;$/;"	m
smallGui	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^	smallGui { arg layout;$/;"	m
snapSecondToBeat	quarks/cruciallib/Players/SFP/SFP.sc	/^	snapSecondToBeat { arg second,beats=4.0;$/;"	m
socketFreeAll	quarks/cruciallib/Players/PlayerSocket.sc	/^	socketFreeAll {$/;"	m
softPut	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	softPut { |param, val, within = 0.025, mapped = true, lastVal, spec|$/;"	m
softSet	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	softSet { |param, val, within = 0.025, mapped = true, lastVal, spec|$/;"	m
softVol_	SCClassLibrary/JITLib/GUI/extSoftSet.sc	/^	softVol_ { |val, within=0.025, pause=true, lastVal, spec|$/;"	m
softclip	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	softclip { ^this.performUnaryOp('softclip') }$/;"	m
softclip	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	softclip { ^this.composeUnaryOp('softclip') }$/;"	m
softclip	SCClassLibrary/Common/Core/Symbol.sc	/^	softclip { ^this }$/;"	m
softclip	SCClassLibrary/Common/Math/Signal.sc	/^	softclip { _SoftClip; ^this.primitiveFailed }$/;"	m
softclip	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	softclip { _SoftClip; ^this.primitiveFailed }$/;"	m
solve	quarks/MathLib/classes/various/LinearSystem.sc	/^	solve { arg b, method = \\crout; var lu;$/;"	m
songPtr	SCClassLibrary/Common/Control/MIDIOut.sc	/^	songPtr { arg songPtr;$/;"	m
songSelect	SCClassLibrary/Common/Control/MIDIOut.sc	/^	songSelect { arg song;$/;"	m
sort	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sort { arg function;$/;"	m
sort	SCClassLibrary/Common/Collections/Set.sc	/^	sort { arg func;$/;"	m
sort	SCClassLibrary/Common/Collections/SortedList.sc	/^	sort { this.sortRange(0, array.size - 1) }$/;"	m
sort	SCClassLibrary/Common/Control/Score.sc	/^	sort {$/;"	m
sort	SCClassLibrary/QtCollider/QTreeView.sc	/^  sort { arg column, descending = false;$/;"	m
sortBy	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sortBy { arg key;$/;"	m
sortClassDoc	SCClassLibrary/SCDoc/SCDoc.sc	/^    sortClassDoc {$/;"	m
sortMap	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sortMap { arg function;$/;"	m
sortRange	SCClassLibrary/Common/Collections/SortedList.sc	/^	sortRange { arg i, j;$/;"	m
sortedKeysValuesDo	SCClassLibrary/Common/Collections/Dictionary.sc	/^	sortedKeysValuesDo { arg function, sortFunc;$/;"	m
sortedKeysValuesDo	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	sortedKeysValuesDo { arg function;$/;"	m
sortedMedian	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sortedMedian {$/;"	m
sortedTreeDo	SCClassLibrary/Common/Collections/Library.sc	/^	sortedTreeDo {$/;"	m
soundFilePath	quarks/cruciallib/Players/SFP/SFP.sc	/^	soundFilePath { ^file.soundFilePath }$/;"	m
soundFilePath_	quarks/cruciallib/Sample/Sample.sc	/^	soundFilePath_ { arg string;$/;"	m
source	SCClassLibrary/Common/Collections/Array.sc	/^	source {$/;"	m
source	SCClassLibrary/Common/Core/Nil.sc	/^	source {}$/;"	m
source	SCClassLibrary/Common/Core/Object.sc	/^	source { ^this }$/;"	m
source	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	source { ^value }$/;"	m
source	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	source { ^objects.at(0).source }$/;"	m
sourceGui	quarks/cruciallib/Instr/InstrGui.sc	/^	sourceGui { arg layout,width;$/;"	m
sourceGui	quarks/cruciallib/Instr/InstrGui.sc	/^	sourceGui { arg layout;$/;"	m
source_	SCClassLibrary/Common/Core/Nil.sc	/^	source_ {}$/;"	m
source_	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	source_ { arg obj;$/;"	m
source_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	source_ { arg obj;$/;"	m
source_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	source_ { | obj |$/;"	m
sources	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sources { ^objects.array.collect(_.source) }$/;"	m
sources_	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	sources_ { | list |$/;"	m
space	SCClassLibrary/Common/Streams/IOStream.sc	/^	space { this.put(Char.space); }$/;"	m
spacing	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	spacing {$/;"	m
spacing	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	spacing {$/;"	m
spacing_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	spacing_ { arg distance;$/;"	m
spacing_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	spacing_ { arg distance;$/;"	m
spacing_	SCClassLibrary/QtCollider/QLayout.sc	/^  spacing_ { arg spacing;$/;"	m
sparseAddAll	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseAddAll { arg coll;$/;"	m
sparseCollect	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseCollect { arg function;$/;"	m
sparseReject	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseReject { arg function;$/;"	m
sparseRemove	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseRemove { arg item;$/;"	m
sparseRemoveAt	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseRemoveAt { arg index;$/;"	m
sparseSelect	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseSelect { arg function;$/;"	m
sparseSum	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sparseSum { | function |$/;"	m
spawn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	spawn { | extraArgs, index = 0 |$/;"	m
spawn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spawn { arg atTime,timeOfRequest;$/;"	m
spawnAtTime	quarks/cruciallib/Players/TempoPlayer.sc	/^	spawnAtTime {}$/;"	m
spawnEvent	quarks/cruciallib/Instr/Instr.sc	/^	spawnEvent { arg event;$/;"	m
spawnNext	quarks/cruciallib/Instr/InstrSpawner.sc	/^	spawnNext {$/;"	m
spawnOn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spawnOn { arg group,bus, atTime,timeOfRequest;$/;"	m
spawnOnToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spawnOnToBundle { arg agroup,bus,bundle;$/;"	m
spawnOnToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	spawnOnToBundle {}$/;"	m
spawnPlayer	quarks/cruciallib/Players/PlayerSocket.sc	/^	spawnPlayer { arg player,releaseTime,beatDelta=0.0,forceRespawn=false;$/;"	m
spawnToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	spawnToBundle { | bundle, extraArgs, target, addAction = 0 | \/\/ assumes self freeing$/;"	m
spawnToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	spawnToBundle {} \/\/ only active in synthcontrols$/;"	m
spawnToBundle	quarks/cruciallib/Instr/InstrSpawner.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	spawnToBundle { |b|$/;"	m
spawnToBundle	quarks/cruciallib/Instr/Patch.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spawnToBundle { arg bundle,selector=\\addToTailMsg;$/;"	m
spawnToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Players/HasSubject.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Players/PlayerSocket.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Players/TempoPlayer.sc	/^	spawnToBundle {}$/;"	m
spawnToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	spawnToBundle {}$/;"	m
spawnToBundle	quarks/cruciallib/Sequencers/BusDriver.sc	/^	spawnToBundle { arg bundle;$/;"	m
spawnToBundle	quarks/cruciallib/Sequencers/BusDriver.sc	/^	spawnToBundle { |b|$/;"	m
speak	SCClassLibrary/Common/Collections/String.sc	/^	speak { arg channel = 0, force = false;$/;"	m
spearmanRho	quarks/MathLib/classes/statistics/extStatistics.sc	/^	spearmanRho { |that|$/;"	m
spec	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	spec { ^if(rate === \\audio) { audiospec } {  controlspec } }$/;"	m
spec	SCClassLibrary/QtCollider/QStethoscope.sc	/^  spec { ^if(rate === \\audio) { audiospec } {  controlspec } }$/;"	m
spec	quarks/cruciallib/Editors/EnvEditor.sc	/^	spec { ^EnvSpec(this.value) }$/;"	m
spec	quarks/cruciallib/Editors/NumberEditor.sc	/^	spec { ^thisMethod.subclassResponsibility }$/;"	m
spec	quarks/cruciallib/Instr/Patch.sc	/^	spec {$/;"	m
spec	quarks/cruciallib/Instr/instrSupport.sc	/^	spec {$/;"	m
spec	quarks/cruciallib/Players/AbstractPlayer.sc	/^	spec {$/;"	m
spec	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	spec { ^\\trig.asSpec }$/;"	m
spec	quarks/cruciallib/Players/TempoPlayer.sc	/^	spec { ^\\tempo.asSpec }$/;"	m
spec	quarks/cruciallib/Sequencers/BusDriver.sc	/^	spec { ^\\trig.asSpec }$/;"	m
spec	quarks/cruciallib/Sequencers/BusDriver.sc	/^	spec {$/;"	m
specAt	quarks/cruciallib/Instr/Patch.sc	/^	specAt { arg i; ^instr.specs.at(i) }$/;"	m
spec_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	spec_ { |sp|$/;"	m
spec_	quarks/cruciallib/Editors/NumberEditor.sc	/^	spec_ { arg aspec;$/;"	m
special	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	special { |defname, extraargs|$/;"	m
specialIndex	SCClassLibrary/Common/Core/Symbol.sc	/^	specialIndex {$/;"	m
specialSynthArgs_	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	specialSynthArgs_ {|args|$/;"	m
species	SCClassLibrary/Common/Collections/Collection.sc	/^	species { ^Array }$/;"	m
species	SCClassLibrary/Common/Collections/LinkedList.sc	/^	species { ^this.class }$/;"	m
species	SCClassLibrary/Common/Collections/Set.sc	/^	species { ^this.class }$/;"	m
species	SCClassLibrary/Common/Collections/String.sc	/^	species { ^String }$/;"	m
species	SCClassLibrary/Common/Core/Object.sc	/^	species { ^this.class }$/;"	m
species	quarks/MathLib/classes/Polynomials/Polynomial.sc	/^	species { ^this.class }	$/;"	m
specs_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	specs_ { |argSpecs|$/;"	m
spherical	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extNumber.sc	/^	spherical { arg theta, phi; ^Spherical.new(this, theta, phi) }$/;"	m
split	SCClassLibrary/Common/Collections/Interval.sc	/^	split { arg num;$/;"	m
split	SCClassLibrary/Common/Collections/String.sc	/^	split { arg separator=$\/;$/;"	m
split	SCClassLibrary/Common/Control/Engine.sc	/^	split { |span|$/;"	m
split	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	split { | key = \\id |$/;"	m
splitBundles	SCClassLibrary/Common/Control/NetAddr.sc	/^	splitBundles { arg time;$/;"	m
splitext	SCClassLibrary/Common/Collections/String.sc	/^	splitext {$/;"	m
sputter	SCClassLibrary/Common/Collections/Array.sc	/^	sputter { arg probability=0.25, maxlen = 100;$/;"	m
sqrdif	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sqrdif { arg aNumber, adverb; ^this.performBinaryOp('sqrdif', aNumber, adverb) }$/;"	m
sqrdif	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sqrdif { arg function, adverb; ^this.composeBinaryOp('sqrdif', function, adverb) }$/;"	m
sqrdif	SCClassLibrary/Common/Math/Signal.sc	/^	sqrdif { arg aNumber; _SqrDif; ^aNumber.performBinaryOpOnSignal('sqrdif', this) }$/;"	m
sqrdif	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sqrdif { arg aNumber, adverb; _SqrDif; ^aNumber.performBinaryOpOnSimpleNumber('sqrdif', this, adverb) }$/;"	m
sqrsum	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sqrsum { arg aNumber, adverb; ^this.performBinaryOp('sqrsum', aNumber, adverb) }$/;"	m
sqrsum	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sqrsum { arg function, adverb; ^this.composeBinaryOp('sqrsum', function, adverb) }$/;"	m
sqrsum	SCClassLibrary/Common/Math/Signal.sc	/^	sqrsum { arg aNumber; _SqrSum; ^aNumber.performBinaryOpOnSignal('sqrsum', this) }$/;"	m
sqrsum	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sqrsum { arg aNumber, adverb; _SqrSum; ^aNumber.performBinaryOpOnSimpleNumber('sqrsum', this, adverb) }$/;"	m
sqrt	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sqrt { ^this.performUnaryOp('sqrt') }$/;"	m
sqrt	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sqrt { ^this.composeUnaryOp('sqrt') }$/;"	m
sqrt	SCClassLibrary/Common/Core/Symbol.sc	/^	sqrt { ^this }$/;"	m
sqrt	SCClassLibrary/Common/Math/Signal.sc	/^	sqrt { _Sqrt; ^this.primitiveFailed }$/;"	m
sqrt	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sqrt { _Sqrt; ^this.primitiveFailed }$/;"	m
squared	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	squared { ^this.performUnaryOp('squared') }$/;"	m
squared	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	squared { ^this.composeUnaryOp('squared') }$/;"	m
squared	SCClassLibrary/Common/Math/Complex.sc	/^	squared { ^this * this }$/;"	m
squared	SCClassLibrary/Common/Math/Signal.sc	/^	squared { _Squared; ^this.primitiveFailed }$/;"	m
squared	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	squared { _Squared; ^this.primitiveFailed }$/;"	m
srcString	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^	srcString {$/;"	m
stackDepth	SCClassLibrary/Common/Core/Object.sc	/^	stackDepth { _StackDepth }$/;"	m
stamp	SCClassLibrary/Common/Math/Date.sc	/^	stamp {$/;"	m
standardizePath	SCClassLibrary/Common/Collections/String.sc	/^	standardizePath {$/;"	m
start	SCClassLibrary/Common/Control/MIDIOut.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/Control/Module.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/Control/SkipJack.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/GUI/PlusGUI/Control/FreqScope.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/GUI/ServerMeter.sc	/^	start {$/;"	m
start	SCClassLibrary/Common/Streams/Stream.sc	/^	start { arg argClock, quant;$/;"	m
start	SCClassLibrary/QtCollider/QScope2.sc	/^  start { this.invokeMethod(\\start); }$/;"	m
start	quarks/cruciallib/Control/MIDIClock.sc	/^	start {$/;"	m
startAliveThread	SCClassLibrary/Common/Control/Server.sc	/^	startAliveThread { arg delay=0.0;$/;"	m
startAnim	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	startAnim {$/;"	m
startFrame	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  startFrame { ^this.getProperty( \\startFrame ); }$/;"	m
startIndex_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	startIndex_ { arg val; this.setProperty( \\startIndex, val )}$/;"	m
startIndex_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  startIndex_ { arg anInt;$/;"	m
startRow	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	startRow {$/;"	m
startRow	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	startRow {$/;"	m
startTask	quarks/cruciallib/Instr/InstrSpawner.sc	/^	startTask {$/;"	m
startTime	SCClassLibrary/Common/Control/Score.sc	/^	startTime { ^score.first[0] }$/;"	m
startup	SCClassLibrary/Common/Core/Kernel.sc	/^	startup {$/;"	m
startup	SCClassLibrary/DefaultLibrary/Main.sc	/^	startup {$/;"	m
startup	SCClassLibrary/Platform/Platform.sc	/^	startup { }$/;"	m
startup	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	startup {$/;"	m
startup	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^	startup {$/;"	m
startup	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	startup {$/;"	m
startup	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	startup {$/;"	m
startupFiles	SCClassLibrary/Platform/Platform.sc	/^	startupFiles {$/;"	m
startupFiles	SCClassLibrary/Platform/iphone/iPhonePlatform.sc	/^	startupFiles {$/;"	m
startupFiles	SCClassLibrary/Platform/linux/LinuxPlatform.sc	/^	startupFiles {$/;"	m
startupFiles	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	startupFiles {$/;"	m
startupFiles	SCClassLibrary/Platform/windows/WindowsPlatform.sc	/^	startupFiles {$/;"	m
state_	SCClassLibrary/Platform/osx/scide_scapp/CocoaMenu.sc	/^	state_ {|bool|$/;"	m
states_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	states_ { arg array;$/;"	m
states_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	states_ { arg array;$/;"	m
states_	SCClassLibrary/QtCollider/BasicViews.sc	/^  states_ { arg stateArray;$/;"	m
status	SCClassLibrary/Common/Control/Server.sc	/^	status {$/;"	m
status	SCClassLibrary/Common/Quarks/Quarks.sc	/^	status { |name|$/;"	m
stdDev	quarks/MathLib/classes/statistics/extStatistics.sc	/^	stdDev { arg mean; ^this.variance(mean).sqrt; }$/;"	m
stdDevPop	quarks/MathLib/classes/statistics/extStatistics.sc	/^	stdDevPop { arg mean; ^this.variancePop(mean).sqrt; }$/;"	m
step	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	step {$/;"	m
step	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	step {$/;"	m
step	SCClassLibrary/Common/Streams/Stream.sc	/^	step { arg inval;$/;"	m
step	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  step { ^this.getProperty(\\step) }$/;"	m
step	SCClassLibrary/QtCollider/QSlider.sc	/^  step { ^this.getProperty(\\step) }$/;"	m
step_	SCClassLibrary/Common/GUI/ControlModel.sc	/^	step_ { arg s;$/;"	m
step_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	step_ { arg stepSize;$/;"	m
step_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	step_ { arg stepSize;$/;"	m
step_	SCClassLibrary/QtCollider/BasicViews.sc	/^  step_ { arg aFloat;$/;"	m
step_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  step_ { arg aFloat;$/;"	m
step_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  step_ { arg val; this.setProperty( \\step, val ) }$/;"	m
steps	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	steps { |x, y|$/;"	m
stepsPerOctave	SCClassLibrary/Common/Collections/Scale.sc	/^	stepsPerOctave {$/;"	m
stop	SCClassLibrary/Common/Control/MIDIOut.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Control/Module.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Control/Score.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Control/SkipJack.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Core/Clock.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Core/Kernel.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Core/Object.sc	/^	stop { ^this }$/;"	m
stop	SCClassLibrary/Common/Core/Thread.sc	/^	stop {$/;"	m
stop	SCClassLibrary/Common/Streams/History.sc	/^	stop { player.stop; }$/;"	m
stop	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	stop { this.use { ~stopServerNode.value }  }$/;"	m
stop	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	stop { |stopTempo|$/;"	m
stop	SCClassLibrary/Common/Streams/Stream.sc	/^	stop {$/;"	m
stop	SCClassLibrary/DefaultLibrary/Main.sc	/^	stop { \/\/ called by command-.$/;"	m
stop	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	stop { player.stop; player = nil; }$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	stop { | fadeTime = 0.1, reset = false |$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	stop { | argFadeTime |$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stop { stream.stop }$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stop { this.subclassResponsibility(thisMethod) }$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stop {$/;"	m
stop	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	stop { arg fadeTime;$/;"	m
stop	SCClassLibrary/QtCollider/QScope2.sc	/^  stop { this.invokeMethod(\\stop); }$/;"	m
stop	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  stop {$/;"	m
stop	quarks/cruciallib/Control/MIDIClock.sc	/^	stop {$/;"	m
stop	quarks/cruciallib/Gui/SynthConsole.sc	/^	stop { arg stopFunc;$/;"	m
stop	quarks/cruciallib/Players/AbstractPlayer.sc	/^	stop { arg atTime;$/;"	m
stop	quarks/cruciallib/Players/PlayerRecorder.sc	/^	stop {$/;"	m
stop	quarks/cruciallib/UncoupledUsefulThings/MultiChannelRecorder.sc	/^	stop { \/\/arg atTime;$/;"	m
stopAliveThread	SCClassLibrary/Common/Control/Server.sc	/^	stopAliveThread {$/;"	m
stopAllToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	stopAllToBundle { | bundle, fadeTime |$/;"	m
stopAnim	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^	stopAnim {$/;"	m
stopReadFromBus	SCClassLibrary/Common/Control/NodeControl.sc	/^	stopReadFromBus {$/;"	m
stopRecording	SCClassLibrary/Common/Control/Server.sc	/^	stopRecording {$/;"	m
stopRoutine	quarks/cruciallib/Sequencers/BusDriver.sc	/^	stopRoutine {$/;"	m
stopStreams	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stopStreams { | streams, dt |$/;"	m
stopToBundle	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	stopToBundle { | bundle | \/\/ maybe with fade later.$/;"	m
stopToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stopToBundle { | bundle |$/;"	m
stopToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stopToBundle { | bundle, dt |$/;"	m
stopToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	stopToBundle { | bundle, fadeTime |$/;"	m
stopToBundle	quarks/cruciallib/Control/MIDIClock.sc	/^	stopToBundle { arg b;$/;"	m
stopToBundle	quarks/cruciallib/Control/MIDIPlayer.sc	/^	stopToBundle { arg bundle;$/;"	m
stopToBundle	quarks/cruciallib/Editors/NumberEditor.sc	/^	stopToBundle { arg b; this.freePatchOutToBundle(b); }$/;"	m
stopToBundle	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	stopToBundle { |b|$/;"	m
stopToBundle	quarks/cruciallib/Instr/Patch.sc	/^	stopToBundle { arg bundle;$/;"	m
stopToBundle	quarks/cruciallib/JITLibCrucialWrappers/CXProxyInterfaces.sc	/^	stopToBundle { arg bundle, fadeTime=0.02;$/;"	m
stopToBundle	quarks/cruciallib/Players/AbstractPlayer.sc	/^	stopToBundle { arg bundle;$/;"	m
stopToBundle	quarks/cruciallib/Players/instrSupport.sc	/^	stopToBundle {}$/;"	m
stopToBundle	quarks/cruciallib/Sequencers/BusDriver.sc	/^	stopToBundle { arg bundle;$/;"	m
stopUpdate	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	stopUpdate { skipjack.stop }$/;"	m
stopUpdate	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	stopUpdate { editor.stopUpdate; skippy.stop }$/;"	m
store	SCClassLibrary/Common/Audio/SynthDef.sc	/^	store { arg libname=\\global, dir(synthDefDir), completionMsg, mdPlugin;$/;"	m
store	SCClassLibrary/Common/Control/Module.sc	/^	store {$/;"	m
store	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	store { SynthDescLib.global.read(this.synthDefPath) }$/;"	m
store	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	store {}$/;"	m
store	quarks/cruciallib/Instr/Instr.sc	/^	store { arg args;$/;"	m
storeArgs	SCClassLibrary/Common/Audio/Env.sc	/^	storeArgs { ^[levels, times, curves, releaseNode, loopNode] }$/;"	m
storeArgs	SCClassLibrary/Common/Audio/SynthDef.sc	/^	storeArgs { ^[name.asSymbol, func] }$/;"	m
storeArgs	SCClassLibrary/Common/Collections/Interval.sc	/^	storeArgs { ^[start, end, step] }$/;"	m
storeArgs	SCClassLibrary/Common/Collections/Interval.sc	/^	storeArgs { ^[start, size] }$/;"	m
storeArgs	SCClassLibrary/Common/Collections/Pair.sc	/^	storeArgs { arg stream;$/;"	m
storeArgs	SCClassLibrary/Common/Collections/Scale.sc	/^	storeArgs { ^[degrees, pitchesPerOctave, tuning, name] }$/;"	m
storeArgs	SCClassLibrary/Common/Collections/Scale.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/Common/Control/Engine.sc	/^	storeArgs { ^[start, size, used] }$/;"	m
storeArgs	SCClassLibrary/Common/Control/Score.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	storeArgs { ^[array] }$/;"	m
storeArgs	SCClassLibrary/Common/Core/Color.sc	/^	storeArgs { ^[red,green,blue,alpha] }$/;"	m
storeArgs	SCClassLibrary/Common/Core/Message.sc	/^	storeArgs { ^[receiver, selector, args] }$/;"	m
storeArgs	SCClassLibrary/Common/Core/Message.sc	/^	storeArgs { ^[selector] }$/;"	m
storeArgs	SCClassLibrary/Common/Core/Object.sc	/^	storeArgs { ^#[] }$/;"	m
storeArgs	SCClassLibrary/Common/Core/Thread.sc	/^	storeArgs { ^[func] }$/;"	m
storeArgs	SCClassLibrary/Common/GUI/ControlModel.sc	/^	storeArgs { ^[minval, maxval, warp.asSpecifier, step, default, units] }$/;"	m
storeArgs	SCClassLibrary/Common/GUI/iphone/Base/SCFont.sc	/^	storeArgs { ^[name,size] }$/;"	m
storeArgs	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCFont.sc	/^	storeArgs { ^[name,size] }$/;"	m
storeArgs	SCClassLibrary/Common/Geometry/Point.sc	/^	storeArgs { ^[x,y] }$/;"	m
storeArgs	SCClassLibrary/Common/Geometry/Rect.sc	/^	storeArgs { ^[left,top,width,height] }$/;"	m
storeArgs	SCClassLibrary/Common/Math/Date.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/Common/Math/Polar.sc	/^	storeArgs { ^[rho,theta] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ControlPatterns.sc	/^	storeArgs { ^[element,locID,repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[ n, pattern ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[ pattern, connected ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[ pattern, key, printStream, prefix ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[ pattern, subPattern ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[count,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[dur,pattern,tolerance] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[func,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[lag,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[n,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[name,value,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[pattern, aroh, avaroh, stepsPerOctave ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[pattern,lo,hi] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[pattern,quant,maxdur,tolerance] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[pattern,repeats, key] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[pattern] ++ patternpairs }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[proportion,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[sum,pattern,tolerance] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^	storeArgs { ^[value,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[ list, repeats ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[ list, repeats, offset ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[ list, weights, repeats ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[ list, which ]  }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[list, stepPattern, directionPattern, startPos] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/ListPatterns.sc	/^	storeArgs { ^[listPat,indexPat,repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[ pattern, func ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[condition, iftrue, iffalse,default] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[func,repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[function,patterns] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[key] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[lo,hi,length] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[lo,hi,step,length] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[nextFunc] ++ resetFunc }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[pattern, event] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[pattern1,pattern2,pattern3] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[pattern1,pattern2] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[routineFunc] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[start,grow,length] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^[start,step,length] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^patternpairs }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeArgs { ^patterns }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Pfx.sc	/^	storeArgs { ^[ pattern, dur, fadeTime, numChannels, rate ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Pfx.sc	/^	storeArgs { ^[pattern, fxname] ++ pairs }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^	storeArgs { ^[key, device, repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^	storeArgs { ^[slot, type, device, repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Plambda.sc	/^	storeArgs { ^[key, pattern] ++ return }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Plambda.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	storeArgs { ^[envir,pattern,independent] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	storeArgs { ^[func, event, repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	storeArgs { ^[func] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Ppatmod.sc	/^	storeArgs { ^[pattern, func, repeats] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Pproto.sc	/^	storeArgs { ^[makeFunction,pattern,cleanupFunc] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Prewrite.sc	/^	storeArgs { ^[ pattern, dict, levels ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Pseed.sc	/^	storeArgs { ^[randSeed,pattern] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Quant.sc	/^	storeArgs { ^[quant, phase, timingOffset] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^	storeArgs { ^[ lo, hi, length ] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/RandomDistPatterns.sc	/^	storeArgs { ^[lo, hi, prob1, prob2, length] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Stream.sc	/^	storeArgs { ^[nextFunc, resetFunc] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Stream.sc	/^	storeArgs { ^[stream] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Stream.sc	/^	storeArgs { ^[value] }$/;"	m
storeArgs	SCClassLibrary/Common/Streams/Stream.sc	/^	storeArgs { ^originalStream.storeArgs$/;"	m
storeArgs	SCClassLibrary/Common/Streams/TimePatterns.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[dict,which,repeats,default ] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[key] } \/\/ assume it was created globally$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[key] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[key]++pattern.storeArgs }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[pattern] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs { ^[source] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	storeArgs {$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	storeArgs { ^[ pattern, dict, quant, dur, tolerance ] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Psym.sc	/^	storeArgs { ^[pattern,dict] }$/;"	m
storeArgs	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^	storeArgs { ^[ pattern, fadeTime, holdTime, tolerance ] }$/;"	m
storeArgs	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	storeArgs { ^[key, value, busNumChannels] }$/;"	m
storeArgs	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	storeArgs { ^[value, busNumChannels, rate] }$/;"	m
storeArgs	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	storeArgs { ^[x,y,z] }$/;"	m
storeArgs	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	storeArgs { ^[rho,theta,phi] }$/;"	m
storeArgs	quarks/MathLib/classes/patterns/P3n1.sc	/^	storeArgs {$/;"	m
storeArgs	quarks/cruciallib/Control/CCBank.sc	/^	storeArgs {$/;"	m
storeArgs	quarks/cruciallib/Control/MIDIPlayer.sc	/^	storeArgs { ^[num,spec] }$/;"	m
storeArgs	quarks/cruciallib/Control/MIDIPlayer.sc	/^	storeArgs { ^[spec] }$/;"	m
storeArgs	quarks/cruciallib/Instr/Instr.sc	/^	storeArgs { ^[name] }$/;"	m
storeArgs	quarks/cruciallib/Instr/Instr.sc	/^	storeArgs {$/;"	m
storeArgs	quarks/cruciallib/Instr/Interface.sc	/^	storeArgs { ^[interfaceDef.name,args] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[[values,names].flop,default,static] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[itemSpec,size] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[itemSpec] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[minval,maxval,default,units] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[numChannels] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[numFrames,numChannels,sampleRate] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[prototype] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { ^[tracks,numChannels] }$/;"	m
storeArgs	quarks/cruciallib/Instr/MoreSpecs.sc	/^	storeArgs { |stream|$/;"	m
storeArgs	quarks/cruciallib/Instr/Patch.sc	/^	storeArgs { $/;"	m
storeArgs	quarks/cruciallib/Players/AudioInPlayer.sc	/^	storeArgs { ^[numChannels,firstChannel] }$/;"	m
storeArgs	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	storeArgs { ^[tempoFactor,mul] } \/\/ tempoBase won't save$/;"	m
storeArgs	quarks/cruciallib/Players/HasSubject.sc	/^	storeArgs { ^[subject] }$/;"	m
storeArgs	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	storeArgs { ^[operator,a,b] }$/;"	m
storeArgs	quarks/cruciallib/Players/PlayerBasicOps.sc	/^	storeArgs { ^[operator,a] }$/;"	m
storeArgs	quarks/cruciallib/Players/PlayerMixer.sc	/^	storeArgs { ^[players] }$/;"	m
storeArgs	quarks/cruciallib/Players/SFP/SFP.sc	/^	storeArgs { ^[this.soundFilePath,tempo,firstBeatIsAt] }$/;"	m
storeArgs	quarks/cruciallib/Players/SFP/SFP.sc	/^	storeArgs {^[file] }$/;"	m
storeArgs	quarks/cruciallib/Players/Silence.sc	/^	storeArgs { ^[missing] }$/;"	m
storeArgs	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	storeArgs { ^[subject,env,numChannels] }$/;"	m
storeArgs	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	storeArgs { ^[subject,numChannels] }$/;"	m
storeArgs	quarks/cruciallib/Sample/Sample.sc	/^	storeArgs { ^[ this.class.abrevPath(soundFilePath) ,tempo, startFrame, endFrame ] }$/;"	m
storeArgs	quarks/cruciallib/Sample/Sample.sc	/^	storeArgs { ^[array] }$/;"	m
storeArgs	quarks/cruciallib/Sample/Sample.sc	/^	storeArgs { ^[this.size,numChannels,sampleRate] }$/;"	m
storeArgs	quarks/cruciallib/Sequencers/BusDriver.sc	/^	storeArgs { ^[value,spec] }$/;"	m
storeArgs	quarks/cruciallib/Sequencers/BusDriver.sc	/^	storeArgs { ^[values,durations,lag] }$/;"	m
storeArgs	quarks/cruciallib/UncoupledUsefulThings/PrettyPrintStream.sc	/^	storeArgs { arg  args,itemsPerLine=1;$/;"	m
storeItemsOn	SCClassLibrary/Common/Collections/Collection.sc	/^	storeItemsOn { | stream |$/;"	m
storeItemsOn	SCClassLibrary/Common/Collections/Dictionary.sc	/^	storeItemsOn { arg stream, itemsPerLine = 5;$/;"	m
storeItemsOn	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	storeItemsOn { arg stream, itemsPerLine = 1;$/;"	m
storeModifiersOn	SCClassLibrary/Common/Core/Object.sc	/^	storeModifiersOn { arg stream;}$/;"	m
storeModifiersOn	quarks/cruciallib/Instr/Interface.sc	/^	storeModifiersOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Array.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Array2D.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Association.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Collection.sc	/^	storeOn { | stream |$/;"	m
storeOn	SCClassLibrary/Common/Collections/Event.sc	/^	storeOn { arg stream, itemsPerLine = 5;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Interval.sc	/^		storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Interval.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Library.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Pair.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/Scale.sc	/^	storeOn { |stream|$/;"	m
storeOn	SCClassLibrary/Common/Collections/SparseArray.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Collections/SparseArray.sc	/^	storeOn { | stream |$/;"	m
storeOn	SCClassLibrary/Common/Collections/String.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Control/Bus.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Control/NetAddr.sc	/^	storeOn { | stream |$/;"	m
storeOn	SCClassLibrary/Common/Control/ScopeBuffer.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Control/Server.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Boolean.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Char.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Function.sc	/^	storeOn { arg stream; stream << (def.sourceCode ? "{ \\"open Function\\" }"); }$/;"	m
storeOn	SCClassLibrary/Common/Core/Kernel.sc	/^	storeOn { arg stream; stream << "nil"; }$/;"	m
storeOn	SCClassLibrary/Common/Core/Kernel.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Nil.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Object.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Ref.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Symbol.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Core/Thread.sc	/^	storeOn { arg stream; stream << "nil"; }$/;"	m
storeOn	SCClassLibrary/Common/Core/Thread.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Math/Float.sc	/^	storeOn { |stream|$/;"	m
storeOn	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	storeOn { arg stream; stream <<< a << "." << operator << "(" <<<* arglist << ")" }$/;"	m
storeOn	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	storeOn { arg stream; stream <<< a << "." << operator }$/;"	m
storeOn	SCClassLibrary/Common/Streams/BasicOpsStream.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeOn { arg stream; stream <<< a << "." << operator << "(" <<<* arglist << ")" }$/;"	m
storeOn	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeOn { arg stream; stream <<< a << "." << operator }$/;"	m
storeOn	SCClassLibrary/Common/Streams/Patterns.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/Common/Streams/Rest.sc	/^	storeOn { |stream| stream << "Rest(" << dur << ")" }$/;"	m
storeOn	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	storeOn { arg stream;$/;"	m
storeOn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	storeOn { | stream |$/;"	m
storeOn	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	storeOn { | stream |$/;"	m
storeOn	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	storeOn { | stream, keys, includeSettings = true, includeMonitors = true |$/;"	m
storeOn	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^	storeOn { | stream, namestring = "", dropOut = false |$/;"	m
storeOn	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^	storeOn { arg stream;$/;"	m
storeOn	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	storeOn { arg stream;$/;"	m
storeOn	quarks/cruciallib/Editors/NumberEditor.sc	/^	storeOn { arg stream;$/;"	m
storeOn	quarks/cruciallib/Sequencers/BusDriver.sc	/^	storeOn { |stream| value.storeOn(stream) }$/;"	m
storeOnce	SCClassLibrary/Common/Audio/SynthDef.sc	/^	storeOnce { arg libname=\\global, dir(synthDefDir), completionMsg, mdPlugin;$/;"	m
storeParamsOn	SCClassLibrary/Common/Core/Object.sc	/^	storeParamsOn { arg stream;$/;"	m
storeParamsOn	quarks/cruciallib/Instr/InstrSpawner.sc	/^	storeParamsOn { arg stream;$/;"	m
storeParamsOn	quarks/cruciallib/Instr/Patch.sc	/^	storeParamsOn { arg stream;$/;"	m
storeParamsOn	quarks/cruciallib/Players/AbstractPlayer.sc	/^	storeParamsOn { arg stream;$/;"	m
storeParamsOn	quarks/cruciallib/Sequencers/BusDriver.sc	/^	storeParamsOn { arg stream;$/;"	m
storeableFuncReference	quarks/cruciallib/Instr/Instr.sc	/^	storeableFuncReference { ^this }$/;"	m
storeableFuncReference	quarks/cruciallib/Instr/Instr.sc	/^	storeableFuncReference { ^this.dotNotation }$/;"	m
storeableFuncReference	quarks/cruciallib/Instr/Instr.sc	/^	storeableFuncReference {$/;"	m
storedKey	SCClassLibrary/Common/Collections/Scale.sc	/^	storedKey {$/;"	m
storyString	SCClassLibrary/Common/Streams/History.sc	/^	storyString {$/;"	m
streamCollection	SCClassLibrary/Common/Control/Buffer.sc	/^	streamCollection { arg collstream, collsize, startFrame = 0, wait = -1, action;$/;"	m
streamError	SCClassLibrary/Common/Streams/Stream.sc	/^	streamError { this.removedFromScheduler; streamHasEnded = true;  }$/;"	m
streamTree	SCClassLibrary/Common/Files/PathName.sc	/^	streamTree { arg str, tabs=0;$/;"	m
streamTreeNoCVS	SCClassLibrary/Common/Files/PathName.sc	/^	streamTreeNoCVS { arg str, tabs=0;$/;"	m
stream_	SCClassLibrary/Common/Streams/Stream.sc	/^	stream_ { arg argStream;$/;"	m
stretch	SCClassLibrary/Common/Streams/Patterns.sc	/^	stretch { arg x; ^Pmulp(\\stretch, x, this) }$/;"	m
string	SCClassLibrary/Common/GUI/Document.sc	/^	string { | rangestart, rangesize = 1 |$/;"	m
string	SCClassLibrary/QtCollider/BasicViews.sc	/^  string { ^this.getProperty(\\text) }$/;"	m
string	SCClassLibrary/QtCollider/BasicViews.sc	/^  string {$/;"	m
string	SCClassLibrary/QtCollider/QNumberBox.sc	/^  string { ^this.getProperty( \\text ); }$/;"	m
string	SCClassLibrary/QtCollider/QTextView.sc	/^  string {$/;"	m
stringColor	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	stringColor {$/;"	m
stringColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	stringColor {$/;"	m
stringColor	SCClassLibrary/QtCollider/BasicViews.sc	/^  stringColor {$/;"	m
stringColor	SCClassLibrary/QtCollider/QListView.sc	/^  stringColor {$/;"	m
stringColor	SCClassLibrary/QtCollider/QNumberBox.sc	/^  stringColor {$/;"	m
stringColor_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	stringColor_ { arg color;$/;"	m
stringColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	stringColor_ {arg color;$/;"	m
stringColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	stringColor_ { arg color;$/;"	m
stringColor_	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	stringColor_ { | color, rangeStart = -1, rangeSize = 0 |$/;"	m
stringColor_	SCClassLibrary/QtCollider/BasicViews.sc	/^  stringColor_ { arg color;$/;"	m
stringColor_	SCClassLibrary/QtCollider/QListView.sc	/^  stringColor_ { arg color;$/;"	m
stringColor_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  stringColor_ { arg color;$/;"	m
stringColor_	SCClassLibrary/QtCollider/QTextView.sc	/^  stringColor_ { arg aColor;$/;"	m
string_	SCClassLibrary/Common/GUI/Document.sc	/^	string_ { | string, rangestart = -1, rangesize = 1 |$/;"	m
string_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	string_ { arg argString;$/;"	m
string_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	string_ { arg argString;$/;"	m
string_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCViews2.sc	/^	string_ { arg s; super.string = s.as(String); }$/;"	m
string_	SCClassLibrary/QtCollider/BasicViews.sc	/^  string_ { arg text; this.setProperty( \\text, text.asString ) }$/;"	m
string_	SCClassLibrary/QtCollider/BasicViews.sc	/^  string_ { arg text;$/;"	m
string_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  string_ { arg string; this.setProperty( \\text, string ); }$/;"	m
string_	SCClassLibrary/QtCollider/QTextView.sc	/^  string_ { arg aString;$/;"	m
strings	SCClassLibrary/QtCollider/QTreeView.sc	/^  strings {$/;"	m
strings_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	strings_ { arg astrings;$/;"	m
strings_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  strings_ { arg anArray;$/;"	m
strings_	SCClassLibrary/QtCollider/QTreeView.sc	/^  strings_ { arg strings;$/;"	m
stripHTML	SCClassLibrary/Common/Collections/String.sc	/^	stripHTML {$/;"	m
stripRTF	SCClassLibrary/Common/Collections/String.sc	/^	stripRTF {$/;"	m
stripWhiteSpace	SCClassLibrary/SCDoc/SCDoc.sc	/^    stripWhiteSpace {$/;"	m
strokeColor	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  strokeColor { ^this.getProperty(\\strokeColor) }$/;"	m
strokeColor	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  strokeColor { ^this.getProperty(\\strokeColor) }$/;"	m
strokeColor_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	strokeColor_ { arg acolor;$/;"	m
strokeColor_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  strokeColor_ { arg color; this.setProperty( \\strokeColor, color ) }$/;"	m
strokeColor_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  strokeColor_ { arg color; this.setProperty( \\strokeColor, color ) }$/;"	m
stutter	SCClassLibrary/Common/Collections/Array.sc	/^	stutter { arg n=2;$/;"	m
stutter	SCClassLibrary/Common/Collections/List.sc	/^	stutter { arg n=2;$/;"	m
stutter	SCClassLibrary/Common/Streams/Patterns.sc	/^	stutter { arg n; ^Pstutter(n, this) }$/;"	m
style	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  style { ^this.getProperty(\\style) }$/;"	m
style	SCClassLibrary/QtCollider/QScope2.sc	/^  style { ^this.getProperty(\\style) }$/;"	m
style_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	style_ {arg val;$/;"	m
style_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	style_ { arg val;$/;"	m
style_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	style_ { arg val;$/;"	m
style_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  style_ { arg style;$/;"	m
style_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  style_ {arg val;$/;"	m
style_	SCClassLibrary/QtCollider/QScope.sc	/^  style_ { arg anInt;$/;"	m
style_	SCClassLibrary/QtCollider/QScope2.sc	/^  style_ { arg value; this.setProperty(\\style, value) }$/;"	m
style_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  style_ { arg val;$/;"	m
style_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  style_ { arg val;$/;"	m
sub	quarks/MathLib/classes/various/Matrix.sc	/^	sub { arg row, col; \/\/ return submatrix to element(row,col)$/;"	m
subGroups	quarks/cruciallib/Players/AbstractPlayer.sc	/^	subGroups { ^[] }$/;"	m
subGroups	quarks/cruciallib/Players/PlayerMixer.sc	/^	subGroups { ^groups }$/;"	m
subGroups	quarks/cruciallib/Players/PlayerSocket.sc	/^	subGroups { ^[socketGroup] }$/;"	m
subNumber	quarks/MathLib/classes/various/Matrix.sc	/^	subNumber { arg aNumber; $/;"	m
subSample	SCClassLibrary/Common/Streams/Stream.sc	/^	subSample {| offset= 0, skipSize = 0|$/;"	m
subclassResponsibility	SCClassLibrary/Common/Core/Object.sc	/^	subclassResponsibility { arg method;$/;"	m
subtract	SCClassLibrary/Common/Core/Color.sc	/^	subtract { arg aColor, opacity=1.0;$/;"	m
sum	SCClassLibrary/Common/Collections/Collection.sc	/^	sum { | function |$/;"	m
sum	SCClassLibrary/Common/Collections/SparseArray.sc	/^	sum { | function |$/;"	m
sum	SCClassLibrary/Common/Core/Function.sc	/^	sum { arg n = 2;$/;"	m
sum	quarks/MathLib/classes/various/Matrix.sc	/^	sum {$/;"	m
sum3rand	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sum3rand { ^this.performUnaryOp('sum3rand') }$/;"	m
sum3rand	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sum3rand { ^this.composeUnaryOp('sum3rand') }$/;"	m
sum3rand	SCClassLibrary/Common/Core/Symbol.sc	/^	sum3rand { ^this }$/;"	m
sum3rand	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sum3rand { _Sum3Rand; ^this.primitiveFailed }$/;"	m
sumCol	quarks/MathLib/classes/various/Matrix.sc	/^	sumCol { arg col;$/;"	m
sumCols	quarks/MathLib/classes/various/Matrix.sc	/^	sumCols { |function|$/;"	m
sumF	quarks/MathLib/classes/statistics/extStatistics.sc	/^	sumF { | function |			$/;"	m
sumRhythmDivisions	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sumRhythmDivisions {$/;"	m
sumRow	quarks/MathLib/classes/various/Matrix.sc	/^	sumRow { arg row;$/;"	m
sumRows	quarks/MathLib/classes/various/Matrix.sc	/^	sumRows { |function|$/;"	m
sumabs	SCClassLibrary/Common/Collections/Collection.sc	/^	sumabs {  \/\/ sum of the absolute values - used to convert Mikael Laursen's rhythm lists.$/;"	m
sumsqr	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	sumsqr { arg aNumber, adverb; ^this.performBinaryOp('sumsqr', aNumber, adverb) }$/;"	m
sumsqr	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	sumsqr { arg function, adverb; ^this.composeBinaryOp('sumsqr', function, adverb) }$/;"	m
sumsqr	SCClassLibrary/Common/Math/Signal.sc	/^	sumsqr { arg aNumber; _SumSqr; ^aNumber.performBinaryOpOnSignal('sumsqr', this) }$/;"	m
sumsqr	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	sumsqr { arg aNumber, adverb; _SumSqr; ^aNumber.performBinaryOpOnSimpleNumber('sumsqr', this, adverb) }$/;"	m
superPerform	SCClassLibrary/Common/Core/Object.sc	/^	superPerform { arg selector ... args;$/;"	m
superPerformList	SCClassLibrary/Common/Core/Object.sc	/^	superPerformList { arg selector, arglist;$/;"	m
superclass	SCClassLibrary/Common/Core/Kernel.sc	/^	superclass {$/;"	m
superclasses	SCClassLibrary/Common/Core/Kernel.sc	/^	superclasses {$/;"	m
superclassesDo	SCClassLibrary/Common/Core/Kernel.sc	/^	superclassesDo { arg function;$/;"	m
superclassesDo	SCClassLibrary/Common/Core/Nil.sc	/^	superclassesDo {}$/;"	m
superpose_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	superpose_ { |flag|$/;"	m
supplementNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	supplementNodeMap { | keys, replaceOldKeys=false |$/;"	m
suspend	SCClassLibrary/Common/Streams/Pspawner.sc	/^	suspend { | stream |$/;"	m
suspendAll	SCClassLibrary/Common/Streams/Pspawner.sc	/^	suspendAll {$/;"	m
svn	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	svn { | cmd ... args |$/;"	m
svnMulti	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	svnMulti { | baseDir, forceSync=(false) ... pairs |$/;"	m
svnSync	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	svnSync { | cmd ... args |$/;"	m
svnp	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	svnp { |cmd ... args|$/;"	m
swap	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	swap { arg i, j; var temp;$/;"	m
swap	SCClassLibrary/Common/Collections/List.sc	/^	swap { arg i,j; array.swap(i, j) }$/;"	m
swap	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	swap { arg i, j;$/;"	m
swap	SCClassLibrary/DefaultLibrary/extNumber.sc	/^	swap {$/;"	m
swapThisGroup	SCClassLibrary/Common/Core/Nil.sc	/^	swapThisGroup {}$/;"	m
switch	SCClassLibrary/Common/Core/Object.sc	/^	switch { arg ... cases;$/;"	m
switch	SCClassLibrary/Common/Math/Float.sc	/^	switch { | ... cases|$/;"	m
switchRate	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	switchRate { if(rate === \\control) { this.rate = \\audio } {  this.rate = \\control } }$/;"	m
switchRate	SCClassLibrary/QtCollider/QStethoscope.sc	/^  switchRate { if(rate === \\control) { this.rate = \\audio } {  this.rate = \\control } }$/;"	m
switchRate	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  switchRate {$/;"	m
switchSize	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	switchSize { |index|$/;"	m
symmetricDifference	SCClassLibrary/Common/Collections/Collection.sc	/^	symmetricDifference { | that |$/;"	m
symmetricDifference	SCClassLibrary/Common/Collections/Set.sc	/^	symmetricDifference { arg that;$/;"	m
symmetricDifference	SCClassLibrary/Common/Core/Color.sc	/^	symmetricDifference { arg aColor, opacity=1.0;$/;"	m
sync	SCClassLibrary/Common/Control/NetAddr.sc	/^	sync { arg condition, bundles, latency; \/\/ array of bundles that cause async action$/;"	m
sync	SCClassLibrary/Common/Control/NetAddr.sc	/^	sync { arg condition, bundles, latency;$/;"	m
sync	SCClassLibrary/Common/Control/Server.sc	/^	sync { arg condition, bundles, latency; \/\/ array of bundles that cause async action$/;"	m
synchWithQuant	SCClassLibrary/Common/Collections/Event.sc	/^	synchWithQuant { | quant |$/;"	m
syntaxColorize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	syntaxColorize {$/;"	m
syntaxColorize	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	syntaxColorize {$/;"	m
syntaxColorize	SCClassLibrary/QtCollider/QTextView.sc	/^  syntaxColorize {$/;"	m
syntaxColorize	SCClassLibrary/deprecated/deprecated-3.7.sc	/^	syntaxColorize {$/;"	m
synth	SCClassLibrary/Common/Streams/NodeEvents.sc	/^	synth {$/;"	m
synthArg	quarks/cruciallib/Control/MIDIClock.sc	/^	synthArg { ^nil }$/;"	m
synthArg	quarks/cruciallib/Control/MIDIPlayer.sc	/^	synthArg { ^this.poll }$/;"	m
synthArg	quarks/cruciallib/Editors/NumberEditor.sc	/^	synthArg { ^this.poll }$/;"	m
synthArg	quarks/cruciallib/Players/AbstractPlayer.sc	/^	synthArg { ^patchOut.synthArg }$/;"	m
synthArg	quarks/cruciallib/Players/AbstractPlayer.sc	/^	synthArg { ^this.source.synthArg }$/;"	m
synthArg	quarks/cruciallib/Players/Patching.sc	/^	synthArg { ^bus.index } \/\/need some initialValue$/;"	m
synthArg	quarks/cruciallib/Players/Patching.sc	/^	synthArg { ^bus.index }$/;"	m
synthArg	quarks/cruciallib/Players/Patching.sc	/^	synthArg {$/;"	m
synthArg	quarks/cruciallib/Players/PlayerSocket.sc	/^	synthArg { ^this.bus.index }$/;"	m
synthArg	quarks/cruciallib/Players/Silence.sc	/^	synthArg {$/;"	m
synthArg	quarks/cruciallib/Players/SimpleTrigger.sc	/^	synthArg { ^spec.minval }$/;"	m
synthArg	quarks/cruciallib/Players/TempoPlayer.sc	/^	synthArg { ^tempoBus.index }$/;"	m
synthArg	quarks/cruciallib/Players/instrSupport.sc	/^	synthArg { ^1 }$/;"	m
synthArg	quarks/cruciallib/Players/instrSupport.sc	/^	synthArg { ^this }$/;"	m
synthArg	quarks/cruciallib/Players/instrSupport.sc	/^	synthArg {$/;"	m
synthArg	quarks/cruciallib/Sample/Sample.sc	/^	synthArg { ^this.bufnum }$/;"	m
synthArg	quarks/cruciallib/Scheduling/TempoBus.sc	/^	synthArg { ^this.index }$/;"	m
synthArg	quarks/cruciallib/Sequencers/BusDriver.sc	/^	synthArg {$/;"	m
synthArgsIndices	quarks/cruciallib/Instr/Patch.sc	/^	synthArgsIndices { ^this.subclassResponsibility(thisMethod) }$/;"	m
synthConsole	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	synthConsole { arg layout;$/;"	m
synthDefArgs	quarks/cruciallib/Instr/Patch.sc	/^	synthDefArgs {$/;"	m
synthDefArgs	quarks/cruciallib/Players/AbstractPlayer.sc	/^	synthDefArgs { ^this.source.synthDefArgs }$/;"	m
synthDefArgs	quarks/cruciallib/Players/AbstractPlayer.sc	/^	synthDefArgs {$/;"	m
synthDefArgs	quarks/cruciallib/Players/BeatClockPlayer.sc	/^	synthDefArgs { \/\/ synthinputs collect synthArg$/;"	m
synthDefArgs	quarks/cruciallib/Players/PlayerMixer.sc	/^	synthDefArgs {$/;"	m
synthDefArgs	quarks/cruciallib/Players/SFP/SFP.sc	/^	synthDefArgs {$/;"	m
synthDefArgs	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	synthDefArgs { ^[\\i_bus,patchOut.synthArg,\\amp,amp] }$/;"	m
synthDefArgs	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	synthDefArgs { ^[\\i_bus,patchOut.synthArg,\\gate,1.0] }$/;"	m
synthDefArgs	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	synthDefArgs { ^[\\i_inBus,subject.bus.index,\\i_outBus,patchOut.synthArg] }	$/;"	m
synthDefPath	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	synthDefPath { ^SynthDef.synthDefDir ++ this.asDefName ++ ".scsyndef" }$/;"	m
synthDefToBundle	quarks/cruciallib/Players/PlayerRecorder.sc	/^	synthDefToBundle { arg bundle,listen=true;$/;"	m
synthDesc	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	synthDesc {$/;"	m
synthIndex_	SCClassLibrary/Common/Audio/UGen.sc	/^	synthIndex_ { arg index;$/;"	m
sysex	SCClassLibrary/Common/Control/MIDIOut.sc	/^	sysex { arg packet;$/;"	m
systemAppSupportDir	SCClassLibrary/Platform/Platform.sc	/^	systemAppSupportDir { _Platform_systemAppSupportDir }$/;"	m
systemCmd	SCClassLibrary/Common/Collections/String.sc	/^	systemCmd { _String_System ^this.primitiveFailed }$/;"	m
systemExtensionDir	SCClassLibrary/Platform/Platform.sc	/^	systemExtensionDir { _Platform_systemExtensionDir }$/;"	m
tab	SCClassLibrary/Common/Streams/IOStream.sc	/^	tab { this.put(Char.tab); }$/;"	m
tabWidth	SCClassLibrary/QtCollider/QTextView.sc	/^  tabWidth { ^this.getProperty( \\tabStopWidth ); }$/;"	m
tabWidth_	SCClassLibrary/QtCollider/QTextView.sc	/^  tabWidth_ { arg pixels; this.setProperty( \\tabStopWidth, pixels ); }$/;"	m
tableRand	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	tableRand {$/;"	m
tableSize_	SCClassLibrary/Common/Streams/Patterns.sc	/^	tableSize_ { arg n;$/;"	m
tail	quarks/cruciallib/Instr/Instr.sc	/^	tail { arg anode,args,bundle,atTime,out=0;$/;"	m
tail	quarks/cruciallib/ServerTools/ServerGui.sc	/^	tail { |layout|$/;"	m
take	SCClassLibrary/Common/Collections/Bag.sc	/^	take {$/;"	m
take	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	take { arg item;$/;"	m
takeAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	takeAt { arg index;$/;"	m
takeThese	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	takeThese { arg func;$/;"	m
tan	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	tan { ^this.performUnaryOp('tan') }$/;"	m
tan	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	tan { ^this.composeUnaryOp('tan') }$/;"	m
tan	SCClassLibrary/Common/Core/Symbol.sc	/^	tan { ^this }$/;"	m
tan	SCClassLibrary/Common/Math/Signal.sc	/^	tan { _Tan; ^this.primitiveFailed }$/;"	m
tan	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	tan { _Tan; ^this.primitiveFailed }$/;"	m
tanh	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	tanh { ^this.performUnaryOp('tanh') }$/;"	m
tanh	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	tanh { ^this.composeUnaryOp('tanh') }$/;"	m
tanh	SCClassLibrary/Common/Core/Symbol.sc	/^	tanh { ^this }$/;"	m
tanh	SCClassLibrary/Common/Math/Signal.sc	/^	tanh { _TanH; ^this.primitiveFailed }$/;"	m
tanh	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	tanh { _TanH; ^this.primitiveFailed }$/;"	m
tdeltaTillNext	quarks/cruciallib/Scheduling/OSCSched.sc	/^	tdeltaTillNext { arg quantize; \/\/ delta in seconds till next beat$/;"	m
teeth	SCClassLibrary/Common/Collections/Harmonics.sc	/^	teeth { arg spacing = 2, start = 0;$/;"	m
tempo	SCClassLibrary/Common/Core/Clock.sc	/^	tempo {$/;"	m
tempo	quarks/cruciallib/Gui/SynthConsole.sc	/^	tempo {$/;"	m
tempo	quarks/cruciallib/Players/SFP/SFP.sc	/^	tempo { ^(tempo ?? {Tempo.tempo}) }$/;"	m
tempo	quarks/cruciallib/Players/SFP/SFP.sc	/^	tempo { ^file.tempo }$/;"	m
tempoGui	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	tempoGui { arg layout;$/;"	m
tempoKr	quarks/cruciallib/Instr/InstrSynthDef.sc	/^	tempoKr { arg object,selector;$/;"	m
tempo_	SCClassLibrary/Common/Core/Clock.sc	/^	tempo_ { arg newTempo;$/;"	m
tempo_	SCClassLibrary/Common/Streams/PatternConductor.sc	/^	tempo_ { | temp |$/;"	m
tempo_	quarks/cruciallib/Players/SFP/SFP.sc	/^	tempo_ { arg t;$/;"	m
tempo_	quarks/cruciallib/Players/SFP/SFP.sc	/^	tempo_ { arg tempo; file.tempo_(tempo) }$/;"	m
tempo_	quarks/cruciallib/Sample/Sample.sc	/^	tempo_ { arg tm;$/;"	m
tempo_	quarks/cruciallib/Scheduling/Tempo.sc	/^	tempo_ { arg t;$/;"	m
terminate	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	terminate { | freeNodes = true |$/;"	m
test	SCClassLibrary/Common/Audio/Env.sc	/^	test { arg releaseTime = 3.0;$/;"	m
test	quarks/cruciallib/Instr/Instr.sc	/^	test { arg ... args;$/;"	m
text	SCClassLibrary/Common/GUI/Document.sc	/^	text {$/;"	m
text	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	text {$/;"	m
textColors_	SCClassLibrary/QtCollider/QTreeView.sc	/^  textColors_ { arg textColors;$/;"	m
theta	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	theta { ^this.performUnaryOp('theta') }$/;"	m
theta	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	theta {  ^this.composeUnaryOp('theta') }$/;"	m
theta	SCClassLibrary/Common/Geometry/Point.sc	/^	theta { ^atan2(y, x) }$/;"	m
theta	SCClassLibrary/Common/Math/Complex.sc	/^	theta { ^atan2(imag, real) }$/;"	m
theta	SCClassLibrary/Common/Math/Number.sc	/^	theta { ^0.0 }$/;"	m
theta	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	theta { ^atan2(y, x) }$/;"	m
threadPlayer	SCClassLibrary/Common/Core/Object.sc	/^	threadPlayer {}$/;"	m
threadPlayer	SCClassLibrary/Common/Core/Thread.sc	/^	threadPlayer { ^threadPlayer ?? { this.findThreadPlayer } }$/;"	m
threadPlayer	SCClassLibrary/Common/Streams/Stream.sc	/^	threadPlayer { ^this }$/;"	m
threadPlayer_	SCClassLibrary/Common/Core/Object.sc	/^	threadPlayer_ {}$/;"	m
thresh	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	thresh { arg aNumber, adverb; ^this.performBinaryOp('thresh', aNumber, adverb) }$/;"	m
thresh	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	thresh { arg function, adverb; ^this.composeBinaryOp('thresh', function, adverb) }$/;"	m
thresh	SCClassLibrary/Common/Math/Signal.sc	/^	thresh { arg aNumber; _Thresh; ^aNumber.performBinaryOpOnSignal('thresh', this) }$/;"	m
thresh	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	thresh { arg aNumber, adverb; _Thresh; ^aNumber.performBinaryOpOnSimpleNumber('thresh', this, adverb) }$/;"	m
throw	SCClassLibrary/Common/Core/Error.sc	/^	throw {$/;"	m
throw	SCClassLibrary/Common/Core/Nil.sc	/^	throw {}$/;"	m
throw	SCClassLibrary/Common/Core/Object.sc	/^	throw {$/;"	m
thumbHeight_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	thumbHeight_ { arg height;$/;"	m
thumbHeight_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  thumbHeight_ { arg height;$/;"	m
thumbSize	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	thumbSize {$/;"	m
thumbSize	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	thumbSize {$/;"	m
thumbSize	SCClassLibrary/QtCollider/QSlider.sc	/^  thumbSize { ^this.getProperty(\\handleLength) }$/;"	m
thumbSize_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	thumbSize_ { arg size;$/;"	m
thumbSize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	thumbSize_ { arg size;$/;"	m
thumbSize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	thumbSize_ { arg val;$/;"	m
thumbSize_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  thumbSize_ { arg size;$/;"	m
thumbSize_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  thumbSize_ { arg float;$/;"	m
thumbSize_	SCClassLibrary/QtCollider/QSlider.sc	/^  thumbSize_ { arg pixels; this.setProperty(\\handleLength, pixels) }$/;"	m
thumbWidth_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	thumbWidth_ { arg width;$/;"	m
thumbWidth_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  thumbWidth_ { arg width;$/;"	m
thunk	SCClassLibrary/Common/Core/Function.sc	/^	thunk { ^Thunk(this) }$/;"	m
tick	SCClassLibrary/Common/Core/Kernel.sc	/^	tick { \/\/ called repeatedly by SCVirtualMachine::doPeriodicTask$/;"	m
tileInRect	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	tileInRect { arg rect, fromRect, operation='sourceOver', fraction=1.0;		if(filters.size == 0, {$/;"	m
tilt	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	tilt { arg angle; \/\/ YZ-plane, in radians$/;"	m
tilt	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	tilt { arg angle; \/\/ YZ-plane, in radians$/;"	m
time	quarks/cruciallib/Players/SFP/SFP.sc	/^	time { ^sched.time }$/;"	m
time	quarks/cruciallib/Scheduling/OSCSched.sc	/^	time { ^Main.elapsedTime - epoch }$/;"	m
timeCursorColor	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	timeCursorColor { ^this.getProperty(\\timeCursorColor, Color.new) }$/;"	m
timeCursorColor	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorColor { ^this.getProperty( \\cursorColor ); }$/;"	m
timeCursorColor_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorColor_ { arg color; this.setProperty( \\cursorColor, color ) }$/;"	m
timeCursorEditable	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorEditable { ^this.getProperty( \\cursorEditable ); }$/;"	m
timeCursorEditable_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorEditable_ { arg flag; this.setProperty( \\cursorEditable, flag ) }$/;"	m
timeCursorOn	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	timeCursorOn { ^this.getProperty(\\timeCursorOn) }$/;"	m
timeCursorOn	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorOn { ^this.getProperty( \\cursorVisible ); }$/;"	m
timeCursorOn_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorOn_ { arg flag; this.setProperty( \\cursorVisible, flag ) }$/;"	m
timeCursorPosition	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	timeCursorPosition { ^this.getProperty(\\timeCursorPosition) }$/;"	m
timeCursorPosition	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorPosition { ^this.getProperty( \\cursorPosition ); }$/;"	m
timeCursorPosition_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  timeCursorPosition_ { arg frame; this.setProperty( \\cursorPosition, frame ) }$/;"	m
timeDuration	quarks/cruciallib/Players/AbstractPlayer.sc	/^	timeDuration { var bd;$/;"	m
timeDuration	quarks/cruciallib/Players/SFP/SFP.sc	/^	timeDuration { ^file.duration }$/;"	m
timeDuration	quarks/cruciallib/Players/SFP/SFP.sc	/^	timeDuration { ^this.numFrames \/ this.sampleRate }$/;"	m
timeToNextBeat	SCClassLibrary/Common/Core/Clock.sc	/^	timeToNextBeat { arg quant=1.0; \/\/ logical time to next beat$/;"	m
time_	quarks/cruciallib/Scheduling/OSCSched.sc	/^	time_ { arg seconds; epoch = Main.elapsedTime - seconds; }$/;"	m
times	quarks/cruciallib/Editors/EnvEditor.sc	/^	times { ^value.times }$/;"	m
times_	SCClassLibrary/Common/Audio/Env.sc	/^	times_ { arg z;$/;"	m
timingOffset	SCClassLibrary/Common/Collections/Dictionary.sc	/^	timingOffset { ^this[\\timingOffset] }		\/\/ for synchWithQuant()$/;"	m
timingOffset	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	timingOffset { arg val; ^quant.obtain(2) }$/;"	m
timingOffset_	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	timingOffset_ { arg val; quant = quant.instill(2, val) }$/;"	m
title	SCClassLibrary/Common/GUI/Document.sc	/^	title {$/;"	m
title	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	title { ^this.getProperty(\\title);}$/;"	m
title	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	title {  ^"recorder for" + proxymixer.title }$/;"	m
title	SCClassLibrary/JITLib/GUI/ProxyMixer.sc	/^	title { ^this.parent.name }$/;"	m
title	SCClassLibrary/QtCollider/QWebView.sc	/^  title { ^this.getProperty( \\title ); }$/;"	m
title_	SCClassLibrary/Common/GUI/Document.sc	/^	title_ { | argName |$/;"	m
to	SCClassLibrary/Common/Math/Integer.sc	/^	to { arg hi, step=1;$/;"	m
toCSV	SCClassLibrary/Common/Files/SoundFile.sc	/^	toCSV { |outpath, headers, delim=",", append=false, func, action|$/;"	m
toFrontAction	SCClassLibrary/QtCollider/QWindow.sc	/^  toFrontAction { ^view.toFrontAction }$/;"	m
toFrontAction_	SCClassLibrary/QtCollider/QView.sc	/^  toFrontAction_ { arg aFunction;$/;"	m
toFrontAction_	SCClassLibrary/QtCollider/QWindow.sc	/^  toFrontAction_ { arg action; view.toFrontAction_(action) }$/;"	m
toInputBus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	toInputBus {$/;"	m
toInputBus	SCClassLibrary/QtCollider/QStethoscope.sc	/^  toInputBus {$/;"	m
toInputBus	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  toInputBus {$/;"	m
toJSON	SCClassLibrary/SCDoc/SCDoc.sc	/^    toJSON {|stream|$/;"	m
toLower	SCClassLibrary/Common/Collections/String.sc	/^	toLower {$/;"	m
toLower	SCClassLibrary/Common/Core/Char.sc	/^	toLower {$/;"	m
toOutputBus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	toOutputBus {$/;"	m
toOutputBus	SCClassLibrary/QtCollider/QStethoscope.sc	/^  toOutputBus {$/;"	m
toOutputBus	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  toOutputBus {$/;"	m
toPage	SCClassLibrary/QtCollider/QPenPrinter.sc	/^  toPage { ^this.getProperty(\\toPage) }$/;"	m
toUpper	SCClassLibrary/Common/Collections/String.sc	/^	toUpper {$/;"	m
toUpper	SCClassLibrary/Common/Core/Char.sc	/^	toUpper {$/;"	m
toggle	quarks/cruciallib/Gui/ActionButton.sc	/^	toggle { arg way,doAction = true;$/;"	m
toggleSize	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	toggleSize {  if(sizeToggle == 0)$/;"	m
toggleSize	SCClassLibrary/QtCollider/QStethoscope.sc	/^  toggleSize {  if(sizeToggle == 0)$/;"	m
toggleSize	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  toggleSize {$/;"	m
toolTip	SCClassLibrary/QtCollider/QView.sc	/^  toolTip { ^this.getProperty(\\toolTip) }$/;"	m
toolTip_	SCClassLibrary/QtCollider/QView.sc	/^  toolTip_ { arg t; this.setProperty( \\toolTip, t ) }$/;"	m
top	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	top { ^this.last }$/;"	m
topGui	quarks/cruciallib/Gui/gui.sc	/^	topGui { arg ... args;$/;"	m
topGui	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	topGui { arg parent,bounds ... args;$/;"	m
topMakePatchOut	quarks/cruciallib/Control/MIDIPlayer.sc	/^	topMakePatchOut { arg group,bundle;$/;"	m
topMakePatchOut	quarks/cruciallib/Players/AbstractPlayer.sc	/^	topMakePatchOut { arg agroup,private = false,bus;$/;"	m
topPriority	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^	topPriority {$/;"	m
topologicalSort	SCClassLibrary/Common/Audio/SynthDef.sc	/^	topologicalSort {$/;"	m
totalDuration	SCClassLibrary/Common/Audio/Env.sc	/^	totalDuration {$/;"	m
totalFree	SCClassLibrary/Common/Core/Object.sc	/^	totalFree { _TotalFree }$/;"	m
totalMemory	quarks/cruciallib/Sample/Sample.sc	/^	totalMemory { ^numChannels * this.size }$/;"	m
touch	SCClassLibrary/Common/Control/MIDIOut.sc	/^	touch { arg chan, val=64;$/;"	m
tr	SCClassLibrary/Common/Collections/String.sc	/^	tr { arg from,to;$/;"	m
tr	SCClassLibrary/Common/Core/Symbol.sc	/^	tr { | val |$/;"	m
trace	SCClassLibrary/Common/Control/Node.sc	/^	trace {$/;"	m
trace	SCClassLibrary/Common/Core/Boolean.sc	/^	trace { _Trace } \/\/ this is only available in a special debugging version of the app$/;"	m
trace	SCClassLibrary/Common/Streams/Patterns.sc	/^	trace { arg key, printStream, prefix=""; ^Ptrace(this, key, printStream, prefix) }$/;"	m
trace	SCClassLibrary/Common/Streams/Stream.sc	/^	trace { arg key, printStream, prefix="";$/;"	m
trace	quarks/MathLib/classes/various/Matrix.sc	/^	trace {$/;"	m
trailingZeroes	SCClassLibrary/Common/Math/Integer.sc	/^	trailingZeroes { _CTZ }$/;"	m
transformEvent	SCClassLibrary/Common/Collections/Association.sc	/^	transformEvent { arg event;$/;"	m
transformEvent	SCClassLibrary/Common/Collections/Dictionary.sc	/^	transformEvent { arg event;$/;"	m
transformEvent	SCClassLibrary/Common/Core/Function.sc	/^	transformEvent { arg event;$/;"	m
transformEvent	SCClassLibrary/Common/Core/Nil.sc	/^	transformEvent { arg event;$/;"	m
translate	SCClassLibrary/Common/Geometry/Point.sc	/^	translate { arg delta;$/;"	m
translate	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	translate { arg delta;$/;"	m
transpose	SCClassLibrary/Common/Geometry/Point.sc	/^	transpose { ^y @ x }$/;"	m
transpose	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	transpose { ^y @ x @ z }				\/\/ same as Point$/;"	m
transposeKey	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	transposeKey { arg amount, octave=12;$/;"	m
transposeXY	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	transposeXY { ^y @ x @ z }$/;"	m
transposeXZ	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	transposeXZ { ^z @ y @ x }$/;"	m
transposeYZ	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	transposeYZ { ^x @ z @ y }$/;"	m
traverse	SCClassLibrary/Common/Collections/Pair.sc	/^	traverse { arg function;$/;"	m
tree	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^	tree { |sysext=true, userext=true, allowCached=true, root, writeCache=true|$/;"	m
treeCollect	SCClassLibrary/Common/Collections/Library.sc	/^	treeCollect { arg branchFunc, leafFunc, postBranchFunc;$/;"	m
treeDo	SCClassLibrary/Common/Collections/Library.sc	/^	treeDo {$/;"	m
treeDoFrom	SCClassLibrary/Common/Collections/Library.sc	/^	treeDoFrom {$/;"	m
triWindow	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	triWindow { ^this.performUnaryOp('triWindow') }$/;"	m
triWindow	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	triWindow { ^this.composeUnaryOp('triWindow') }$/;"	m
triWindow	SCClassLibrary/Common/Core/Symbol.sc	/^	triWindow { ^this }$/;"	m
triWindow	SCClassLibrary/Common/Math/Signal.sc	/^	triWindow { _TriWindow; ^this.primitiveFailed }$/;"	m
triWindow	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	triWindow { _TriWindow; ^this.primitiveFailed }$/;"	m
trig	quarks/cruciallib/Players/SimpleTrigger.sc	/^	trig { arg val;$/;"	m
trimedian	quarks/MathLib/classes/statistics/extStatistics.sc	/^	trimedian { |interpol=true|$/;"	m
trueAt	SCClassLibrary/Common/Collections/Dictionary.sc	/^	trueAt { arg key;$/;"	m
trueAt	SCClassLibrary/Common/Core/Object.sc	/^	trueAt { ^false }$/;"	m
trunc	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	trunc { arg aNumber=1, adverb; ^this.performBinaryOp('trunc', aNumber, adverb) }$/;"	m
trunc	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	trunc { arg function=1, adverb; ^this.composeBinaryOp('trunc', function, adverb) }$/;"	m
trunc	SCClassLibrary/Common/Core/Symbol.sc	/^	trunc { ^this }$/;"	m
trunc	SCClassLibrary/Common/Geometry/Point.sc	/^	trunc { arg quant;$/;"	m
trunc	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	trunc { arg aNumber=1.0, adverb; _Trunc; ^aNumber.performBinaryOpOnSimpleNumber('trunc', this, adverb) }$/;"	m
trunc	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	trunc { arg quant;$/;"	m
truthTable	quarks/MathLib/classes/various/truthTable.sc	/^	truthTable {$/;"	m
try	SCClassLibrary/Common/Control/ResponseDefs.sc	/^				try {$/;"	m
try	SCClassLibrary/Common/Control/Server.sc	/^		try {$/;"	m
try	SCClassLibrary/Common/Control/WII.sc	/^		try { all.remove( this ) };$/;"	m
try	SCClassLibrary/Common/Core/Clock.sc	/^			try {$/;"	m
try	SCClassLibrary/Common/Core/Function.sc	/^	try { arg handler;$/;"	m
try	SCClassLibrary/Common/GUI/HelpBrowser.sc	/^			try {$/;"	m
try	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^				try {$/;"	m
try	SCClassLibrary/Common/GUI/PlusGUI/Core/HistoryGui.sc	/^		try { this.alignDoc };$/;"	m
try	SCClassLibrary/Common/GUI/ServerMeter.sc	/^					try {$/;"	m
try	SCClassLibrary/Common/GUI/ServerMeter.sc	/^				try {$/;"	m
try	SCClassLibrary/Common/GUI/ServerMeter.sc	/^			try {$/;"	m
try	SCClassLibrary/Common/GUI/viewExtensions.sc	/^		try { \/\/ not on Qt$/;"	m
try	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^			try { File.exists(path) } { false }$/;"	m
try	SCClassLibrary/Common/Streams/History.sc	/^			try {$/;"	m
try	SCClassLibrary/Common/Streams/History.sc	/^		try { logFile.close; "\/\/ History.logFile closed.".inform; };$/;"	m
try	SCClassLibrary/Common/Streams/History.sc	/^		try { logFile.write( \/*[*\/ "];") };$/;"	m
try	SCClassLibrary/Common/Streams/PgeneralHid.sc	/^				try { device = GeneralHID.open( device ); }{ "device argument is not a GeneralHIDDevice".error; ^nil }$/;"	m
try	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^		try {$/;"	m
try	SCClassLibrary/JITLib/GUI/JITGui.sc	/^			try { nameView.object_(object) };$/;"	m
try	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^						try { object.monitor.usedPlayN } { config.playN }$/;"	m
try	SCClassLibrary/JITLib/GUI/MonitorGui.sc	/^				try { object.fadeTime } ? 0.02,$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^					try { ProxySpace.findSpace(object).document(object.key) };$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^				try { object.fadeTime } ? 0.02,$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefGui.sc	/^		try { \/\/ QT temp fix$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^			try { \/\/ QT temp fix.$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^		try { \/\/ QT temp fix.$/;"	m
try	SCClassLibrary/JITLib/GUI/NdefParamGui.sc	/^		try {$/;"	m
try	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^								try { ProxySpace.findSpace(proxy).document(proxy.key) };$/;"	m
try	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^								try { proxy.fadeTime } ? 0.02,$/;"	m
try	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^					try { ProxySpace.findSpace(proxy).document(proxy.key) };$/;"	m
try	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^					try { proxy.unset(ez.labelView.string.asSymbol) }$/;"	m
try	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^				try { csView.textField.string_(object.asCode) };$/;"	m
try	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^			try { names.sort };$/;"	m
try	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^			try { this.object.envir },$/;"	m
try	SCClassLibrary/JITLib/GUI/TaskProxyGui.sc	/^		try { doc.bounds_(bounds ? Rect(0, 400, 400, 200)) };$/;"	m
try	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^		try {$/;"	m
try	SCClassLibrary/JITLib/ProxySpace/extStoreOn.sc	/^		try { doc.bounds_(bounds) };	\/\/ swingosc safe$/;"	m
try	SCClassLibrary/Platform/osx/MXHID.sc	/^			try {$/;"	m
try	SCClassLibrary/QtCollider/QView.sc	/^    try {$/;"	m
try	SCClassLibrary/SCDoc/SCDoc.sc	/^            try { implKlass = klass.perform(redirect.asSymbol) };$/;"	m
try	SCClassLibrary/deprecated/deprecated-3.6-help/Help.sc	/^						try {$/;"	m
try	SCClassLibrary/scide_scqt/ScIDE.sc	/^			try {$/;"	m
try	quarks/cruciallib/ServerTools/ServerGui.sc	/^		try {$/;"	m
tryPerform	SCClassLibrary/Common/Core/Object.sc	/^	tryPerform { arg selector ... args;$/;"	m
tsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	tsched { arg seconds,function;$/;"	m
tsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	tsched { arg seconds,server,bundle,onArrival;$/;"	m
tschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	tschedAbs { arg time,function;$/;"	m
tschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	tschedAbs { arg time,server,bundle,onArrival;$/;"	m
tumble	quarks/MathLib/classes/SpherCoords/Cartesian.sc	/^	tumble { arg angle; \/\/ XZ-plane, in radians$/;"	m
tumble	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	tumble { arg angle; \/\/ XZ-plane, in radians$/;"	m
tuning_	SCClassLibrary/Common/Collections/Scale.sc	/^	tuning_ { | inTuning |$/;"	m
twice	SCClassLibrary/DefaultLibrary/extNumber.sc	/^	twice { ^this * 2 }$/;"	m
typeKey	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	typeKey { ^('MIDI ' ++ messageType).asSymbol }$/;"	m
typeKey	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	typeKey { ^('OSC matched').asSymbol }$/;"	m
typeKey	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	typeKey { ^('OSC unmatched').asSymbol }$/;"	m
typeKey	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	typeKey { this.subclassResponsibility(thisMethod) } \/\/ a Symbol$/;"	m
typeStr	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	typeStr {$/;"	m
typingColor_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  typingColor_ { arg aColor;$/;"	m
ugenCodeString	SCClassLibrary/Common/Collections/String.sc	/^	ugenCodeString { arg ugenIndex, isDecl, inputNames=#[], inputStrings=#[];$/;"	m
unarchive	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	unarchive {$/;"	m
unbubble	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	unbubble { arg depth=0, levels=1;$/;"	m
unbubble	SCClassLibrary/Common/Core/Object.sc	/^	unbubble { ^this }$/;"	m
uncache	SCClassLibrary/Common/Control/Buffer.sc	/^	uncache {$/;"	m
uncertainty	quarks/MathLib/classes/statistics/informationTheory.sc	/^	uncertainty {$/;"	m
uncertaintyOf	quarks/MathLib/classes/statistics/informationTheory.sc	/^	uncertaintyOf { arg obj;$/;"	m
underlineSelection	SCClassLibrary/Common/GUI/Document.sc	/^	underlineSelection {$/;"	m
underlined	SCClassLibrary/Common/Collections/String.sc	/^	underlined { arg char = $-;$/;"	m
underlyingFileGui	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	underlyingFileGui { arg layout;$/;"	m
underlyingFileGui	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	underlyingFileGui { }$/;"	m
unfocusedFront	SCClassLibrary/Common/GUI/Document.sc	/^	unfocusedFront {$/;"	m
unfocusedFront	SCClassLibrary/Platform/osx/scide_scapp/CocoaDocument.sc	/^	unfocusedFront {$/;"	m
ungrab	SCClassLibrary/Platform/linux/LID.sc	/^	ungrab {$/;"	m
unhang	SCClassLibrary/Common/Core/Condition.sc	/^	unhang {$/;"	m
unify	SCClassLibrary/Common/Collections/Set.sc	/^	unify {$/;"	m
uninstall	SCClassLibrary/Common/Quarks/Quarks.sc	/^	uninstall { | name |$/;"	m
union	SCClassLibrary/Common/Collections/Collection.sc	/^	union { | that |$/;"	m
union	SCClassLibrary/Common/Collections/Set.sc	/^	union { arg that;$/;"	m
union	SCClassLibrary/Common/Geometry/Rect.sc	/^	union { arg aRect;$/;"	m
unipolar	SCClassLibrary/Common/Audio/UGen.sc	/^ 	unipolar { arg mul = 1;$/;"	m
unipolar	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	unipolar { arg ... args; ^this.multiChannelPerform('unipolar', *args) }$/;"	m
unitLowerTriangularInverse	quarks/MathLib/classes/various/LinearSystem.sc	/^	unitLowerTriangularInverse { var lu = this.deepCopy, n = this.cols, i, j, k;$/;"	m
unitLowerTriangularSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	unitLowerTriangularSolve { arg b; var n = this.cols, i, k, x = Array.newClear(n);$/;"	m
unitUpperTriangularInverse	quarks/MathLib/classes/various/LinearSystem.sc	/^	unitUpperTriangularInverse { var lu = this.deepCopy, n = this.cols, i, j, k;$/;"	m
unitUpperTriangularSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	unitUpperTriangularSolve { arg b; var n = this.cols, i, k, x = Array.newClear(n);$/;"	m
unixCmd	SCClassLibrary/Common/Collections/String.sc	/^	unixCmd {$/;"	m
unixCmdGetStdOut	SCClassLibrary/Common/Collections/String.sc	/^	unixCmdGetStdOut {$/;"	m
unixCmdGetStdOutLines	SCClassLibrary/SCDoc/SCDoc.sc	/^	unixCmdGetStdOutLines {$/;"	m
unlace	SCClassLibrary/Common/Collections/Array.sc	/^	unlace { arg clumpSize=2, numChan=1, clip=false;$/;"	m
unlace	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	unlace { arg numlists, clumpSize=1, clip=false;$/;"	m
unlinkDoc	SCClassLibrary/Common/Collections/Environment.sc	/^     unlinkDoc { arg doc, popNow = false;$/;"	m
unlinkDoc	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^     unlinkDoc { arg doc, popNow = false;$/;"	m
unlockFocus	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	unlockFocus {$/;"	m
unmap	SCClassLibrary/Common/GUI/ControlModel.sc	/^	unmap { arg value; ^value }$/;"	m
unmap	SCClassLibrary/Common/GUI/ControlModel.sc	/^	unmap { arg value;$/;"	m
unmap	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		unmap { arg ... keys;$/;"	m
unmap	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	unmap { arg ... keys;$/;"	m
unmap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	unmap { | ... keys |$/;"	m
unmap	quarks/cruciallib/Instr/MoreSpecs.sc	/^	unmap { arg val;$/;"	m
unmapArgsToBundle	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	unmapArgsToBundle { arg bundle, target, keys;$/;"	m
unmappedValue	quarks/cruciallib/Editors/NumberEditor.sc	/^	unmappedValue {$/;"	m
unminimize	SCClassLibrary/Common/osx/objC/scide_scapp/SCWindowPlusCocoa.sc	/^	unminimize {$/;"	m
unminimize	SCClassLibrary/QtCollider/QView.sc	/^  unminimize {$/;"	m
unminimize	SCClassLibrary/QtCollider/QWindow.sc	/^  unminimize { view.unminimize; }$/;"	m
unmute	SCClassLibrary/Common/Control/Server.sc	/^	unmute {$/;"	m
unmute	SCClassLibrary/Common/Control/Volume.sc	/^	unmute {$/;"	m
unmute	SCClassLibrary/Common/Streams/Stream.sc	/^	unmute { muteCount = muteCount - 1; }$/;"	m
unpauseRecorder	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	unpauseRecorder {$/;"	m
unregister	SCClassLibrary/Common/Control/NodeWatcher.sc	/^	unregister { arg node;$/;"	m
unregister	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	unregister { this.subclassResponsibility(thisMethod) } \/\/ unregister this dispatcher so it no longer listens$/;"	m
unregister	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	unregister {$/;"	m
unregisterServer	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	unregisterServer {$/;"	m
unset	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	unset { arg ... args;$/;"	m
unset	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	unset { arg ... keys;$/;"	m
unset	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	unset { | ... keys |$/;"	m
unsetArgsToBundle	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	unsetArgsToBundle { arg bundle, target, keys;$/;"	m
unsetToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	unsetToBundle { | bundle, keys |$/;"	m
unsetenv	SCClassLibrary/Common/Collections/String.sc	/^	unsetenv {$/;"	m
unsignedRightShift	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	unsignedRightShift { arg aNumber, adverb; ^this.performBinaryOp('unsignedRightShift', aNumber, adverb) }$/;"	m
unsignedRightShift	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	unsignedRightShift { arg function, adverb; ^this.composeBinaryOp('unsignedRightShift', function, adverb) }$/;"	m
unsignedRightShift	SCClassLibrary/Common/Core/Symbol.sc	/^	unsignedRightShift { ^this }$/;"	m
unsignedRightShift	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	unsignedRightShift { arg aNumber, adverb; _UnsignedShift; ^aNumber.performBinaryOpOnSimpleNumber('unsignedRightShift', this, adverb) }$/;"	m
update	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	update { } \/\/ code here to update any changed state in this dispatcher's proxies, e.g. a new function; default does nothing$/;"	m
update	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	update {|funcProxy, what| if(what == \\function, { this.updateFuncForFuncProxy(funcProxy) }) }$/;"	m
update	SCClassLibrary/Common/Core/Function.sc	/^	update { |obj, what ... args| this.value(obj, what, *args) }$/;"	m
update	SCClassLibrary/Common/Core/Nil.sc	/^	update {}$/;"	m
update	SCClassLibrary/Common/Core/Object.sc	/^	update { arg theChanged, theChanger;	\/\/ respond to a change in a model$/;"	m
update	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	update {arg changer, what ...moreArgs;$/;"	m
update	SCClassLibrary/Common/GUI/Inspector.sc	/^	update {$/;"	m
update	SCClassLibrary/Common/GUI/Model.sc	/^	update { arg theChanger, what ... moreArgs;$/;"	m
update	SCClassLibrary/Common/GUI/Model.sc	/^	update { arg thing;$/;"	m
update	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	update {$/;"	m
update	SCClassLibrary/Common/Quarks/Quarks.sc	/^	update { |name|$/;"	m
update	SCClassLibrary/Common/Streams/EventStreamCleanup.sc	/^	update { | event |$/;"	m
update	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	update { arg changed,changer;$/;"	m
update	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	update {arg changed,changer; \/\/ always has a number box$/;"	m
update	quarks/cruciallib/Gui/SelectButtonSet.sc	/^	update { arg x;$/;"	m
update	quarks/cruciallib/Gui/SynthConsole.sc	/^	update { arg status;$/;"	m
update	quarks/cruciallib/Gui/Updater.sc	/^	update { arg ... args;$/;"	m
update	quarks/cruciallib/Instr/InstrSpawner.sc	/^	update { arg changed,changer;$/;"	m
update	quarks/cruciallib/Instr/Patch.sc	/^	update { arg changed,what;$/;"	m
update	quarks/cruciallib/Players/Patching.sc	/^	update {$/;"	m
update	quarks/cruciallib/Players/SFP/SFPGui.sc	/^	update {$/;"	m
update	quarks/cruciallib/Sample/SampleGui.sc	/^	update { arg changed,changer;$/;"	m
update	quarks/cruciallib/Scheduling/TempoBus.sc	/^	update { arg changed,changer;$/;"	m
update	quarks/cruciallib/Scheduling/TempoGui.sc	/^	update {$/;"	m
update	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^	update { arg changed,changer;$/;"	m
update	quarks/cruciallib/ServerTools/ServerGui.sc	/^	update { arg changer,what;$/;"	m
updateAll	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	updateAll {$/;"	m
updateAllEdits	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	updateAllEdits {$/;"	m
updateArSlots	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	updateArSlots {$/;"	m
updateBundle	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^	updateBundle {$/;"	m
updateBusNumChannels	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	updateBusNumChannels {$/;"	m
updateBusNumChannels	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	updateBusNumChannels {}$/;"	m
updateButtonStates	SCClassLibrary/Common/Quarks/Quark.sc	/^	updateButtonStates {$/;"	m
updateButtons	SCClassLibrary/JITLib/GUI/EnvirGui.sc	/^	updateButtons {$/;"	m
updateColors	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	updateColors {$/;"	m
updateColors	SCClassLibrary/QtCollider/QStethoscope.sc	/^  updateColors {$/;"	m
updateData	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	updateData {$/;"	m
updateDirectory	SCClassLibrary/Common/Quarks/QuarkSVNRepository.sc	/^	updateDirectory { |forceSync=false|$/;"	m
updateDirectory	SCClassLibrary/Common/Quarks/Quarks.sc	/^	updateDirectory {$/;"	m
updateFuncForFuncProxy	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	updateFuncForFuncProxy {|funcProxy|$/;"	m
updateInfo	SCClassLibrary/Common/Control/Buffer.sc	/^	updateInfo { |action|$/;"	m
updateKrSlots	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	updateKrSlots {$/;"	m
updateNodeMap	SCClassLibrary/JITLib/ProxySpace/NodeMapSetting.sc	/^	updateNodeMap { arg nodeMap;$/;"	m
updatePlotBounds	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	updatePlotBounds {$/;"	m
updatePlotSpecs	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	updatePlotSpecs {$/;"	m
updatePlots	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	updatePlots {$/;"	m
updateResizeHandles	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	updateResizeHandles { var r,d=4;$/;"	m
updateScroll	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	updateScroll {$/;"	m
updateSegment	SCClassLibrary/Common/GUI/osx/scide_scapp/SCEnvelopeEdit.sc	/^	updateSegment { arg segNum;$/;"	m
updateSelection	quarks/cruciallib/Sample/SampleGui.sc	/^	updateSelection {$/;"	m
updateVals	SCClassLibrary/Common/GUI/PlusGUI/Control/WiiMoteGUI.sc	/^	updateVals {$/;"	m
updateVals	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	updateVals {$/;"	m
updateViews	SCClassLibrary/Common/GUI/PlusGUI/Core/ClassBrowser.sc	/^	updateViews {$/;"	m
updateZones	SCClassLibrary/JITLib/GUI/NodeProxyEditor.sc	/^	updateZones {$/;"	m
updateZones	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	updateZones {$/;"	m
upperTriangularInverse	quarks/MathLib/classes/various/LinearSystem.sc	/^	upperTriangularInverse { var lu = this.deepCopy, n = this.cols, i, j, k, sum;$/;"	m
upperTriangularSolve	quarks/MathLib/classes/various/LinearSystem.sc	/^	upperTriangularSolve { arg b; var n = this.cols, i, k, x = Array.newClear(n);$/;"	m
url	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	url { ^this.getProperty(\\url);}$/;"	m
url	SCClassLibrary/QtCollider/QWebView.sc	/^  url { ^this.getProperty( \\url ); }$/;"	m
url_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCCocoaView.sc	/^	url_ {|path|$/;"	m
url_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	url_ { arg new_url;$/;"	m
url_	SCClassLibrary/QtCollider/QWebView.sc	/^  url_ { arg address; this.setProperty( \\url, address ); }$/;"	m
use	SCClassLibrary/Common/Collections/Environment.sc	/^	use { arg function;$/;"	m
use	SCClassLibrary/Common/Collections/EnvironmentRedirect.sc	/^	use { arg function;$/;"	m
use	quarks/cruciallib/Instr/Interface.sc	/^	use { arg function;$/;"	m
used	SCClassLibrary/Common/GUI/FlowLayout.sc	/^	used {$/;"	m
used	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	used { ^this.decorator.used }$/;"	m
usedPlayN_	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	usedPlayN_ { |flag|$/;"	m
userAppSupportDir	SCClassLibrary/Platform/Platform.sc	/^	userAppSupportDir { _Platform_userAppSupportDir }$/;"	m
userCanClose	SCClassLibrary/QtCollider/QWindow.sc	/^  userCanClose { ^view.userCanClose; }$/;"	m
userCanClose_	SCClassLibrary/Common/GUI/iphone/Base/GUIScreen.sc	/^	userCanClose_ { arg boo;$/;"	m
userCanClose_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	userCanClose_ { arg boo;$/;"	m
userCanClose_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/GUIScreen.sc	/^	userCanClose_ {$/;"	m
userCanClose_	SCClassLibrary/QtCollider/QWindow.sc	/^  userCanClose_ { arg boolean; view.userCanClose_( boolean ); }$/;"	m
userConfigDir	SCClassLibrary/Platform/Platform.sc	/^	userConfigDir { _Platform_userConfigDir }$/;"	m
userExtensionDir	SCClassLibrary/Platform/Platform.sc	/^	userExtensionDir { _Platform_userExtensionDir }$/;"	m
userHomeDir	SCClassLibrary/Platform/Platform.sc	/^	userHomeDir { _Platform_userHomeDir }$/;"	m
usesAutoInOutdent_	SCClassLibrary/Common/GUI/Document.sc	/^	usesAutoInOutdent_ {|bool|$/;"	m
usesTabToFocusNextView_	SCClassLibrary/QtCollider/QTextView.sc	/^  usesTabToFocusNextView_ { arg aBool;$/;"	m
vSpacing_	SCClassLibrary/QtCollider/QLayout.sc	/^  vSpacing_ { arg spacing;$/;"	m
value	SCClassLibrary/Common/Control/GeneralHID.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	value { arg src,chan,a,b;$/;"	m
value	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	value { arg src,chan,num,val;$/;"	m
value	SCClassLibrary/Common/Control/MIDIResponder.sc	/^	value { arg src,chan,val;$/;"	m
value	SCClassLibrary/Common/Control/OSCpathResponder.sc	/^	value { arg time, msg;$/;"	m
value	SCClassLibrary/Common/Control/OSCresponder.sc	/^	value { arg time, msg, addr;$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value { this.subclassResponsibility(thisMethod) }$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|...testMsg|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|msg, time, addr, recvPort| active[msg[0]].value(msg, time, addr, recvPort);}$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|msg, time, addr, recvPort|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|msg, time, addr, testRecvPort|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|msg, time, testAddr, recvPort|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|msg, time, testAddr, testRecvPort|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|num, chan, testSrc|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|src, chan, num, val| active[num].value(val, num, chan, src);}$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|src, chan, val| active[chan].value(val, chan, src);}$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|srcID, data|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|testMsg, time, addr, recvPort|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|value, num, chan, testSrc|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|value, num, testChan, srcID|$/;"	m
value	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	value {|value, num, testChan, testSrc|$/;"	m
value	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	value { arg ... args;$/;"	m
value	SCClassLibrary/Common/Core/Condition.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/Core/Function.sc	/^	value { arg ... args;$/;"	m
value	SCClassLibrary/Common/Core/Function.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/Core/Message.sc	/^	value { arg ... moreArgs;$/;"	m
value	SCClassLibrary/Common/Core/Message.sc	/^	value { arg receiver ... args;$/;"	m
value	SCClassLibrary/Common/Core/Object.sc	/^	value { ^this }$/;"	m
value	SCClassLibrary/Common/Core/Thread.sc	/^	value { ^this }$/;"	m
value	SCClassLibrary/Common/Core/Thread.sc	/^	value { arg inval;$/;"	m
value	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	value { ^[lo, hi] }$/;"	m
value	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	value { ^object }$/;"	m
value	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	value { \/\/returns array$/;"	m
value	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	value { ^object }$/;"	m
value	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	value {$/;"	m
value	SCClassLibrary/Common/Streams/Stream.sc	/^	value { arg inval; ^this.next(inval) }$/;"	m
value	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	value { arg ... args;$/;"	m
value	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	value { arg ... args;$/;"	m
value	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	value { | something |$/;"	m
value	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	value { arg proxy;$/;"	m
value	SCClassLibrary/Platform/linux/LID.sc	/^	value { ^value }$/;"	m
value	SCClassLibrary/Platform/linux/LID.sc	/^	value {$/;"	m
value	SCClassLibrary/Platform/osx/MXHID.sc	/^	value { ^value }$/;"	m
value	SCClassLibrary/QtCollider/BasicViews.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QKnob.sc	/^  value { ^this.getProperty(\\value) }$/;"	m
value	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QListView.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QNumberBox.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QSlider.sc	/^  value {$/;"	m
value	SCClassLibrary/QtCollider/QTreeView.sc	/^  value {$/;"	m
value	quarks/MathLib/classes/Solver/Solver.sc	/^	value { arg... args;$/;"	m
value	quarks/cruciallib/Editors/EnvEditor.sc	/^	value { \/\/ i return a copy for safety$/;"	m
value	quarks/cruciallib/Editors/NumberEditor.sc	/^	value {$/;"	m
value	quarks/cruciallib/Gui/ActionButton.sc	/^	value { ^state }$/;"	m
value	quarks/cruciallib/Instr/Instr.sc	/^	value { arg ... args; instr.valueArray(args) }$/;"	m
value	quarks/cruciallib/Instr/Instr.sc	/^	value { arg ... args;$/;"	m
value	quarks/cruciallib/Instr/Instr.sc	/^	value { arg args;$/;"	m
value	quarks/cruciallib/Instr/Instr.sc	/^	value { arg inputs; \/\/ this should be ... inputs$/;"	m
value	quarks/cruciallib/Instr/Patch.sc	/^	value { arg ... overideArgs;  ^this.valueArray(overideArgs) }$/;"	m
value	quarks/cruciallib/Players/AbstractPlayer.sc	/^	value {  ^this.ar }$/;"	m
value	quarks/cruciallib/Players/KrPlayer.sc	/^	value { ^this.kr }$/;"	m
value	quarks/cruciallib/Scheduling/Position.sc	/^	value { ^current }$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg obj; ^obj.even }$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg obj; ^obj.isNil }$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg obj; ^obj.notNil }$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg obj; ^obj.odd }$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg obj;$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value { arg path;$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	value {$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	value { arg view, char,modifier,unicode,keycode;$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponder.sc	/^	value { arg view,char,modifier,unicode,keycode;$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/KeyResponder.sc	/^	value { arg view,char,modifier,unicode,keycode;$/;"	m
value	quarks/cruciallib/UncoupledUsefulThings/UnicodeResponder.sc	/^	value { arg view,char,modifier,unicode,keycode;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/Base/EZNumber.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	valueAction_ { |vals| this.value_(vals).doAction }$/;"	m
valueAction_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	valueAction_ { |val| this.value_(val).doAction; }$/;"	m
valueAction_	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/QtCollider/BasicViews.sc	/^  valueAction_ { arg anInt;$/;"	m
valueAction_	SCClassLibrary/QtCollider/BasicViews.sc	/^  valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/QtCollider/BasicViews.sc	/^  valueAction_ { |val|$/;"	m
valueAction_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  valueAction_ { arg anArray;$/;"	m
valueAction_	SCClassLibrary/QtCollider/QKnob.sc	/^  valueAction_ { arg val; this.value = val; this.doAction }$/;"	m
valueAction_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  valueAction_ { arg val;$/;"	m
valueAction_	SCClassLibrary/QtCollider/QSlider.sc	/^  valueAction_ { arg val;$/;"	m
valueAction_	quarks/cruciallib/Editors/NumberEditor.sc	/^	valueAction_ { arg val; \/\/ standard sc$/;"	m
valueArray	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	valueArray {arg args; ^this.value(*args) } \/\/ needed to work in FunctionLists$/;"	m
valueArray	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	valueArray { arg args;$/;"	m
valueArray	SCClassLibrary/Common/Core/Function.sc	/^	valueArray { ^this.value }$/;"	m
valueArray	SCClassLibrary/Common/Core/Function.sc	/^	valueArray { arg ... args;$/;"	m
valueArray	SCClassLibrary/Common/Core/Object.sc	/^	valueArray { ^this }$/;"	m
valueArray	SCClassLibrary/Common/Core/Ref.sc	/^	valueArray { ^value }$/;"	m
valueArray	SCClassLibrary/Common/Core/Thread.sc	/^	valueArray { ^this }$/;"	m
valueArray	SCClassLibrary/Common/Core/Thread.sc	/^	valueArray { arg inval;$/;"	m
valueArray	SCClassLibrary/Common/Streams/Stream.sc	/^	valueArray { ^this.next }$/;"	m
valueArray	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	valueArray { arg args;$/;"	m
valueArray	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	valueArray { arg args;$/;"	m
valueArray	quarks/cruciallib/Instr/Instr.sc	/^	valueArray { arg args;$/;"	m
valueArray	quarks/cruciallib/Instr/Instr.sc	/^	valueArray { arg inputs;$/;"	m
valueArray	quarks/cruciallib/Instr/Patch.sc	/^	valueArray { arg  overideArgs;$/;"	m
valueArray	quarks/cruciallib/Players/AbstractPlayer.sc	/^	valueArray { ^this.value }$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	valueArrayEnvir { arg ... args;$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	valueArrayEnvir { arg args;$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/Function.sc	/^	valueArrayEnvir { ^this.value }$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/Function.sc	/^	valueArrayEnvir { arg ... args;$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/Object.sc	/^	valueArrayEnvir { ^this }$/;"	m
valueArrayEnvir	SCClassLibrary/Common/Core/Ref.sc	/^	valueArrayEnvir { ^value }$/;"	m
valueArrayEnvir	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	valueArrayEnvir {  arg ... args;$/;"	m
valueBlend	SCClassLibrary/Common/Core/Color.sc	/^	valueBlend { arg aColor, blend=0.0;$/;"	m
valueEmpty	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	valueEmpty { arg args;$/;"	m
valueEnvir	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	valueEnvir { arg ... args;$/;"	m
valueEnvir	SCClassLibrary/Common/Core/Function.sc	/^	valueEnvir { ^this.value }$/;"	m
valueEnvir	SCClassLibrary/Common/Core/Function.sc	/^	valueEnvir { arg ... args;$/;"	m
valueEnvir	SCClassLibrary/Common/Core/Object.sc	/^	valueEnvir { ^this }$/;"	m
valueEnvir	SCClassLibrary/Common/Core/Ref.sc	/^	valueEnvir { ^value }$/;"	m
valueEnvir	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	valueEnvir { arg ... args;$/;"	m
valueEnvir	quarks/cruciallib/Instr/Instr.sc	/^	valueEnvir { arg ... args; ^instr.valueEnvir(args) }$/;"	m
valueEnvir	quarks/cruciallib/Instr/Instr.sc	/^	valueEnvir { arg inputs;$/;"	m
valueFuncProxy	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^	valueFuncProxy { arg args;$/;"	m
valueFuncProxy	SCClassLibrary/JITLib/Patterns/OpFunctionProxy.sc	/^	valueFuncProxy { arg args;$/;"	m
valueFuncProxy	SCClassLibrary/JITLib/Patterns/extFunction.sc	/^	valueFuncProxy {$/;"	m
valueThumbSize_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	valueThumbSize_ { arg val;$/;"	m
valueThumbSize_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  valueThumbSize_ { arg float;$/;"	m
valueWithEnvir	SCClassLibrary/Common/Core/Function.sc	/^	valueWithEnvir { arg envir;$/;"	m
value_	SCClassLibrary/Common/Control/Bus.sc	/^	value_ { arg value;$/;"	m
value_	SCClassLibrary/Common/Control/GeneralHID.sc	/^	value_ { |v|$/;"	m
value_	SCClassLibrary/Common/Control/NodeControl.sc	/^	value_ { arg aval;$/;"	m
value_	SCClassLibrary/Common/Core/Condition.sc	/^	value_ { arg inVal;$/;"	m
value_	SCClassLibrary/Common/GUI/Base/EZKnob.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/Base/EZRangerSC.sc	/^	value_ { |vals| this.lo_(vals[0]).hi_(vals[1]) }$/;"	m
value_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	value_ { |val|$/;"	m
value_	SCClassLibrary/Common/GUI/Base/EZSlider.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/Base/EZText.sc	/^	value_ { |inval|$/;"	m
value_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	value_ { |arrays|$/;"	m
value_	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	value_ { |array|$/;"	m
value_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCKnob.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCTextField2.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	value_ { arg val;$/;"	m
value_	SCClassLibrary/Platform/linux/LID.sc	/^	value_ { | dta |$/;"	m
value_	SCClassLibrary/Platform/linux/LID.sc	/^	value_ { | rawValue |$/;"	m
value_	SCClassLibrary/Platform/linux/LID.sc	/^	value_ { | v |$/;"	m
value_	SCClassLibrary/Platform/osx/MXHID.sc	/^	value_ { | dta |$/;"	m
value_	SCClassLibrary/Platform/osx/MXHID.sc	/^	value_ { | rawval |$/;"	m
value_	SCClassLibrary/Platform/osx/MXHID.sc	/^	value_ { | v |$/;"	m
value_	SCClassLibrary/QtCollider/BasicViews.sc	/^  value_ { arg argVal;$/;"	m
value_	SCClassLibrary/QtCollider/BasicViews.sc	/^  value_ { arg val;$/;"	m
value_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  value_ { arg anArray;$/;"	m
value_	SCClassLibrary/QtCollider/QKnob.sc	/^  value_ { arg val; this.setProperty(\\value, val) }$/;"	m
value_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  value_ { arg val;$/;"	m
value_	SCClassLibrary/QtCollider/QListView.sc	/^  value_ { arg val;$/;"	m
value_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  value_ { arg array;$/;"	m
value_	SCClassLibrary/QtCollider/QNumberBox.sc	/^  value_ { arg value;$/;"	m
value_	SCClassLibrary/QtCollider/QSlider.sc	/^  value_ { arg argVal;$/;"	m
value_	SCClassLibrary/QtCollider/QTreeView.sc	/^  value_ { arg index;$/;"	m
value_	quarks/cruciallib/Editors/NumberEditor.sc	/^	value_ { arg dict;$/;"	m
value_	quarks/cruciallib/Editors/NumberEditor.sc	/^	value_ { arg val,changer;$/;"	m
value_	quarks/cruciallib/Editors/NumberEditor.sc	/^	value_ { arg val;$/;"	m
value_	quarks/cruciallib/Editors/NumberEditor.sc	/^	value_ { |v,change=true|$/;"	m
value_	quarks/cruciallib/Editors/NumberEditor.sc	/^	value_ { |v|$/;"	m
value_	quarks/cruciallib/Gui/ActionButton.sc	/^	value_ { arg way;$/;"	m
value_	quarks/cruciallib/Players/Patching.sc	/^	value_ { arg val;$/;"	m
value_	quarks/cruciallib/Players/SimplePlayerEffect.sc	/^	value_ { arg v;$/;"	m
value_	quarks/cruciallib/Scheduling/Position.sc	/^	value_ { arg val;$/;"	m
value_	quarks/cruciallib/Sequencers/BusDriver.sc	/^	value_ { |v|$/;"	m
values	SCClassLibrary/Common/Collections/Dictionary.sc	/^	values {$/;"	m
varArgs	SCClassLibrary/Common/Core/Function.sc	/^	varArgs { ^def.varArgs }		\/\/ return boolean whether function has ellipsis argument$/;"	m
varArgs	SCClassLibrary/Common/Core/Kernel.sc	/^	varArgs { _FunDef_VarArgs }		\/\/ return boolean whether function has ellipsis argument$/;"	m
variance	quarks/MathLib/classes/statistics/extStatistics.sc	/^	variance { arg mean;	\/\/ supply mean if known$/;"	m
variancePop	quarks/MathLib/classes/statistics/extStatistics.sc	/^	variancePop { arg mean;	\/\/ supply mean if known$/;"	m
varlag	SCClassLibrary/Common/Audio/UGen.sc	/^	varlag { arg time=0.1, curvature=0, warp=5, start;$/;"	m
varlag	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	varlag { arg ... args; ^this.multiChannelPerform('varlag', *args) }$/;"	m
varlag	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	varlag { ^this }$/;"	m
vary	SCClassLibrary/Common/Core/Color.sc	/^	vary { arg val=0.1, lo=0.3, hi=0.9, alphaVal=0;$/;"	m
veloc	SCClassLibrary/Common/Control/MIDIOut.sc	/^	veloc { ^c }$/;"	m
vert	SCClassLibrary/Common/GUI/guicrucial/PageLayout.sc	/^	vert { arg func,bounds,spacing;$/;"	m
vert	SCClassLibrary/Common/GUI/osx/scide_scapp/viewExtensionsOSX.sc	/^	vert { arg func,bounds;$/;"	m
vert	SCClassLibrary/Common/GUI/viewExtensions.sc	/^	vert { arg func,bounds,spacing;$/;"	m
vert	SCClassLibrary/QtCollider/viewExtensionsQt.sc	/^	vert { arg func,bounds;$/;"	m
vertGrid_	SCClassLibrary/Common/GUI/Grid.sc	/^	vertGrid_ { arg g;$/;"	m
view	SCClassLibrary/QtCollider/QTreeView.sc	/^  view { arg column;$/;"	m
viewContainingPoint	SCClassLibrary/Common/GUI/osx/scide_scapp/SCInterfaceBuilder/SCIBToolboxWindow.sc	/^	viewContainingPoint { |point|$/;"	m
viewDidClose	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	viewDidClose { view = nil; }$/;"	m
viewDidClose	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	viewDidClose {$/;"	m
viewDidClose	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	viewDidClose {$/;"	m
viewDidClose	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	viewDidClose {$/;"	m
viewFrames	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  viewFrames { ^this.getProperty( \\viewFrames ); }$/;"	m
view_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	view_ { arg v;$/;"	m
visible	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	visible { ^slider.visible }$/;"	m
visible	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	visible { ^view.getProperty(\\visible) }$/;"	m
visible	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	visible {$/;"	m
visible	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	visible {$/;"	m
visible	SCClassLibrary/Common/osx/objC/scide_scapp/SCWindowPlusCocoa.sc	/^	visible {$/;"	m
visible	SCClassLibrary/QtCollider/QView.sc	/^  visible {$/;"	m
visible	SCClassLibrary/QtCollider/QWindow.sc	/^  visible { ^view.visible; }$/;"	m
visible	quarks/MathLib/classes/gui/ScatterView.sc	/^	visible {$/;"	m
visible	quarks/MathLib/classes/gui/ScatterView2.sc	/^	visible {$/;"	m
visibleOrigin	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	visibleOrigin { ^this.getProperty( \\clipViewOrigin, Point.new );}$/;"	m
visibleOrigin	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	visibleOrigin { ^this.getProperty( \\clipViewOrigin, Point.new );}$/;"	m
visibleOrigin	SCClassLibrary/QtCollider/BasicViews.sc	/^  visibleOrigin {$/;"	m
visibleOrigin_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	visibleOrigin_ { arg point;$/;"	m
visibleOrigin_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	visibleOrigin_ { arg point;$/;"	m
visibleOrigin_	SCClassLibrary/QtCollider/BasicViews.sc	/^  visibleOrigin_ { arg point;$/;"	m
visible_	SCClassLibrary/Common/GUI/Base/EZScroller.sc	/^	visible_ { |flag| slider.visible_(flag) }$/;"	m
visible_	SCClassLibrary/Common/GUI/Base/EZgui.sc	/^	visible_ { |bool|  view.setProperty(\\visible,bool)  }$/;"	m
visible_	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	visible_ { arg boo; view.visible = boo }$/;"	m
visible_	SCClassLibrary/Common/GUI/iphone/Base/SCView.sc	/^	visible_ { arg bool;$/;"	m
visible_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	visible_ { arg bool;$/;"	m
visible_	SCClassLibrary/Common/osx/objC/scide_scapp/SCWindowPlusCocoa.sc	/^	visible_ { |yorn|$/;"	m
visible_	SCClassLibrary/QtCollider/QView.sc	/^  visible_ { arg bool;$/;"	m
visible_	SCClassLibrary/QtCollider/QWindow.sc	/^  visible_ { arg boolean; view.visible_(boolean); }$/;"	m
visible_	quarks/MathLib/classes/gui/ScatterView.sc	/^	visible_ { arg bool;$/;"	m
visible_	quarks/MathLib/classes/gui/ScatterView2.sc	/^	visible_ { arg bool;$/;"	m
vol	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	vol { ^if(monitor.isNil) { 1.0 } { monitor.vol } }$/;"	m
vol_	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	vol_ { arg val; this.initMonitor(val) }$/;"	m
vol_	SCClassLibrary/JITLib/ProxySpace/InBus.sc	/^	vol_ { | val |$/;"	m
volume_	SCClassLibrary/Common/Control/Server.sc	/^	volume_ {arg newVolume;$/;"	m
volume_	SCClassLibrary/Common/Control/Volume.sc	/^	volume_ { arg aVolume;$/;"	m
w	SCClassLibrary/JITLib/GUI/ProxyMixerOld.sc	/^	w {$/;"	m
wait	SCClassLibrary/Common/Control/Server.sc	/^	wait { arg responseName;$/;"	m
wait	SCClassLibrary/Common/Core/Condition.sc	/^	wait {$/;"	m
wait	SCClassLibrary/Common/Core/Semaphore.sc	/^	wait {$/;"	m
wait	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	wait { ^this.yield }$/;"	m
wait	SCClassLibrary/Common/Streams/Pspawner.sc	/^	wait { | dur |$/;"	m
waitForBoot	SCClassLibrary/Common/Control/Server.sc	/^	waitForBoot { arg onComplete, limit=100, onFailure;$/;"	m
waitForFree	SCClassLibrary/Common/Control/Node.sc	/^	waitForFree {$/;"	m
waitUntil	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	waitUntil { ^(this - thisThread.beats).max(0).yield }$/;"	m
wake	SCClassLibrary/Platform/osx/extMain.sc	/^	wake {$/;"	m
wakeUp	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^	wakeUp {$/;"	m
wakeUp	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	wakeUp {}$/;"	m
wakeUp	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	wakeUp { 	\/\/ do not touch internal state if already playing$/;"	m
wakeUp	SCClassLibrary/JITLib/ProxySpace/ProxySpace.sc	/^	wakeUp {$/;"	m
wakeUp	SCClassLibrary/JITLib/ProxySpace/wrapForNodeProxy.sc	/^	wakeUp {}$/;"	m
wakeUpParentsToBundle	SCClassLibrary/JITLib/ProxySpace/NodeMap.sc	/^		wakeUpParentsToBundle { arg bundle, checkedAlready;$/;"	m
wakeUpParentsToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	wakeUpParentsToBundle { | bundle, checkedAlready |$/;"	m
wakeUpParentsToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	wakeUpParentsToBundle { | bundle, checkedAlready |$/;"	m
wakeUpParentsToBundle	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	wakeUpParentsToBundle {}$/;"	m
wakeUpToBundle	SCClassLibrary/JITLib/ProxySpace/BusPlug.sc	/^	wakeUpToBundle {}$/;"	m
wakeUpToBundle	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	wakeUpToBundle { | bundle, checkedAlready |$/;"	m
warn	SCClassLibrary/Common/Collections/String.sc	/^	warn { "WARNING: ".post; this.postln }$/;"	m
warning_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCLevelIndicator.sc	/^	warning_ {arg val;$/;"	m
warning_	SCClassLibrary/QtCollider/QLevelIndicator.sc	/^  warning_ {arg val;$/;"	m
warp_	SCClassLibrary/Common/GUI/ControlModel.sc	/^	warp_ { arg w;$/;"	m
wasStopped	SCClassLibrary/Common/Streams/Stream.sc	/^	wasStopped {$/;"	m
watchNoncontrols	quarks/cruciallib/Instr/Patch.sc	/^	watchNoncontrols {$/;"	m
waveColors	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	waveColors {$/;"	m
waveColors	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  waveColors { ^this.getProperty( \\waveColors ) }$/;"	m
waveColors_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	waveColors_ { arg arrayOfColors;$/;"	m
waveColors_	SCClassLibrary/QtCollider/QScope.sc	/^  waveColors_ { arg aColorArray;$/;"	m
waveColors_	SCClassLibrary/QtCollider/QScope2.sc	/^  waveColors_ { arg aColorArray;$/;"	m
waveColors_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  waveColors_ { arg colors; this.setProperty( \\waveColors, colors ) }$/;"	m
waveFill	SCClassLibrary/Common/Math/Signal.sc	/^	waveFill { arg function, start = 0.0, end = 1.0;$/;"	m
wchoose	SCClassLibrary/Common/Collections/Bag.sc	/^	wchoose {$/;"	m
wchoose	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wchoose { arg weights;$/;"	m
wchoose	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	wchoose { 		$/;"	m
weigh	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	weigh { weights = counts \/ numItems }$/;"	m
welWindow	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	welWindow { ^this.performUnaryOp('welWindow') }$/;"	m
welWindow	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	welWindow { ^this.composeUnaryOp('welWindow') }$/;"	m
welWindow	SCClassLibrary/Common/Core/Symbol.sc	/^	welWindow { ^this }$/;"	m
welWindow	SCClassLibrary/Common/Math/Signal.sc	/^	welWindow { _WelchWindow; ^this.primitiveFailed }$/;"	m
welWindow	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	welWindow { _WelchWindow; ^this.primitiveFailed }$/;"	m
when	SCClassLibrary/Platform/Platform.sc	/^	when { | features, ifFunction, elseFunction |$/;"	m
while	SCClassLibrary/Common/Audio/SynthDef.sc	/^		while { available.size > 0 }$/;"	m
while	SCClassLibrary/Common/Collections/Array.sc	/^		while { (i < size) and: { list.size < maxlen }}{$/;"	m
while	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^		while { i < this.size }$/;"	m
while	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Collections/PriorityQueue.sc	/^		while {this.notEmpty} {$/;"	m
while	SCClassLibrary/Common/Collections/RingBuffer.sc	/^		while { i < n } {$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^			while { (j > left) && { function.value(this[j-1], test).not } }$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^			while { (l < this.size) and: { function.value(this[l], p) } }{$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^			while { (r >= 0) and: { function.value(p, this[r]) } }{$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while { (left <= leftEnd) && (mid <= right) }$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while { i < size }{$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while { i <= right }$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while { left <= leftEnd }$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while { mid <= right }$/;"	m
while	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Collections/String.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Control/Buffer.sc	/^			while { pos < collsize } {$/;"	m
while	SCClassLibrary/Common/Control/SerialPort.sc	/^		    while { this.prPut(byte).not } {$/;"	m
while	SCClassLibrary/Common/Control/SerialPort.sc	/^		while { (byte = this.next).isNil } {$/;"	m
while	SCClassLibrary/Common/Control/Server.sc	/^				while { syncTasks.notEmpty } { syncTasks.removeAt(0).value(c) };$/;"	m
while	SCClassLibrary/Common/Control/SkipJack.sc	/^			while { dt.value.wait; stopTest.value.not } { updateFunc.value(this) };$/;"	m
while	SCClassLibrary/Common/Core/Boolean.sc	/^	while {$/;"	m
while	SCClassLibrary/Common/Core/Clock.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Core/Error.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Core/Kernel.sc	/^		while { class.notNil } {$/;"	m
while	SCClassLibrary/Common/Core/Object.sc	/^		while { thisThread.beats - time < val } { this.value.yield }$/;"	m
while	SCClassLibrary/Common/Core/Object.sc	/^	while { arg body;$/;"	m
while	SCClassLibrary/Common/GUI/Document.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Math/Integer.sc	/^			while { (num mod: prime) == 0 }{$/;"	m
while	SCClassLibrary/Common/Math/SimpleNumber.sc	/^				while {$/;"	m
while	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Streams/FilterPatterns.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/History.sc	/^		while { endChar == $\\n } {$/;"	m
while	SCClassLibrary/Common/Streams/History.sc	/^		while { line = file.getLine; line.notNil } {$/;"	m
while	SCClassLibrary/Common/Streams/ListPatterns.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Streams/ListPatterns.sc	/^		while { (repeat < localRepeats) and: { consecutiveNils < list.size } } {$/;"	m
while	SCClassLibrary/Common/Streams/Patterns.sc	/^				while {$/;"	m
while	SCClassLibrary/Common/Streams/Patterns.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Streams/Patterns.sc	/^		while { counter < len } {$/;"	m
while	SCClassLibrary/Common/Streams/Patterns.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/Plambda.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/Ppar.sc	/^			while { priorityQ.notEmpty } {$/;"	m
while	SCClassLibrary/Common/Streams/Pproto.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/Pseed.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/Pspawner.sc	/^			while { (event = stream.next(spawnProtoEvent.copy.put(\\spawner, sp))).notNil } {$/;"	m
while	SCClassLibrary/Common/Streams/Stream.sc	/^			while {$/;"	m
while	SCClassLibrary/Common/Streams/Stream.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/TabFileReader.sc	/^		while {$/;"	m
while	SCClassLibrary/Common/Streams/TimePatterns.sc	/^					while { thisThread.endBeat > curTime = thisThread.beats } {$/;"	m
while	SCClassLibrary/Common/Streams/TimePatterns.sc	/^			while {$/;"	m
while	SCClassLibrary/JITLib/Patterns/Fdef.sc	/^			while {$/;"	m
while	SCClassLibrary/JITLib/Patterns/Pdef.sc	/^		while {$/;"	m
while	SCClassLibrary/JITLib/Patterns/Psym.sc	/^		while {$/;"	m
while	SCClassLibrary/JITLib/Patterns/Pxfade.sc	/^		while {$/;"	m
while	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^		while { t.roundUp(tolerance) < by }$/;"	m
while	SCClassLibrary/QtCollider/QLayout.sc	/^      while { i + 1 < in.size } {$/;"	m
while	SCClassLibrary/QtCollider/QTreeView.sc	/^      while { i < n } {$/;"	m
while	SCClassLibrary/QtCollider/QView.sc	/^      while { p.notNil } {$/;"	m
while	SCClassLibrary/scide_scqt/ScIDE.sc	/^			while { class.notNil } {$/;"	m
while	quarks/MathLib/classes/MarkovSet/MarkovPatterns.sc	/^                		while {  $/;"	m
while	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^								while {$/;"	m
while	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^							while {$/;"	m
while	quarks/MathLib/classes/MarkovSet/MarkovSet.sc	/^						while {$/;"	m
while	quarks/MathLib/classes/MarkovSet/extHTML.sc	/^							while { nx = nPages.value.asInteger.rand; nx == i }; $/;"	m
while	quarks/MathLib/classes/patterns/Preduce.sc	/^		while {$/;"	m
while	quarks/MathLib/classes/various/isCantorNumber.sc	/^		while { rest > 0 } $/;"	m
while	quarks/cruciallib/Players/PlayerRecorder.sc	/^			while { bufLoaded.not and: {timeout > 0} } {$/;"	m
width_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	width_ { arg w;$/;"	m
wilcoxonSR	quarks/MathLib/classes/statistics/extStatistics.sc	/^	wilcoxonSR { |that, onetailed=false|$/;"	m
wilcoxonSRzScore	quarks/MathLib/classes/statistics/extStatistics.sc	/^	wilcoxonSRzScore {$/;"	m
winName	SCClassLibrary/JITLib/GUI/JITGui.sc	/^	winName { |name| ^this.class.name ++ $_ ++ (name ?? { this.getName }) }$/;"	m
windex	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	windex {$/;"	m
window	SCClassLibrary/QtCollider/QPalette.sc	/^  window { ^this.color( \\window ) }$/;"	m
windowText	SCClassLibrary/QtCollider/QPalette.sc	/^  windowText { ^this.color( \\windowText ) }$/;"	m
windowText_	SCClassLibrary/QtCollider/QPalette.sc	/^  windowText_ { arg color; this.setColor( color, \\windowText ) }$/;"	m
window_	SCClassLibrary/QtCollider/QPalette.sc	/^  window_ { arg color; this.setColor( color, \\window ) }$/;"	m
with	SCClassLibrary/Common/Collections/Array2D.sc	/^	with { arg aarray;	array = aarray; }$/;"	m
withTrailingSlash	SCClassLibrary/Common/Collections/String.sc	/^	withTrailingSlash {$/;"	m
withoutTrailingSlash	SCClassLibrary/Common/Collections/String.sc	/^	withoutTrailingSlash {$/;"	m
wmean	quarks/MathLib/classes/statistics/extStatistics.sc	/^	wmean { |weights|$/;"	m
wouldExceedBottom	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	wouldExceedBottom { arg aBounds; ^this.decorator.wouldExceedBottom(aBounds) }$/;"	m
wouldExceedBottom	SCClassLibrary/Common/GUI/SCViewHolder.sc	/^	wouldExceedBottom { arg aBounds;$/;"	m
wrap	SCClassLibrary/Common/Audio/UGen.sc	/^ 	wrap { arg lo = 0.0, hi = 1.0;$/;"	m
wrap	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wrap { arg ... args; ^this.multiChannelPerform('wrap', *args) }$/;"	m
wrap	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	wrap { arg lo, hi; ^this.composeNAryOp('wrap', [lo,hi])  }$/;"	m
wrap	SCClassLibrary/Common/Math/Float.sc	/^	wrap { arg lo, hi; _WrapFloat; ^this.primitiveFailed }$/;"	m
wrap	SCClassLibrary/Common/Math/Integer.sc	/^	wrap { arg lo, hi; _WrapInt; ^this.primitiveFailed }$/;"	m
wrap	SCClassLibrary/Common/Math/Signal.sc	/^	wrap { arg lo, hi; _WrapSignal; ^this.primitiveFailed }$/;"	m
wrap2	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wrap2 { arg aNumber, adverb; ^this.performBinaryOp('wrap2', aNumber, adverb) }$/;"	m
wrap2	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	wrap2 { arg function=1, adverb; ^this.composeBinaryOp('wrap2', function, adverb) }$/;"	m
wrap2	SCClassLibrary/Common/Math/Signal.sc	/^	wrap2 { arg aNumber; _Wrap2; ^aNumber.performBinaryOpOnSignal('wrap2', this) }$/;"	m
wrap2	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	wrap2 { arg aNumber, adverb; _Wrap2; ^aNumber.performBinaryOpOnSimpleNumber('wrap2', this, adverb) }$/;"	m
wrapAt	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	wrapAt { arg index;$/;"	m
wrapAt	SCClassLibrary/Common/Collections/Interval.sc	/^	wrapAt { arg index; ^step * (index % this.size) + start }$/;"	m
wrapAt	SCClassLibrary/Common/Collections/List.sc	/^	wrapAt { arg i; i = i.asInteger.wrap(0, this.size - 1); ^array.at(i) }$/;"	m
wrapAt	SCClassLibrary/Common/Collections/Scale.sc	/^	wrapAt { |index|$/;"	m
wrapAt	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wrapAt { arg index;$/;"	m
wrapAt	quarks/MathLib/classes/MarkovSet/WeighBag.sc	/^	wrapAt { arg index;  ^items.wrapAt(index) }$/;"	m
wrapAtDepth	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wrapAtDepth { arg rank, index;$/;"	m
wrapExtend	SCClassLibrary/Common/Collections/Array.sc	/^	wrapExtend { arg length;$/;"	m
wrapExtend	SCClassLibrary/Common/Collections/List.sc	/^	wrapExtend { arg length;$/;"	m
wrapExtend	SCClassLibrary/Common/Collections/String.sc	/^	wrapExtend { arg size;$/;"	m
wrapFunc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	wrapFunc { this.subclassResponsibility(thisMethod) }$/;"	m
wrapFunc	SCClassLibrary/Common/Control/ResponseDefs.sc	/^	wrapFunc {|funcProxy|$/;"	m
wrapInFader	quarks/cruciallib/JITLibCrucialWrappers/wrapCXForNodeProxy.sc	/^	wrapInFader { ^this }$/;"	m
wrapInFader	quarks/cruciallib/JITLibCrucialWrappers/wrapCXForNodeProxy.sc	/^	wrapInFader { arg bus;$/;"	m
wrapNext	quarks/cruciallib/Scheduling/Position.sc	/^	wrapNext { arg min,max;$/;"	m
wrapPatterns	SCClassLibrary/Common/Streams/Ppar.sc	/^	wrapPatterns { arg ids;$/;"	m
wrapPut	SCClassLibrary/Common/Collections/ArrayedCollection.sc	/^	wrapPut { arg index, item;$/;"	m
wrapPut	SCClassLibrary/Common/Collections/List.sc	/^	wrapPut { arg i, item; i = i.asInteger.wrap(0, this.size - 1); ^array.put(i, item) }$/;"	m
wrapPut	SCClassLibrary/Common/Collections/SequenceableCollection.sc	/^	wrapPut { arg index, value;$/;"	m
wrapPut	quarks/MathLib/classes/MarkovSet/ShannonMarkovSet.sc	/^	wrapPut { arg i, item;$/;"	m
writable	SCClassLibrary/Common/Collections/RingBuffer.sc	/^	writable {$/;"	m
write	SCClassLibrary/Common/Control/Buffer.sc	/^	write { arg path, headerFormat = "aiff", sampleFormat = "int24", numFrames = -1,$/;"	m
write	SCClassLibrary/Common/Control/MIDIOut.sc	/^	write { arg len, hiStatus, loStatus, a=0, b=0;$/;"	m
write	SCClassLibrary/Common/Control/Score.sc	/^	write { arg oscFilePath, clock;$/;"	m
write	SCClassLibrary/Common/GUI/osx/scide_scapp/SCImage.sc	/^	write { arg path, format; \/\/ ok$/;"	m
write	SCClassLibrary/Common/Math/Signal.sc	/^	write { arg path;$/;"	m
write	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	write { arg item;$/;"	m
write	quarks/Feedback/Fb.sc	/^	write {$/;"	m
write	quarks/cruciallib/Gui/SynthConsole.sc	/^	write {arg dur,defpath;$/;"	m
write	quarks/cruciallib/Instr/Instr.sc	/^	write { arg dir,args;$/;"	m
writeArchive	SCClassLibrary/Common/Core/Object.sc	/^	writeArchive { arg pathname;$/;"	m
writeBinaryArchive	SCClassLibrary/Common/Core/Object.sc	/^	writeBinaryArchive { arg pathname;$/;"	m
writeClientCSS	SCClassLibrary/Platform/Platform.sc	/^	writeClientCSS {}$/;"	m
writeClientCSS	SCClassLibrary/Platform/osx/OSXPlatform.sc	/^	writeClientCSS {$/;"	m
writeConstants	SCClassLibrary/Common/Audio/SynthDef.sc	/^	writeConstants { arg file;$/;"	m
writeConstants	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeConstants { arg file;$/;"	m
writeData	SCClassLibrary/Common/Files/SoundFile.sc	/^	writeData { arg rawArray;$/;"	m
writeDef	SCClassLibrary/Common/Audio/SynthDef.sc	/^	writeDef { arg file;$/;"	m
writeDef	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeDef { arg file;$/;"	m
writeDef	SCClassLibrary/Common/Audio/UGen.sc	/^	writeDef { arg file;$/;"	m
writeDef	SCClassLibrary/Common/Collections/Collection.sc	/^	writeDef { | file |$/;"	m
writeDefFile	SCClassLibrary/Common/Audio/SynthDef.sc	/^	writeDefFile { arg dir, overwrite(true), mdPlugin;$/;"	m
writeDefFile	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeDefFile { arg dir, overwrite(true);$/;"	m
writeDefFile	SCClassLibrary/Common/Core/Object.sc	/^	writeDefFile { arg name, dir, overwrite = (true);$/;"	m
writeDefFile	quarks/cruciallib/Instr/Instr.sc	/^	writeDefFile { arg dir,args;$/;"	m
writeDefFile	quarks/cruciallib/Players/AbstractPlayer.sc	/^	writeDefFile {  arg dir;$/;"	m
writeDefFileOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeDefFileOld { arg name, dir, overwrite = (true);$/;"	m
writeDefOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeDefOld { arg file;$/;"	m
writeDefOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeDefOld { | file |$/;"	m
writeHtml	quarks/MathLib/classes/MarkovSet/extHTML.sc	/^	writeHtml { arg argPath="supermarkov", nPages=5, pagelength=60, style;$/;"	m
writeInputSpec	SCClassLibrary/Common/Audio/UGen.sc	/^	writeInputSpec { arg file, synthDef;$/;"	m
writeInputSpec	SCClassLibrary/Common/Collections/Collection.sc	/^	writeInputSpec { | file, synthDef |$/;"	m
writeInputSpec	SCClassLibrary/Common/Math/SimpleNumber.sc	/^	writeInputSpec { arg file, synth;$/;"	m
writeInputSpec	SCClassLibrary/JITLib/ProxySpace/operators.sc	/^	writeInputSpec {$/;"	m
writeInputSpecOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeInputSpecOld { arg file, synth;$/;"	m
writeInputSpecOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeInputSpecOld { arg file, synthDef;$/;"	m
writeInputSpecOld	SCClassLibrary/Common/Audio/SynthDefOld.sc	/^	writeInputSpecOld { | file, synthDef |$/;"	m
writeLE	SCClassLibrary/Common/Unix/UnixFILE.sc	/^	writeLE { arg item;$/;"	m
writeMetadata	SCClassLibrary/Common/Audio/SynthDesc.sc	/^	writeMetadata { arg path, mdPlugin;$/;"	m
writeMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	writeMsg { arg path,headerFormat="aiff",sampleFormat="int24",numFrames = -1,$/;"	m
writeName	SCClassLibrary/Common/GUI/guicrucial/ObjectGui.sc	/^	writeName { |layout|$/;"	m
writeName	SCClassLibrary/Common/GUI/guicrucial/StringGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/Editors/EnvEditorGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/Editors/NumberEditorGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/Instr/InstrGui.sc	/^    writeName { arg layout;$/;"	m
writeName	quarks/cruciallib/Instr/PatchGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/Players/AbstractPlayerGui.sc	/^	writeName { arg layout;$/;"	m
writeName	quarks/cruciallib/Sample/SampleGui.sc	/^	writeName { arg layout;$/;"	m
writeName	quarks/cruciallib/Scheduling/TempoGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/Sequencers/HasSubjectGui.sc	/^	writeName { |layout|$/;"	m
writeName	quarks/cruciallib/ServerTools/ServerGui.sc	/^	writeName {}$/;"	m
writeName	quarks/cruciallib/UncoupledUsefulThings/KeyCodeResponderGui.sc	/^	writeName {}$/;"	m
writeOSCFile	SCClassLibrary/Common/Control/Score.sc	/^	writeOSCFile { arg path, from, to, clock;$/;"	m
writeOnce	SCClassLibrary/Common/Audio/SynthDef.sc	/^	writeOnce { arg dir, mdPlugin;$/;"	m
writeOutputSpec	SCClassLibrary/Common/Audio/UGen.sc	/^	writeOutputSpec { arg file;$/;"	m
writeOutputSpecs	SCClassLibrary/Common/Audio/InOut.sc	/^	writeOutputSpecs {}$/;"	m
writeOutputSpecs	SCClassLibrary/Common/Audio/Trig.sc	/^	writeOutputSpecs {}$/;"	m
writeOutputSpecs	SCClassLibrary/Common/Audio/UGen.sc	/^	writeOutputSpecs { arg file;$/;"	m
writeSynthDefFile	SCClassLibrary/JITLib/ProxySpace/ProxyInterfaces.sc	/^	writeSynthDefFile { | path, bytes |$/;"	m
writeTextArchive	SCClassLibrary/Common/Core/Object.sc	/^	writeTextArchive { arg pathname;$/;"	m
writesToBus	SCClassLibrary/Common/Audio/InOut.sc	/^	writesToBus { ^false }$/;"	m
writesToBus	SCClassLibrary/Common/Audio/InOut.sc	/^	writesToBus { ^true }$/;"	m
writesToBus	SCClassLibrary/Common/Audio/InOut.sc	/^ 	writesToBus { ^this.subclassResponsibility(thisMethod) }$/;"	m
writesToBus	SCClassLibrary/Common/Audio/InOut.sc	/^ 	writesToBus { ^true }$/;"	m
writesToBus	SCClassLibrary/Common/Audio/UGen.sc	/^	writesToBus { ^false }$/;"	m
wvariance	quarks/MathLib/classes/statistics/extStatistics.sc	/^	wvariance { |weights, wmean|$/;"	m
x	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	x { 						\/\/returns selected x$/;"	m
x	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	x {$/;"	m
x	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	x {$/;"	m
x	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  x {$/;"	m
x	SCClassLibrary/QtCollider/QSlider2D.sc	/^  x {$/;"	m
x	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	x { ^rho * cos(theta) * cos(phi) }$/;"	m
x	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	x { ^this.real }$/;"	m
xFadePerform	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xFadePerform { | selector, args |$/;"	m
xOffset	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  xOffset { arg int; ^this.gap; }$/;"	m
xOffset_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	xOffset_ { arg aval;$/;"	m
xOffset_	SCClassLibrary/QtCollider/QMultiSliderView.sc	/^  xOffset_ { arg int; this.gap_(int); }$/;"	m
xZoom	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	xZoom { ^2.0 ** zx }$/;"	m
xZoom	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	xZoom {$/;"	m
xZoom	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  xZoom { ^this.getProperty( \\xZoom ); }$/;"	m
xZoom	SCClassLibrary/QtCollider/QStethoscope.sc	/^  xZoom { ^2.0 ** zx }$/;"	m
xZoom	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  xZoom { ^(1024 * cycle.reciprocal) }$/;"	m
xZoom_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	xZoom_ { arg val;$/;"	m
xZoom_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	xZoom_ { arg val;$/;"	m
xZoom_	SCClassLibrary/QtCollider/QScope.sc	/^  xZoom_ { arg aFloat;$/;"	m
xZoom_	SCClassLibrary/QtCollider/QScope2.sc	/^  xZoom_ { arg aFloat;$/;"	m
xZoom_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  xZoom_ { arg seconds; this.setProperty( \\xZoom, seconds ); }$/;"	m
xZoom_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  xZoom_ { arg val;$/;"	m
xZoom_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  xZoom_ { arg val; this.cycle = 1024 * val.asFloat.reciprocal }$/;"	m
x_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	x_ { arg ax;$/;"	m
x_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	x_ { arg val;$/;"	m
x_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	x_ { arg val;$/;"	m
x_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  x_ { arg aFloat;$/;"	m
x_	SCClassLibrary/QtCollider/QScope.sc	/^  x_ { arg aFloat;$/;"	m
x_	SCClassLibrary/QtCollider/QScope2.sc	/^  x_ { arg aFloat;$/;"	m
x_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  x_ { arg aFloat;$/;"	m
xblock	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xblock { nextTask = nil; } \/\/ block any previous xsched$/;"	m
xmap	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xmap { | ... args |$/;"	m
xmapn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xmapn { | ... args |$/;"	m
xor	SCClassLibrary/Common/Core/AbstractFunction.sc	/^	xor { arg function, adverb; ^this.composeBinaryOp('xor', function, adverb) }$/;"	m
xor	SCClassLibrary/Common/Core/Boolean.sc	/^	xor { arg bool; ^(this === bool).not }$/;"	m
xor	quarks/cruciallib/UncoupledUsefulThings/Constraint.sc	/^	xor { arg constraint; ^Xor([this.constraint]) }$/;"	m
xplay	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^	xplay { arg fadeTime, argClock, doReset = false, quant=1.0;$/;"	m
xqsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xqsched { arg quantize,function;$/;"	m
xqsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xqsched { arg quantize,server,bundle,onArrival;$/;"	m
xrand	SCClassLibrary/Common/Math/Integer.sc	/^	xrand { arg exclude=0;$/;"	m
xrand2	SCClassLibrary/Common/Math/Float.sc	/^	xrand2 { ^this.rand2 }$/;"	m
xrand2	SCClassLibrary/Common/Math/Integer.sc	/^	xrand2 { arg exclude=0;$/;"	m
xsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xsched { arg beats,function;$/;"	m
xsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xsched { arg beats,server,bundle,onArrival;$/;"	m
xschedAtTime	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xschedAtTime { arg atTime,server,bundle;$/;"	m
xschedBundle	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xschedBundle { arg beatDelta,server,bundle;$/;"	m
xset	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xset { | ... args |$/;"	m
xsetn	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xsetn { | ... args |$/;"	m
xstop	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^	xstop { \/\/ stop after fade?$/;"	m
xstop	SCClassLibrary/JITLib/Patterns/extRoutine.sc	/^	xstop { arg fadeTime;$/;"	m
xtsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xtsched { arg seconds,function;$/;"	m
xtsched	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xtsched { arg seconds,server,bundle,onArrival;$/;"	m
xtschedAbs	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xtschedAbs { arg time,function;$/;"	m
xtschedFunc	quarks/cruciallib/Scheduling/OSCSched.sc	/^	xtschedFunc { arg seconds, function;$/;"	m
xunset	SCClassLibrary/JITLib/ProxySpace/NodeProxy.sc	/^	xunset { | ... args |$/;"	m
y	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	y {$/;"	m
y	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	y {$/;"	m
y	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  y {$/;"	m
y	SCClassLibrary/QtCollider/QSlider2D.sc	/^  y {$/;"	m
y	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	y { ^rho * sin(theta) * cos(phi) }$/;"	m
y	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	y { ^this.imag }$/;"	m
yZoom	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	yZoom { ^2.0 ** zy }$/;"	m
yZoom	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	yZoom {$/;"	m
yZoom	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  yZoom { ^this.getProperty( \\yZoom ); }$/;"	m
yZoom	SCClassLibrary/QtCollider/QStethoscope.sc	/^  yZoom { ^2.0 ** zy }$/;"	m
yZoom_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	yZoom_ { arg val;$/;"	m
yZoom_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	yZoom_ { arg val;$/;"	m
yZoom_	SCClassLibrary/QtCollider/QScope.sc	/^  yZoom_ { arg aFloat;$/;"	m
yZoom_	SCClassLibrary/QtCollider/QScope2.sc	/^  yZoom_ { arg aFloat;$/;"	m
yZoom_	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  yZoom_ { arg factor; this.setProperty( \\yZoom, factor.asFloat ); }$/;"	m
yZoom_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  yZoom_ { arg val;$/;"	m
yZoom_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  yZoom_ { arg val;$/;"	m
y_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	y_ { arg ay;$/;"	m
y_	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCView.sc	/^	y_ { arg val;$/;"	m
y_	SCClassLibrary/Common/GUI/osx/scide_scapp/ScopeView.sc	/^	y_ { arg val;$/;"	m
y_	SCClassLibrary/QtCollider/QEnvelopeView.sc	/^  y_ { arg aFloat;$/;"	m
y_	SCClassLibrary/QtCollider/QScope.sc	/^  y_ { arg aFloat;$/;"	m
y_	SCClassLibrary/QtCollider/QScope2.sc	/^  y_ { arg aFloat;$/;"	m
y_	SCClassLibrary/QtCollider/QSlider2D.sc	/^  y_ { arg aFloat;$/;"	m
yield	SCClassLibrary/Common/Core/Object.sc	/^	yield {$/;"	m
yieldAndReset	SCClassLibrary/Common/Core/Object.sc	/^	yieldAndReset { arg reset = true;$/;"	m
z	quarks/MathLib/classes/SpherCoords/Spherical.sc	/^	z { ^rho * sin(phi) }$/;"	m
z	quarks/MathLib/classes/SpherCoords/SystemOverwrites/extPoint.sc	/^	z { ^0 }$/;"	m
z	quarks/MathLib/classes/SpherCoords/extPolar.sc	/^	z { ^0 }$/;"	m
zTable	quarks/MathLib/classes/statistics/extStatistics.sc	/^	zTable { arg mean, stdDev;	\/\/ supply mean and stdDev if you can$/;"	m
zero	SCClassLibrary/Common/Control/Buffer.sc	/^	zero { arg completionMessage;$/;"	m
zero	quarks/cruciallib/Sample/Sample.sc	/^	zero { if(readyForPlay,{ buffer.zero }); array = Array.fill(array.size,0) }$/;"	m
zeroMsg	SCClassLibrary/Common/Control/Buffer.sc	/^	zeroMsg { arg completionMessage;$/;"	m
zeroPad	SCClassLibrary/Common/Collections/String.sc	/^	zeroPad {$/;"	m
zeroPad	SCClassLibrary/Common/Math/Signal.sc	/^	zeroPad { arg minSize;$/;"	m
zoom	SCClassLibrary/Common/GUI/ControlModel.sc	/^	zoom { |ratio = 1|$/;"	m
zoom	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	zoom {| factor |	\/\/ zoom factor n or 1\/n.$/;"	m
zoom	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  zoom { arg factor; this.invokeMethod( \\zoomBy, factor.asFloat ); }$/;"	m
zoom	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  zoom { ^this.xZoom }$/;"	m
zoomAllOut	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	zoomAllOut {$/;"	m
zoomAllOut	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  zoomAllOut { this.invokeMethod( \\zoomAllOut ); }$/;"	m
zoomFont	SCClassLibrary/Common/GUI/PlusGUI/Math/PlotView.sc	/^	zoomFont { |val|$/;"	m
zoomSelection	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	zoomSelection {| index |	\/\/ selection index$/;"	m
zoomSelection	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  zoomSelection { arg selection;$/;"	m
zoomToFrac	SCClassLibrary/Common/GUI/osx/scide_scapp/Base/SCSoundFileView.sc	/^	zoomToFrac { arg frac; \/\/ 0..1$/;"	m
zoomToFrac	SCClassLibrary/QtCollider/QSoundFileView.sc	/^  zoomToFrac { arg fraction; this.invokeMethod( \\zoomTo, fraction.asFloat ); }$/;"	m
zoom_	SCClassLibrary/Common/GUI/osx/scide_scapp/SCStethoscope.sc	/^	zoom_ { arg val; this.xZoom_(val ? 1) }$/;"	m
zoom_	SCClassLibrary/QtCollider/QStethoscope.sc	/^  zoom_ { arg val; this.xZoom_(val ? 1) }$/;"	m
zoom_	SCClassLibrary/QtCollider/QStethoscope2.sc	/^  zoom_ { arg val; this.xZoom_(val ? 1) }$/;"	m
